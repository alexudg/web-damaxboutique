{"version":3,"sources":["context/DataContext.js","components/header/logoDamax215x83.jpg","components/header/Header.jsx","components/welcome/Welcome.jsx","components/form/FormMessage.jsx","components/users/UserInput.jsx","components/buttons/BtnAccept.jsx","components/buttons/BtnPrimary.jsx","components/buttons/BtnDanger.jsx","components/buttons/BtnSecundary.jsx","components/modal_delete/ModalDelete.jsx","components/modal_information/ModalInformation.jsx","components/users/UsersList.jsx","components/users/UserForm.jsx","components/users/UserInsert.jsx","components/users/UserUpdate.jsx","components/users/UserChangePass.jsx","components/customers/CustomerInput.jsx","components/categories/Categories.jsx","components/categories/CategoryForm.jsx","components/articles/ArticlesList.jsx","components/articles/ArticleForm.jsx","components/products/Products.jsx","components/products/ProductDetail.jsx","components/customers/CustomersList.jsx","components/customers/CustomerForm.jsx","components/cart/Cart.jsx","components/footer/Footer.jsx","components/customer_authorized/CustomerOrdersList.jsx","components/form/FormCustomerPass.jsx","components/customer_authorized/CustomerPass.jsx","components/form/FormCustomerData.jsx","components/customer_authorized/CustomerData.jsx","components/modal_add_article/ModalAddArticle.jsx","components/orders/OrdersList.jsx","components/not_found/NotFound.jsx","components/customers/CustomerRegister.jsx","components/customers/CustomerActivation.jsx","components/customers/CustomerPassLost.jsx","components/customers/CustomerPassRestore.jsx","App.jsx","index.js"],"names":["ENDPOINT","TOKEN_DEFAULT","DataContext","createContext","DataProvider","children","useState","JSON","parse","window","sessionStorage","getItem","userSession","setUserSession","customerSession","setCustomerSession","localStorage","articlesCart","setArticlesCart","totalCart","setTotalCart","isReturnToCart","setIsReturnToCart","navigate","useNavigate","userCloseSession","useCallback","clear","customerCloseSession","fetchGet","params","a","token","fetch","method","headers","then","$res","text","txt","console","log","catch","error","alert","res","body","stringify","Provider","value","fetchPost","fetchPostInput","fetchPut","fetchDelete","Header","useContext","isCategoriesMenu","setIsCategoriesMenu","isUserMenu","setIsUserMenu","isCustomerMenu","setIsCustomerMenu","categories","setCategories","isShowFinder","setIsShowFinder","txtSearch","setTxtSearch","categoriesLoad","useEffect","length","timeOut","to","setTimeout","clearTimeout","toggleCategoryMenu","toggleUserMenu","toggleCustomerMenu","closeSessionCustomerClick","e","target","className","onClick","map","category","categoryName","id","src","logo","alt","type","name","placeholder","onChange","autoFocus","Welcome","FormMessage","msg","btnCloseClick","isSuccess","UserInput","email","pass","inputsTxt","setInputsTxt","setMsg","showFormMessage","formOnSubmit","preventDefault","isAuth","setItem","txtOnChange","onSubmit","required","BtnAccept","style","color","backgroundColor","BtnPrimary","BtnDanger","BtnSecundary","ModalDelete","isShowModal","subject","btnDeleteClick","btnCancelClick","ModalInformation","UsersList","users","setUsers","stateModalDelete","setStateModalDelete","isShowModalInfo","setIsShowModalInfo","data","loadUsers","onDelete","colSpan","textDecoration","user","userName","isAdmin","isActive","UserForm","confirm","setUser","isShowPass","setIsShowPass","loadUser","inputChange","checked","formSubmit","json","htmlFor","disabled","UserInsert","UserUpdate","useParams","history","replaceState","UserChangePass","current","isPassChanged","borderRadius","CustomerInput","txtInputs","setTxtInputs","txtChange","customer","Categories","isAvailable","CategoryForm","setCategory","loadCategory","Articles","articles","setArticles","articleSelected","setArticleSelected","articlesLoad","btnSeeClick","rowClick","tagName","row","document","getElementsByClassName","classList","remove","parentElement","getElementById","add","onKeyPress","key","article","articleName","price","width","display","ArticleForm","imgPath","imgBase64","idCategory","description","stock","setArticle","trim","height","accept","file","files","FileReader","fr","onload","result","readAsDataURL","marginLeft","Products","title","ProductDetail","qty","setQty","getArticle","i","findIndex","articleCart","Customers","customers","setCustomers","customerSelected","setCustomerSelected","customersLoad","fullname","phone","CustomerForm","streetAndNumber","suburb","cp","town","setCustomer","isContinue","customerLoad","undefined","Cart","idOrder","setIdOrder","articleWithoutStock","newTotal","reduce","total","forEach","updateArticlesCart","substractClick","addClick","Intl","NumberFormat","format","filter","minimumFractionDigits","Footer","CustomerOrdersList","orders","setOrders","orderSelected","setOrderSelected","itemsOrder","setItemsOrder","firstDate","Date","now","toLocaleDateString","lastDate","dates","setDates","loadItemsOrder","loadOrders","parseInt","order","dateChange","created","items","isDelivered","dateDelivered","item","amount","FormCustomerPass","inputsDefaultValues","inputs","setInputs","setIsSuccess","CustomerPass","customerId","FormCustomerData","isAutoRegister","loadCustomerData","readOnly","marginTop","fontSize","cursor","CustomerData","ModalAddArticle","btnAcceptClick","categoryNameSelected","setCategoryNameSelected","loadCategories","loadArticles","OrdersList","idOrderSelected","setIdOrderSelected","indexOrderSelected","setIndexOrderSelected","indexCustomerSelected","setIndexCustomerSelected","isDeleteOrder","isRestore","stateModalAddArticle","setStateModalAddArticle","loadCustomers","idCustomer","rowUnselect","onBtnDeleteClick","isSelectRow","reloadOrders","idArticle","maxFractionDigits","btnDeliverClick","textAlign","iconMinusClick","iconPlusClick","iconDeleteClick","maximumFractionDigits","find","NotFound","flexDirection","alignItems","CustomerRegister","CustomerActivation","setIdCustomer","getIdCustomerFromToken","CustomerPassLost","setEmail","formMessage","setFormMessage","CustomerPassRestore","App","path","element","RenderDOM","render"],"mappings":"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","file":"static/js/main.45222c90.chunk.js","sourcesContent":["import { createContext, useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n//const ENDPOINT = 'http://127.0.0.1/react_php-damax_boutique/backend'; // dev\r\nconst ENDPOINT = 'http://gucitex.com.mx/web-damaxboutique/backend'; // dist\r\nconst TOKEN_DEFAULT = '0eab84ea-917d-4817-9e33-c98caecf626d'; // only for getDataUserFromPass\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    // states \r\n    const [userSession, setUserSession] = useState(JSON.parse(window.sessionStorage.getItem('damax')));\r\n    const [customerSession, setCustomerSession] = useState(JSON.parse(window.sessionStorage.getItem('customer')));\r\n    const [articlesCart, setArticlesCart] = useState(\r\n        window.localStorage.getItem('cart')\r\n            ? JSON.parse(window.localStorage.getItem('cart'))\r\n            : []\r\n    );\r\n    const [totalCart, setTotalCart] = useState(0)\r\n    const [isReturnToCart, setIsReturnToCart] = useState(false)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const userCloseSession = useCallback(() => {\r\n        window.sessionStorage.clear();\r\n        setUserSession(null)\r\n        navigate('/');\r\n    }, [navigate])\r\n\r\n    const customerCloseSession = useCallback(() => {\r\n        window.sessionStorage.clear();\r\n        setCustomerSession(null);\r\n        navigate('/');\r\n    }, [navigate])\r\n\r\n    /*-------------- FETCH ----------------*/\r\n\r\n    // !import into useCallback for no-reload infinite\r\n    const fetchGet = useCallback(async (params, token = TOKEN_DEFAULT) => {\r\n        const res = await fetch(ENDPOINT + params, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            }\r\n        })\r\n            .then($res => $res.text())\r\n            .then(txt => {\r\n                console.log(txt)\r\n                console.log(JSON.parse(txt))\r\n                return JSON.parse(txt)\r\n            })\r\n            .catch(error => {\r\n                window.alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n                return null\r\n            })\r\n\r\n        // no authorized?\r\n        if (res !== null) {\r\n            //res['isAuth'] = false\r\n            if (!res['isAuth']) {\r\n                //console.log('EXIT SESSION')\r\n                if (userSession) userCloseSession()\r\n                else customerCloseSession()\r\n            }\r\n            delete res['isAuth']\r\n        }\r\n\r\n        return res\r\n    }, [userCloseSession, customerCloseSession, userSession])\r\n\r\n    // POST ONLY FOR INPUT USER-CUSTOMER\r\n    async function fetchPostInput(params, body, token = TOKEN_DEFAULT) {\r\n        const res = await fetch(ENDPOINT + params, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then($res => $res.text())\r\n            .then(txt => {\r\n                console.log(txt)\r\n                return JSON.parse(txt)\r\n            })\r\n            .catch(error => {\r\n                window.alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n                return null\r\n            })\r\n\r\n        return res\r\n    }\r\n\r\n    async function fetchPost(params, body, token = TOKEN_DEFAULT) {\r\n        const res = await fetch(ENDPOINT + params, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then($res => $res.text())\r\n            .then(txt => {\r\n                console.log(txt)\r\n                return JSON.parse(txt)\r\n            })\r\n            .catch(error => {\r\n                window.alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n                return null\r\n            })\r\n\r\n        // no authorized?\r\n        if (res !== null) {\r\n            //res['isAuth'] = false\r\n            if (!res['isAuth']) {\r\n                //console.log('EXIT SESSION')\r\n                if (userSession) userCloseSession()\r\n                else customerCloseSession()\r\n            }\r\n            delete res['isAuth']\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n    async function fetchPut(params, body, token = TOKEN_DEFAULT) {\r\n        const res = await fetch(ENDPOINT + params, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then($res => $res.text())\r\n            .then(txt => {\r\n                console.log(txt)\r\n                return JSON.parse(txt)\r\n            })\r\n            .catch(error => {\r\n                window.alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n                return null\r\n            })\r\n\r\n        // no authorized?\r\n        if (res !== null) {\r\n            //res['isAuth'] = false\r\n            if (!res['isAuth']) {\r\n                //console.log('EXIT SESSION')\r\n                if (userSession) userCloseSession()\r\n                else customerCloseSession()\r\n            }\r\n            delete res['isAuth']\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n    async function fetchDelete(params, body, token = TOKEN_DEFAULT) {\r\n        const res = await fetch(ENDPOINT + params, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then($res => $res.text())\r\n            .then(txt => {\r\n                console.log(txt)\r\n                return JSON.parse(txt)\r\n            })\r\n            .catch(error => {\r\n                window.alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n                return null\r\n            })\r\n\r\n        // no authorized?\r\n        if (res !== null) {\r\n            //res['isAuth'] = false\r\n            if (!res['isAuth']) {\r\n                //console.log('EXIT SESSION')\r\n                if (userSession) userCloseSession()\r\n                else customerCloseSession()\r\n            }\r\n            delete res['isAuth']\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={{\r\n            // ----- FETCH ------\r\n            fetchGet,\r\n            fetchPost,\r\n            fetchPostInput,\r\n            fetchPut,\r\n            fetchDelete,\r\n            // ----- USER-SESSION ------\r\n            userSession,\r\n            setUserSession,\r\n            userCloseSession,\r\n            //------ CART\r\n            articlesCart,\r\n            setArticlesCart,\r\n            totalCart,\r\n            setTotalCart,\r\n            //------ CUSTOMER-SESSION\r\n            customerSession,\r\n            setCustomerSession,\r\n            customerCloseSession,\r\n            isReturnToCart,\r\n            setIsReturnToCart\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n}","export default __webpack_public_path__ + \"./web-damaxboutique/static/media/logoDamax215x83.a8372eeb.jpg\";","// react\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router'\r\nimport { Link } from \"react-router-dom\";\r\n// icons\r\nimport { AiOutlineClose, AiOutlineMenu, AiOutlineUser, AiOutlineSearch, AiOutlineShoppingCart, AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { CgUserList } from 'react-icons/cg';\r\n// context\r\nimport { DataContext } from \"../../context/DataContext\";\r\n// img\r\nimport logo from './logoDamax215x83.jpg';\r\n// css\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n    // context\r\n    const {\r\n        fetchGet,\r\n        userSession,\r\n        userCloseSession,\r\n        customerSession,\r\n        customerCloseSession,\r\n        articlesCart\r\n    } = useContext(DataContext);\r\n\r\n    // states\r\n    const [isCategoriesMenu, setIsCategoriesMenu] = useState(false);\r\n    const [isUserMenu, setIsUserMenu] = useState(false);\r\n    const [isCustomerMenu, setIsCustomerMenu] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [isShowFinder, setIsShowFinder] = useState(false)\r\n    const [txtSearch, setTxtSearch] = useState('')    \r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const categoriesLoad = useCallback(async () => {\r\n        let res = await fetchGet('/index.php?fn=getAllCategories');\r\n        //console.log('res:', res); // { categories[?] }\r\n        if (res !== null) setCategories(res['categories'])\r\n    }, [fetchGet])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> effect Header');\r\n\r\n        setIsShowFinder(false) // hide finder\r\n        setTxtSearch('') // clear text finder\r\n\r\n        if (categories.length === 0) categoriesLoad() // only load the first time\r\n\r\n        return () => { 'effect Header BYE' }\r\n\r\n    }, [categoriesLoad, categories.length]);\r\n\r\n    const timeOut = useCallback(() => {\r\n        //console.log('timeOut()')\r\n        if (txtSearch.length > 0) {\r\n            navigate(`/productos/texto/${txtSearch}`)\r\n        }\r\n    }, [navigate, txtSearch])\r\n\r\n    useEffect(() => {\r\n        //console.log('txt real-time:', txtSearch) \r\n\r\n        // let to\r\n        // if (isFirstLoad) {\r\n        //     setIsFirstLoad(false)\r\n        //     to = setTimeout(timeOut, 1000)\r\n        // }\r\n        const to = setTimeout(timeOut, 1000)\r\n        \r\n        return () => {\r\n            clearTimeout(to)\r\n        }\r\n    }, [txtSearch, timeOut])\r\n\r\n    const toggleCategoryMenu = () => {\r\n        setIsCategoriesMenu(!isCategoriesMenu);\r\n    }\r\n\r\n    const toggleUserMenu = () => {\r\n        setIsUserMenu(!isUserMenu);\r\n    }\r\n\r\n    const toggleCustomerMenu = () => {\r\n        setIsCustomerMenu(!isCustomerMenu);\r\n    }\r\n\r\n    const closeSessionClick = () => {\r\n        //console.log(\"closeSessionClick()\");\r\n        toggleUserMenu();\r\n\r\n        // clear sessionStorage\r\n        userCloseSession()\r\n    }\r\n\r\n    const closeSessionCustomerClick = () => {\r\n        // close menu right of customer if is open\r\n        if (isCustomerMenu) setIsCustomerMenu(false);\r\n\r\n        // clear sessionStorage\r\n        customerCloseSession()\r\n    }\r\n\r\n    function iconFinderClick() {\r\n        setIsShowFinder(!isShowFinder)\r\n    }\r\n\r\n    function iconCloseFinderClick() {\r\n        setIsShowFinder(false)\r\n        setTxtSearch('')\r\n    }\r\n\r\n    async function inputChange(e) {\r\n        setTxtSearch(e.target.value)                     \r\n    }\r\n\r\n    function headerClick(e) {\r\n        //console.log(e.target)\r\n        if (isShowFinder) setIsShowFinder(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className={userSession ? 'Header isUserSession' : customerSession ? 'Header isCustomerSession' : 'Header'} onClick={headerClick}>\r\n \r\n                {/* --------------------- SIDEBAR LEFT MENU CATEGORIES ---------------------------------- */}\r\n                <nav className={isCategoriesMenu ? 'Header-menu-categories active' : 'Header-menu-categories'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleCategoryMenu} />\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCategoryMenu}>INICIO</li>\r\n                        </Link>\r\n                        <hr />\r\n\r\n                        {//------------------- LOAD CATEGORIES ---------------------//\r\n                            categories.map(category =>\r\n                                category['isAvailable'] &&\r\n                                <div key={category.id}>\r\n                                    <hr />\r\n                                    {/* <Link to={`/productos/${category.categoryName}/true`} className='Header-link-item'> */}\r\n                                    <Link to={`/productos/categoria/${category.categoryName}`} className='Header-link-item'>\r\n                                        <li className=\"Header-item\" onClick={toggleCategoryMenu}>{category.categoryName}</li>\r\n                                    </Link>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        {/*\r\n                        <>\r\n                            <Link to=\"/products/cadenas\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>CADENAS Y CHOKERS</li>\r\n                            </Link>\r\n                            <hr />\r\n                            <Link to=\"/products/collares\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>COLLARES</li>\r\n                            </Link>\r\n                            <hr />\r\n                            <Link to=\"/products/personalizados\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>PERSONALIZADOS</li>\r\n                            </Link>\r\n                        </>\r\n                    */}\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    {  //---------------- only if not user in session -----------------//\r\n                        !userSession && !customerSession &&\r\n                        <Link to=\"/input\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={toggleCategoryMenu}>Cuenta</p>\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        customerSession &&\r\n                        <Link to=\"/input\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={closeSessionCustomerClick}>Cerrar sesión</p>\r\n                        </Link>\r\n                    }\r\n                </nav>\r\n\r\n                {/* --------------- ICON LEFT MENU CATEGORIES-------------- */}\r\n                <AiOutlineMenu className='Header-icon-burguer' onClick={toggleCategoryMenu} />\r\n\r\n                {/* ---------------- LOGO ---------------- */}\r\n                <Link to='/'>\r\n                    <img className='HeaderImg' src={logo} alt=\"logo\" />\r\n                </Link>\r\n\r\n                { //------------- ICONS CUSTOMERS only if not user in session ----------------//            \r\n                    !userSession &&\r\n                    <nav className=\"NavRight\">\r\n                        {\r\n                            !customerSession &&\r\n                            <Link to=\"/input\">\r\n                                <AiOutlineUser className=\"Header-icon-user\" />\r\n                            </Link>\r\n                        }\r\n                        <AiOutlineSearch className=\"Header-icon-search\" onClick={iconFinderClick} />\r\n                        <Link to=\"/carrito\">\r\n                            <div className=\"Header-container-cart\">\r\n                                <AiOutlineShoppingCart className=\"Header-icon-cart\" />\r\n                                {\r\n                                    articlesCart.length > 0 &&\r\n                                    <span>{articlesCart.length}</span>\r\n                                }\r\n                            </div>\r\n                        </Link>\r\n                        {\r\n                            customerSession &&\r\n                            <>\r\n                                <CgUserList className=\"Header-icon-menu-customer\" onClick={toggleCustomerMenu} />\r\n                                <span className=\"Header-customeremail\">{customerSession['email']}</span>\r\n                            </>\r\n                        }\r\n                    </nav>\r\n                }\r\n\r\n                { //----------- username and icon user menu;  only if exists session -----------//           \r\n                    userSession &&\r\n                    <>\r\n                        <CgUserList className='Header-icon-burguer' onClick={toggleUserMenu} />\r\n                        <span className=\"Header-username\">{userSession['userName']}</span>\r\n                    </>\r\n                }\r\n\r\n                {/* --------------------- RIGHT SIDEBAR USER MENU ---------------------------------- */}\r\n                <nav className={isUserMenu ? 'Header-menu-user active' : 'Header-menu-user'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleUserMenu} />\r\n                    {\r\n                        userSession &&\r\n                        <p>{userSession['userName']}</p>\r\n                    }\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/categories\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>CATEGORIAS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/articles\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>ARTÍCULOS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/customers\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>CLIENTES</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/orders\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>PEDIDOS</li>\r\n                        </Link>\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    { //------------ only if user is super-admin ---------------//\r\n                        userSession && userSession['id'] === 0 &&\r\n                        <Link to=\"/users\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={toggleUserMenu}>Usuarios</p>\r\n                        </Link>\r\n                    }\r\n                    <Link to=\"/user-pass\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleUserMenu}>Cambiar contraseña</p>\r\n                    </Link>\r\n                    <Link to=\"/\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={closeSessionClick}>Cerrar sesión</p>\r\n                    </Link>\r\n                </nav>\r\n\r\n                {/* --------------------- RIGHT SIDEBAR CUSTOMER MENU ---------------------------------- */}\r\n                <nav className={isCustomerMenu ? 'Header-menu-customer active' : 'Header-menu-customer'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleCustomerMenu} />\r\n                    {\r\n                        customerSession &&\r\n                        <p>{customerSession['email']}</p>\r\n                    }\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/customer-orders\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCustomerMenu}>MIS PEDIDOS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"#\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCustomerMenu}>ESTADO DE CUENTA</li>\r\n                        </Link>\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    {/* --------------------- DATA CUSTOMER AND CLOSE SESSION ---------------------- */}\r\n                    <Link to=\"/customer-data\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleCustomerMenu}>Mis datos</p>\r\n                    </Link>\r\n                    <Link to=\"/customer-pass\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleCustomerMenu}>Cambiar contraseña</p>\r\n                    </Link>\r\n                    <Link to=\"/input\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={closeSessionCustomerClick}>Cerrar sesión</p>\r\n                    </Link>\r\n                </nav>\r\n            </header>\r\n            {\r\n                isShowFinder &&\r\n                <section className='Header-finder'>\r\n                    <AiOutlineSearch className=\"Header-finder-icon\" />\r\n                    <input\r\n                        type=\"search\"\r\n                        name=\"search\"\r\n                        placeholder='BUSCAR...'\r\n                        value={txtSearch}\r\n                        onChange={inputChange}\r\n                        autoFocus={isShowFinder}\r\n                    />\r\n                    <AiOutlineCloseCircle className=\"Header-finder-icon close\" onClick={iconCloseFinderClick} />\r\n                </section>\r\n            }\r\n        </>\r\n    );\r\n}","export default function Welcome() {\r\n    return (\r\n        <h3>Bienvenidos</h3>\r\n    );\r\n}","// React\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n// css\r\nimport './FormMessage.css';\r\n\r\nexport default function FormMessage({msg, btnCloseClick, isSuccess = false}) {\r\n    \r\n    return (\r\n        <div className={isSuccess ? 'FormMessageWrapper success' : 'FormMessageWrapper'} id='formMessageWrapper'>\r\n            <AiOutlineCloseCircle className='FormMessageIcon' onClick={btnCloseClick} />\r\n            <pre>{msg}</pre> {/* pre-formatter with line breaks */}\r\n        </div>\r\n    );\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useContext } from \"react\";\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport FormMessage from \"../form/FormMessage\";\r\n\r\nexport default function UserInput() {\r\n    // context\r\n    const { fetchPostInput, userSession, setUserSession } = useContext(DataContext);\r\n\r\n    // states\r\n    const [inputsTxt, setInputsTxt] = useState({\r\n        email: '',\r\n        pass: '',\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // only first load\r\n    useEffect(() => {\r\n        //console.log('useEffect UserInput');\r\n        if (userSession) navigate('/');\r\n    }, [userSession, navigate]);\r\n\r\n    const showFormMessage = (msg) => {\r\n        setMsg(msg);\r\n    }\r\n\r\n    const formOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let res = await fetchPostInput('/user.php?fn=getDataUserFromPass', inputsTxt); // with token = TOKEN_DEFAULT\r\n        setInputsTxt({\r\n            email: '',\r\n            pass: ''\r\n        })        \r\n        \r\n        if (res.isAuth) {\r\n            res = res['user']\r\n            // console.log(json['isActive']);\r\n            // return;\r\n\r\n            if (res['isActive']) {\r\n                // clear and save user on sessionStorage\r\n                window.sessionStorage.clear()\r\n                window.sessionStorage.setItem('damax', JSON.stringify(res));\r\n\r\n                // update user-on-session-state\r\n                setUserSession(res);\r\n\r\n                // redirect to root\r\n                //navigate('/'); // import useNavigate from react-router-dom\r\n            }\r\n            else showFormMessage('El usuario no está activo')\r\n        }\r\n        else showFormMessage('Correo y/o contraseña incorrecta');        \r\n    }\r\n\r\n    const txtOnChange = (e) => {\r\n        //console.log(e.target.value);        \r\n        setInputsTxt({\r\n            ...inputsTxt,\r\n            [e.target.name]: e.target.value // same name inputs and variables\r\n        });\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        !userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>INGRESO DE USUARIO AUTORIZADO</h3>\r\n                <form onSubmit={formOnSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder='Correo'\r\n                        value={inputsTxt.email}\r\n                        onChange={txtOnChange}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"pass\"\r\n                        placeholder='Contraseña'\r\n                        value={inputsTxt.pass}\r\n                        onChange={txtOnChange}\r\n                        required\r\n                    />\r\n                    {/* <Link to=\"/\">\r\n                <span>Olvidé mi contraseña</span>\r\n            </Link> */}\r\n                    <input type=\"submit\" value=\"INICIAR SESIÓN\" />\r\n                </form>\r\n                {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nconst BtnAccept = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn Btn-accept'\r\n      onClick={onClick}  \r\n      style={{\r\n        color: 'white',\r\n        backgroundColor: 'rgb(0, 187, 0)'\r\n      }}    \r\n    >{text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BtnAccept","import React from 'react'\r\n\r\nconst BtnPrimary = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn'\r\n      onClick={onClick}  \r\n      style={{\r\n        color: 'white',\r\n        backgroundColor: 'dodgerblue'\r\n      }}    \r\n    >{text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BtnPrimary","import React from 'react'\r\n\r\nconst BtnDanger = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn'\r\n      onClick={onClick}  \r\n      style={{        \r\n        backgroundColor: 'salmon'\r\n      }}    \r\n    >{text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BtnDanger","import React from 'react'\r\n\r\nconst BtnSecundary = ({text, onClick}) => {\r\n  return (\r\n    <button className='Btn Btn-secundary' onClick={onClick}>{text}</button>\r\n  )\r\n}\r\n\r\nexport default BtnSecundary","// components\r\nimport BtnDanger from '../buttons/BtnDanger';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// css\r\nimport './ModalDelete.css';\r\n\r\nconst ModalDelete = ({ isShowModal, subject, btnDeleteClick, btnCancelClick }) => {\r\n    \r\n  return (\r\n    <div className={isShowModal ? 'Modal-delete active' : 'Modal-delete'}>\r\n      <div className='Modal-card'>\r\n        <h3>Eliminar</h3>\r\n        <p>{subject}</p>\r\n        <div className='Modal-actions'>\r\n          <BtnDanger text='Eliminar' onClick={btnDeleteClick}/>\r\n          <BtnSecundary text='Cancelar' onClick={btnCancelClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalDelete","// components\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// css\r\nimport './ModalInformation.css';\r\n\r\nconst ModalInformation = ({ isShowModal, subject, btnCloseClick }) => {\r\n    \r\n  return (\r\n    <div className={isShowModal ? 'Modal-information active' : 'Modal-information'}>\r\n      <div className='Modal-card'>\r\n        <h3>Eliminar</h3>\r\n        <p>{subject}</p>\r\n        <div className='Modal-actions'>\r\n          <BtnSecundary text='Cerrar' onClick={btnCloseClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInformation","// React\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { DataContext } from \"../../context/DataContext\";\r\n// components\r\nimport BtnAccept from \"../buttons/BtnAccept\";\r\nimport BtnPrimary from \"../buttons/BtnPrimary\";\r\nimport BtnDanger from \"../buttons/BtnDanger\";\r\nimport ModalDelete from \"../modal_delete/ModalDelete\";\r\nimport ModalInformation from \"../modal_information/ModalInformation\";\r\n\r\nexport default function UsersList() {\r\n    // context\r\n    const { fetchGet, fetchDelete, userSession } = useContext(DataContext);\r\n    // states    \r\n    const [users, setUsers] = useState([]);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [isShowModalInfo, setIsShowModalInfo] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect UsersList');\r\n\r\n        async function loadUsers() {\r\n            let data = await fetchGet('/user.php?fn=getAllUsers', userSession['token']);\r\n            //console.log(data);\r\n\r\n            if (data !== null) setUsers(data['users']);\r\n        }\r\n\r\n        if (userSession && userSession['id'] === 0) loadUsers();\r\n        else navigate('/not-found')\r\n    }, [fetchGet, userSession, stateModalDelete, navigate]); // when change on modalDelete for refresh users\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('before: ', stateModalDelete);\r\n\r\n        if (id !== 0) {\r\n            setStateModalDelete({\r\n                isShowModal: true, // show-Modal\r\n                id: id // only change id\r\n            });\r\n            //console.log('after: ', stateModalDelete);\r\n        }\r\n        else setIsShowModalInfo(true);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n        const json = await fetchDelete(\r\n            '/user.php?fn=deleteUser',\r\n            {\r\n                id: stateModalDelete['id']\r\n            },\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null)\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const btnCloseClick = () => {\r\n        setIsShowModalInfo(false);\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className=\"Wrapper-flex\">\r\n            <table className=\"Table\">\r\n                <caption><h2>Lista de usuarios</h2></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={4}></td>\r\n                        <td>\r\n                            <Link to=\"/user-insert\" className=\"Table-link-add\" style={{ textDecoration: 'none' }}>\r\n                                <BtnAccept text='Nuevo' />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Usuario</th>\r\n                        <th>Correo</th>\r\n                        <th>Administrador</th>\r\n                        <th>Activo</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(user =>\r\n                            <tr key={user.id}>\r\n                                <td>{user.userName}</td>\r\n                                <td>{user.email}</td>\r\n                                <td className=\"Table-cell-center\">{user.isAdmin && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td className=\"Table-cell-center\">{user.isActive && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td>\r\n                                    <BtnPrimary text='Modificar' onClick={() => navigate(`/user-update/${user.id}`)} />\r\n                                    <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(user.id)} />\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colSpan={5}>{users.length} usuarios</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject='¿Estás segur@ de eliminar el usuario?'\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n            <ModalInformation\r\n                isShowModal={isShowModalInfo}\r\n                subject='El usuario no puede ser eliminado porque es el super-admin'\r\n                btnCloseClick={btnCloseClick}\r\n            />\r\n        </div>\r\n    );\r\n}","// React\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// css\r\nimport './UserForm.css';\r\n\r\nexport default function UserForm({ id }) {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, userSession } = useContext(DataContext);\r\n    // states\r\n    const [user, setUser] = useState({\r\n        id: -1, // for verify if email exists\r\n        userName: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        isActive: true,\r\n        pass: '',\r\n        confirm: ''\r\n    });\r\n    const [isShowPass, setIsShowPass] = useState(false)\r\n    const [msg, setMsg] = useState('');\r\n    // navigate\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('Effect UserForm');\r\n\r\n        async function loadUser(id) {\r\n            let data = await fetchGet('/user.php?fn=getUser&id=' + id, userSession['token']);\r\n            //console.log(data);\r\n\r\n            //data['isAuth'] = false; // test for close session\r\n            if (data !== null) {\r\n                data = data['user'];\r\n                data['pass'] = '';\r\n                data['confirm'] = '';\r\n                setUser(data);\r\n            }            \r\n        }\r\n\r\n        if (userSession) {\r\n            if (id) loadUser(id);\r\n            else setIsShowPass(true);\r\n        }\r\n        else navigate('/not-found')\r\n\r\n        return () => { \r\n            //console.log('Effect UserForm BYE') \r\n        }\r\n    }, [id, userSession, msg, fetchGet, navigate]);\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target);\r\n        const { name, value } = e.target; // extract name of Element and value\r\n        //console.log('user: ', user);\r\n        setUser({\r\n            ...user, // copy object (same values)\r\n            [name]: name !== 'isAdmin' && name !== 'isActive' ? value : e.target.checked // only change Element named 'name'\r\n        });\r\n    }\r\n\r\n    const toggleShowPass = (e) => {\r\n        //console.log(e.target.checked);\r\n        setIsShowPass(e.target.checked);\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('user before save: ', user);\r\n\r\n        // verify if email exists\r\n        let json = await fetchGet(`/user.php?fn=isExistsEmail&email=${user['email']}&id=${user['id']}`, userSession['token']);\r\n        //console.log(json);\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsEmail']) {\r\n\r\n                // verify if pass = confirm\r\n                if (user['pass'] === user['confirm']) {\r\n\r\n                    // update\r\n                    if (id) {\r\n                        json = await fetchPut('/user.php?fn=updateUser',\r\n                            user,\r\n                            userSession['token']);\r\n                        //console.log(json);\r\n                    }\r\n                    // insert\r\n                    else {\r\n                        json = await fetchPost('/user.php?fn=insertUser',\r\n                            user,\r\n                            userSession['token']);\r\n                        //console.log(json);\r\n                    }\r\n                    navigate('/users');\r\n                }\r\n                else setMsg('La contraseña y su confirmación son diferentes');\r\n            }\r\n            else setMsg('El correo ya existe');\r\n        }\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className=\"Card\">            \r\n            <h4>{id ? 'Modificando usuario' : 'Agregando usuario'}</h4>\r\n            <form className='Form-user' onSubmit={formSubmit}>\r\n                <label htmlFor=\"userName\">Usuario</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id='userName'\r\n                    name=\"userName\"\r\n                    value={user.userName}\r\n                    onChange={inputChange}\r\n                    autoFocus\r\n                    required />\r\n                <label htmlFor=\"email\">Correo</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id='email'\r\n                    name=\"email\"\r\n                    value={user.email}\r\n                    onChange={inputChange}\r\n                    required />\r\n                <label htmlFor=\"isAdmin\">Administrador</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id='isAdmin'\r\n                    name=\"isAdmin\"\r\n                    checked={user.isAdmin}\r\n                    onChange={inputChange}\r\n                    disabled={user.id === 0}\r\n                />\r\n                <label htmlFor=\"isActive\">Activo</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id='isActive'\r\n                    name=\"isActive\"\r\n                    checked={user.isActive}\r\n                    onChange={inputChange}\r\n                    disabled={user.id === 0}\r\n                />\r\n                {  // show only if editing\r\n                    id &&\r\n                    <>\r\n                        <label htmlFor=\"password\">Cambiar contraseña</label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"isShowPass\"\r\n                            onChange={toggleShowPass}\r\n                        />\r\n                    </>\r\n                }\r\n                { // show only if above checkbox is checked\r\n                    isShowPass &&\r\n                    <div className='Form-user-pair-pass'>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Contraseña</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                value={user.pass}\r\n                                onChange={inputChange}\r\n                                required={id || isShowPass /* with id or user-editing with checked-showPass*/}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"confirm\">Confirmar</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"confirm\"\r\n                                value={user.confirm}\r\n                                onChange={inputChange}\r\n                                required={id || isShowPass /* with id or user-editing with checked-showPass */}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <div className='Form-user-actions'>\r\n                    <BtnPrimary text='Guardar' type='submit' />\r\n                    <BtnSecundary text='Cancelar' onClick={() => navigate('/users')} />\r\n                </div>\r\n\r\n                { // show only if msg !== ''\r\n                    msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","// components\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport default function UserInsert({fetchPost}) {\r\n    return (\r\n        <div className=\"Wrapper-flex\">            \r\n            <UserForm fetchPost={fetchPost} />\r\n        </div>\r\n    );\r\n}","import { useContext, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useParams } from 'react-router-dom'\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n// components\r\nimport UserForm from \"./UserForm\"\r\n\r\nexport default function UserUpdate() {\r\n    // context\r\n    const { userSession } = useContext(DataContext)\r\n    // navigate\r\n    const navigate = useNavigate()\r\n    const params = useParams(); // important!\r\n    \r\n    useEffect(() => {\r\n      if (userSession) {\r\n          // url hide param\r\n        window.history.replaceState(null, '', '/user-update')\r\n      }\r\n      else navigate('/not-found')    \r\n      return () => {}\r\n    }, [navigate, userSession])\r\n    \r\n    \r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>            \r\n            <UserForm id={params['id']}/>\r\n        </div>\r\n    );\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useContext } from \"react\";\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport FormMessage from \"../form/FormMessage\";\r\n\r\nexport default function UserChangePass() {\r\n\r\n    // context\r\n    const { userSession, fetchPost } = useContext(DataContext);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [inputsTxt, setInputsTxt] = useState({\r\n        current: '',\r\n        pass: '',\r\n        confirm: '',\r\n        isPassChanged: false\r\n    });\r\n\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // only first load\r\n    useEffect(() => {\r\n        //console.log('useEffect UserChangePass');\r\n        if (!userSession) navigate('/not-found');\r\n    });\r\n\r\n    const showFormMessage = (msg) => {\r\n        setMsg(msg);\r\n    }\r\n\r\n    const formOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // verify current pass\r\n        let res = await fetchPost(\r\n            'user.php?fn=isPassOk',\r\n            {\r\n                pass: inputsTxt.current,\r\n                id: userSession.id\r\n            },\r\n            userSession.token\r\n        );\r\n        //console.log(res);\r\n        let data = JSON.parse(res);\r\n        if (data !== null) {\r\n            setMsg('');\r\n            if (data['isPassOk']) {\r\n                // verify if new pass = confirm\r\n                if (inputsTxt.pass === inputsTxt.confirm) {\r\n                    res = await fetchPost(\r\n                        'user.php?fn=setUserPass',\r\n                        {\r\n                            pass: inputsTxt.pass,\r\n                            id: userSession.id\r\n                        },\r\n                        userSession.token\r\n                    );\r\n                    //console.log(res);\r\n                    data = JSON.parse(res);\r\n                    if (data !== null) {\r\n                        if (data['isPassChanged']) {\r\n                            setInputsTxt({\r\n                                current: '',\r\n                                pass: '',\r\n                                confirm: '',\r\n                                isPassChanged: true\r\n                            });\r\n                            setMsg('Contraseña ha sido actualizada');\r\n                        }\r\n                    }\r\n                }\r\n                else showFormMessage('Nueva contraseña y su confirmación son diferentes');\r\n            }\r\n            else showFormMessage('Contraseña actual incorrecta');\r\n        }\r\n    }\r\n\r\n    const txtOnChange = (e) => {\r\n        //console.log(e.target.value);        \r\n        setInputsTxt({\r\n            ...inputsTxt, // copy same data\r\n            [e.target.name]: e.target.value // only update input changued\r\n        });\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>CAMBIAR CONTRASEÑA DE USUARIO</h3>\r\n                { // only if isPassChange = false\r\n                    !inputsTxt.isPassChanged &&\r\n                    <form onSubmit={formOnSubmit}>\r\n                        <input type=\"password\" name=\"current\" placeholder='Contraseña actual' onChange={txtOnChange} required />\r\n                        <input type=\"password\" name=\"pass\" placeholder='Nueva contraseña' onChange={txtOnChange} required />\r\n                        <input type=\"password\" name=\"confirm\" placeholder='Confirmar nueva contraseña' onChange={txtOnChange} required />\r\n                        <input type=\"submit\" value=\"CAMBIAR\" style={{backgroundColor: 'dodgerblue', borderRadius: '5px'}}/>\r\n                    </form>\r\n\r\n                }\r\n                {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} isSuccess={inputsTxt.isPassChanged} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n\r\nexport default function CustomerInput() {\r\n    // context\r\n    const { fetchPostInput, customerSession, setCustomerSession, isReturnToCart, setIsReturnToCart } = useContext(DataContext)\r\n    // states\r\n    const [txtInputs, setTxtInputs] = useState({\r\n        email: '',\r\n        pass: ''\r\n    })    \r\n    const [msg, setMsg] = useState('')\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect-CustomerInput')\r\n\r\n        if (customerSession) navigate('/')\r\n\r\n        return () => { \r\n            //console.log('useEffect-CustomerInput BYE') \r\n        }\r\n    }, [customerSession, navigate])\r\n\r\n    const txtChange = (e) => {\r\n        //console.log(e.target)\r\n        setTxtInputs({\r\n            ...txtInputs,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let res = await fetchPostInput('/customer_authorized.php?fn=getDataCustomerFromPass', txtInputs)\r\n        setTxtInputs({\r\n            email: '',\r\n            pass: ''\r\n        })\r\n        //('res onSubmit:', res)\r\n\r\n        // email and pass OK?\r\n        if (res.isAuth) {\r\n            res = res.customer\r\n            //console.log(res);\r\n            if (res.isActive) {\r\n                // save data on local-storage\r\n                window.sessionStorage.clear()\r\n                window.sessionStorage.setItem('customer', JSON.stringify(res))\r\n                setCustomerSession(res);\r\n                // verify if comming from cart\r\n                if (isReturnToCart) {\r\n                    //console.log('isReturnToCart')\r\n                    setIsReturnToCart(false)\r\n                    navigate('/carrito')\r\n                }\r\n                else navigate('/')\r\n            }\r\n            else setMsg('Tu cuenta no está activada')\r\n        }\r\n        else setMsg('Correo y/o contraseña incorrecta')\r\n        setTxtInputs({\r\n            ...txtInputs, // same values\r\n            pass: '' // only change 1 property\r\n        })\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        !customerSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>INICIA SESIÓN</h3>\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={txtInputs.email}\r\n                        onChange={txtChange}\r\n                        placeholder='Correo'\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"pass\"\r\n                        value={txtInputs.pass}\r\n                        onChange={txtChange}\r\n                        placeholder='Contraseña'\r\n                        required\r\n                    />\r\n                    <Link to=\"/customer-pass-lost\">\r\n                        <span>Olvidé mi contraseña</span>\r\n                    </Link>\r\n                    <input type=\"submit\" value=\"INICIAR SESIÓN\" />\r\n                </form>\r\n                <p>No tienes una cuenta? <Link to=\"/customer-register\">Crear una cuenta</Link></p>\r\n                {\r\n                    msg !== '' &&\r\n                    <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnDanger from '../buttons/BtnDanger';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n\r\nconst Categories = () => {\r\n    //console.log('>>> Categories load...');\r\n\r\n    // context\r\n    const { fetchGet, fetchDelete, userSession } = useContext(DataContext);\r\n\r\n    // states\r\n    const [categories, setCategories] = useState([]);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Categories');\r\n\r\n        async function categoriesLoad() {\r\n            // load categories\r\n            const json = await fetchGet('/category.php?fn=getAllCategories', userSession['token']);\r\n            //console.log(json);\r\n\r\n            if (json !== null) setCategories(json['categories'])\r\n        }\r\n\r\n        if (userSession) categoriesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => { \r\n            //console.log('useEffect bye') \r\n        }\r\n\r\n    }, [fetchGet, navigate, userSession, stateModalDelete]);\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n        const json = await fetchDelete(\r\n            '/category.php?fn=deleteCategory',\r\n            {\r\n                id: stateModalDelete['id']\r\n            },\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null)\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <table className=\"Table\">\r\n                <caption><h2>Categorías</h2></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={2}></td>\r\n                        <td>\r\n                            <Link to=\"/category-insert\" className=\"Table-link-add\" style={{ textDecoration: 'none' }}>\r\n                                <BtnAccept text='Nueva' />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Descripción</th>\r\n                        <th>Disponible</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        categories.map(category =>\r\n                            <tr key={category.id}>\r\n                                <td>{category.categoryName}</td>\r\n                                <td className=\"Table-cell-center\">{category.isAvailable && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                { // only if is admin\r\n                                    userSession.isAdmin &&\r\n                                    <td>\r\n                                        <BtnPrimary text='Modificar' onClick={() => navigate(`/category-update/${category.id}`)} />\r\n                                        <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(category.id)} />\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        {/* <td colSpan={5}>{users.length} usuarios</td> */}\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar la categoría y todos sus productos?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories","// React\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n\r\nexport default function CategoryForm() {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, userSession } = useContext(DataContext);\r\n\r\n    // states\r\n    const [category, setCategory] = useState({\r\n        id: -1, // for verify if email exists\r\n        categoryName: '',\r\n        isAvailable: true\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // read param\r\n    const params = useParams(); // important!\r\n    const id = params['id'];\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect UserForm');\r\n\r\n        async function loadCategory(id) {\r\n            const json = await fetchGet('/category.php?fn=getCategory&id=' + id, userSession['token']);\r\n            //console.log(json);\r\n            if (json !== null) setCategory(json['category']);            \r\n        }\r\n\r\n        if (userSession) {\r\n            if (id) loadCategory(id);\r\n        }\r\n        else navigate('/not-found')\r\n\r\n    }, [id, fetchGet, navigate, userSession, msg]);\r\n    \r\n    const inputChange = (e) => {\r\n        //console.log(e.target);\r\n        const { name, value } = e.target; // extract name of Element and value\r\n        //console.log('category: ', category);\r\n        setCategory({\r\n            ...category, // copy object (same values)\r\n            [name]: name !== 'isAvailable' ? value : e.target.checked // only change Element named 'name'\r\n        });\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('category before save: ', category);\r\n\r\n        // verify if categoryName exists\r\n        let json = await fetchGet(`/category.php?fn=isExistsCategory&categoryName=${category['categoryName']}&id=${category['id']}`, userSession['token']);\r\n        //console.log(res);                \r\n\r\n        if (!json['isExistsCategory']) {\r\n            //console.log('id before update-insert: ', category['id']);\r\n\r\n            // update\r\n            if (category['id'] > -1) {\r\n                //console.log('before update: ', category);\r\n\r\n                json = await fetchPut('/category.php?fn=updateCategory',\r\n                    category,\r\n                    userSession['token']);\r\n                //console.log(json);\r\n\r\n            }\r\n            // insert\r\n            else {\r\n                json = await fetchPost('/category.php?fn=insertCategory',\r\n                    category,\r\n                    userSession['token']);\r\n                //console.log('json: ', json);                   \r\n            }\r\n            navigate('/categories');\r\n        }\r\n        else setMsg('La categoria ya existe');\r\n\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"Card\">                \r\n                <h4>{id ? 'Modificando categoría' : 'Agregando categoría'}</h4>\r\n                <form className='Form-user' onSubmit={formSubmit}>\r\n                    <label htmlFor=\"categoryName\">Descripción</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"categoryName\"\r\n                        name=\"categoryName\"\r\n                        value={category.categoryName}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"isAvailable\">Disponible</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isAvailable'\r\n                        name=\"isAvailable\"\r\n                        checked={category.isAvailable}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-user-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/categories')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnDanger from '../buttons/BtnDanger';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n// css\r\nimport './ArticlesList.css';\r\n\r\n\r\nconst Articles = () => {\r\n    //console.log('>>> Articles load...');\r\n\r\n    // context\r\n    const { fetchGet, fetchDelete, userSession } = useContext(DataContext);\r\n\r\n    // states\r\n    const [articles, setArticles] = useState([]);\r\n    const [articleSelected, setArticleSelected] = useState(null);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [txtSearch, setTxtSearch] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // protected of re-render with useCallback()\r\n    const articlesLoad = useCallback(async () => {\r\n        // load categories\r\n        const json = await fetchGet(\r\n            '/article.php?fn=getAllArticles&txtSearch=' + txtSearch,\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setArticles(json['articles']); \r\n               \r\n    }, [fetchGet, txtSearch, userSession]);\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Articles');\r\n\r\n        if (userSession) articlesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {}\r\n\r\n    }, [articlesLoad, navigate, userSession, stateModalDelete]);\r\n\r\n    const searchChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setTxtSearch(e.target.value);\r\n        //console.log(txtSearch);\r\n    }\r\n\r\n    const searchKeyPress = (e) => {\r\n        //console.log(e.key);\r\n\r\n        if (e.key === 'Enter')\r\n            articlesLoad();\r\n    }\r\n\r\n    const btnSeeClick = async (id) => {\r\n        //console.log(id);\r\n        // load article\r\n\r\n        const json = await fetchGet(\r\n            '/article.php?fn=getArticle&id=' + id,\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setArticleSelected(json['article']);        \r\n    }\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n\r\n        const json = await fetchDelete(\r\n            '/article.php?fn=deleteArticle',\r\n            {\r\n                id: stateModalDelete['id']\r\n            },\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null) {\r\n            setArticleSelected(null);\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n        }\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const rowClick = (e) => {\r\n        //console.log(e.target.parentElement.id);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            //console.log(rowSelected);\r\n            if (row) row.classList.remove('active');\r\n            const id = e.target.parentElement.id;\r\n            row = document.getElementById(id);\r\n            row.classList.add('active');\r\n            btnSeeClick(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <table className=\"Table\">\r\n                <caption><h2>Artículos</h2></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}><input type=\"search\" onChange={searchChange} onKeyPress={searchKeyPress} placeholder='Buscar...' autoFocus /></td>\r\n                        <td colSpan={2}>\r\n                            <Link to='/article-insert'>\r\n                                <BtnAccept text='Nuevo' />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Titulo</th>\r\n                        <th>Categoría</th>\r\n                        <th>Precio</th>\r\n                        <th>Disponible</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        articles.map(article =>\r\n                            <tr key={article.id} id={article.id} onClick={rowClick}>\r\n                                <td>{article.articleName}</td>\r\n                                <td>{article.categoryName}</td>\r\n                                <td className='Table-cell-end'>$ {article.price}</td>\r\n                                <td className=\"Table-cell-center\">{article.isAvailable && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td>\r\n                                    { // only if is admin\r\n                                        userSession.isAdmin &&\r\n                                        <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(article.id)} />\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        {<td className='Table-cell-center' colSpan={4}>{articles.length} artículos</td>}\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <div className='Card'>\r\n                <div className='Card-article-border' >\r\n\r\n                    { // show only if userSelected not is null\r\n                        articleSelected != null &&\r\n                        <div className='Card-article-container' >\r\n                            <div className='Card-article-data'>\r\n                                <img src={articleSelected['imgPath']} alt=\"\" width=\"100\" />\r\n                                <h5>Categoría</h5>\r\n                                <pre>{articleSelected['categoryName']}</pre>\r\n                                <h5>Titulo</h5>\r\n                                <pre>{articleSelected['articleName']}</pre>\r\n                                <h5>Descripción</h5>\r\n                                <pre>{articleSelected['description']}</pre>\r\n                                <h5>Precio</h5>\r\n                                <pre>$ {articleSelected['price']}</pre>\r\n                                <h5>Existencia</h5>\r\n                                <pre>{articleSelected['stock']}</pre>\r\n                            </div>\r\n                            { // only if is admin\r\n                                userSession.isAdmin &&\r\n                                <BtnPrimary\r\n                                    text='Modificar'\r\n                                    style={{ display: 'block' }}\r\n                                    onClick={() => navigate(`/article-update/${articleSelected['id']}`)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar el artículo?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\nimport FormMessage from '../form/FormMessage';\r\n\r\nconst ArticleForm = () => {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, userSession } = useContext(DataContext)\r\n\r\n    // param\r\n    const params = useParams();\r\n    const id = params['id'] ?? -1;\r\n\r\n    // states\r\n    const [categories, setCategories] = useState([]);\r\n    const [article, setArticle] = useState({\r\n        id: params['id'] ?? -1,\r\n        imgPath: 'http://192.168.0.27/react_php-catalog/backend/img/noImage.png',\r\n        imgBase64: '', // base64, if not image = '' !important \r\n        idCategory: -1,\r\n        articleName: '',\r\n        description: '',\r\n        price: '',\r\n        stock: '',\r\n        isAvailable: true\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n        //console.log(name, value);\r\n        //console.log(article);\r\n        setArticle({\r\n            ...article, // same data\r\n            [name]: name !== 'isAvailable' ? value : e.target.checked // only change 1 field\r\n        })\r\n    }\r\n\r\n    const fileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (FileReader && file) {\r\n            const fr = new FileReader();\r\n            fr.onload = () => {\r\n                document.getElementById('imgArticle').src = fr.result; // fr.result = base64\r\n                //console.log(fr.result);\r\n                setArticle({\r\n                    ...article,\r\n                    imgBase64: fr.result\r\n                });\r\n            }\r\n            fr.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('article before save: ', article);\r\n\r\n        let json = await fetchGet(`/article.php?fn=isExistsArticle&articleName=${article['articleName'].trim()}&id=${article['id']}`, userSession['token']);\r\n        //console.log(json);\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsArticle']) {\r\n\r\n                // insert article\r\n                if (article.id === -1) \r\n                    json = await fetchPost('/article.php?fn=insertArticle', article, userSession['token']);\r\n                \r\n                // update article\r\n                else\r\n                    json = await fetchPut('/article.php?fn=updateArticle', article, userSession['token']);\r\n\r\n                //console.log(json);\r\n\r\n                navigate('/articles');                \r\n            }\r\n            // show message\r\n            setMsg('El artículo ya existe');\r\n        }        \r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    const categoriesLoad = useCallback(async () => {\r\n        // if id > -1 load article\r\n\r\n        let json = await fetchGet('/category.php?fn=getAllCategories', userSession['token']);\r\n        //console.log(json);\r\n\r\n        //json['isAuth'] = false; // test if is not authorized\r\n        if (json !== null) {\r\n            json = json['categories'];\r\n            //console.log(json);\r\n            setCategories(json);\r\n\r\n            //------- load article -------//\r\n            if (article.id > -1) {\r\n                json = await fetchGet('/article.php?fn=getArticle&id=' + article.id, userSession['token']);\r\n                //console.log(json);\r\n\r\n                if (json !== null) {\r\n                    json = json['article'];\r\n                    json['imgBase64'] = '';\r\n                    //console.log(json);\r\n                    setArticle(json);\r\n                }               \r\n            }            \r\n        }        \r\n    }, [fetchGet, userSession, article.id])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> useEffect ArticleForm');\r\n\r\n        if (userSession) categoriesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {}\r\n    }, [userSession, categoriesLoad, navigate]);\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            {/* {console.log(article)} */}\r\n            <div className=\"Card\">\r\n                <h4>{id === -1 ? 'Agregando' : 'Modificando'} artículo</h4>\r\n                <div className='Card-img-container'>\r\n                    <img src={article.imgPath} id='imgArticle' alt='Artículo' style={{ width: '100%', height: '100%' }} />\r\n                </div>\r\n                <form className='Form' onSubmit={formSubmit}>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        id=\"img\"\r\n                        accept='image/*'\r\n                        onChange={fileChange}\r\n                    />\r\n                    <label htmlFor=\"idCategory\">Categoría</label>\r\n                    <select\r\n                        name=\"idCategory\"\r\n                        id=\"idCategory\"\r\n                        value={article.idCategory}\r\n                        onChange={inputChange}\r\n                        required\r\n                    >\r\n                        { // load categories on select or combobox\r\n                            categories.map(category =>\r\n                                <option\r\n                                    key={category.id}\r\n                                    value={category.id}\r\n                                // selected={category == article.idCategory}\r\n                                >{category.categoryName}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    <label htmlFor=\"articleName\">Titulo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"articleName\"\r\n                        name=\"articleName\"\r\n                        value={article.articleName}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"description\">Descripción</label>\r\n                    <textarea\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        value={article.description}\r\n                        onChange={inputChange}\r\n                    ></textarea>\r\n                    <div className='Form-number-pair'>\r\n                        <label htmlFor=\"price\">Precio</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            id=\"price\"\r\n                            value={article.price}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"stock\" style={{ marginLeft: '20px' }}>Existencia</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"stock\"\r\n                            id=\"stock\"\r\n                            value={article.stock}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <label htmlFor=\"isAvailable\">Disponible</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isAvailable'\r\n                        name=\"isAvailable\"\r\n                        checked={article.isAvailable}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-user-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/articles')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleForm","import { useContext, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n\r\n// css\r\nimport './Products.css';\r\n\r\nexport default function Products() {\r\n    // context\r\n    const { fetchGet } = useContext(DataContext)\r\n\r\n    // params\r\n    const params = useParams(); // important!\r\n    //console.log(params); // {search: 'categoria'|'texto', txtSearch: <string>}\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // states\r\n    const [articles, setArticles] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        //console.log('>>> effect Productos')\r\n\r\n        async function articlesLoad() {\r\n            let res\r\n            if (params['search'] === 'categoria')  \r\n                res = await fetchGet('/index.php?fn=getAllArticlesFromCategoryName&categoryName=' + params['txtSearch'])\r\n            else \r\n                res = await fetchGet('/index.php?fn=getAllArticlesFromTxt&txtSearch=' + params['txtSearch'])\r\n            //console.log(res);\r\n            \r\n            if (res !== null) setArticles(res['articles']);                    \r\n        }  \r\n\r\n        articlesLoad();\r\n\r\n        return () => {\r\n            //console.log('useEffect Productos BYE')\r\n        }\r\n\r\n    }, [params, fetchGet]);\r\n\r\n    const imgClick = (id) => {\r\n        //console.log('click to id: ' + id);\r\n        navigate('/producto-detalle/' + id);\r\n    } \r\n\r\n    return (\r\n        <>            \r\n            <p className='ProductsTitle'>{params['txtSearch']}</p>\r\n            <div className='Grid'>\r\n                {\r\n                    articles.map(article =>\r\n                        article['isAvailable'] &&\r\n                        <div className='Product-card' key={article.id}>\r\n                            {\r\n                                // if without else\r\n                                article.stock === 0 && <span>AGOTADO</span>\r\n                            }\r\n                            <img src={article.imgPath} alt={article.title} onClick={() => imgClick(article.id)} width=\"220\" height=\"250\" />\r\n                            <p>{article.articleName}</p>\r\n                            <p className='Product-price'>$ {article.price}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// icon\r\nimport { AiOutlineArrowLeft, AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './ProductDetail.css';\r\n\r\nconst ProductDetail = () => {\r\n  // context \r\n  const { fetchGet, userSession, articlesCart, setArticlesCart } = useContext(DataContext);\r\n  // params\r\n  const params = useParams();\r\n  // navigate\r\n  const navigate = useNavigate();\r\n  // states\r\n  const [article, setArticle] = useState({});\r\n  const [qty, setQty] = useState(1);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    //console.log('useEffect ProductDetail');\r\n\r\n    async function getArticle() {\r\n      const data = await fetchGet('/index.php?fn=getArticle&id=' + params['id']);\r\n      if (data !== null) setArticle(data['article']);      \r\n    }\r\n    getArticle();\r\n\r\n    return () => {\r\n      //console.log('useEffect ProductDetail bye')\r\n    }\r\n  }, [params, fetchGet]);\r\n\r\n  useEffect(() => {\r\n    // save to storage\r\n    window.localStorage.setItem('cart', JSON.stringify(articlesCart))\r\n  \r\n    return () => {\r\n      //console.log('useEffect articlesCart-change bye')\r\n    }\r\n  }, [articlesCart])\r\n  \r\n\r\n  const backClick = () => {\r\n    // const path \r\n    //navigate('/productos/' + article['categoryName']);\r\n    navigate(-1)\r\n  }\r\n\r\n  const addClick = () => {\r\n    setQty(qty + 1);\r\n  }\r\n\r\n  const substractClick = () => {\r\n    if (qty >= 2) setQty(qty - 1);\r\n  }\r\n\r\n  const btnAddToCartClick = () => {\r\n    //console.log('btnAddToCart: id=' + article.id + ', qty=' + qty);\r\n    article['qty'] = qty;\r\n    //console.log('articlesCart before change: ', articlesCart);\r\n\r\n    // update article if exists or add if not exists\r\n\r\n    // take index of articles with id equals\r\n    const i = articlesCart.findIndex(articleCart => articleCart.id === article.id)\r\n    //console.log('articleIndex: ', articleIndex)\r\n    \r\n    // add new article to cart\r\n    if (i === -1) {\r\n      setArticlesCart([\r\n        ...articlesCart, // same list\r\n        article // + new article\r\n      ])      \r\n    }\r\n    // only add qty to article exists\r\n    else {\r\n      // change qty of article exists: qty + articlesExists[0].qty\r\n      let articleExists = articlesCart[i]\r\n      //console.log('articleExists', articleExists)\r\n      articleExists['qty'] += qty;\r\n      //console.log('articleExists update qty: ', articleExists)      \r\n    }\r\n    setMsg('El artículo ha sido agregado al carrito');    \r\n  }\r\n\r\n  const onCloseFormMessage = () => {\r\n    setMsg('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* ------------------- BACK BAR --------------------- */}\r\n      <div className='Detail-top'>\r\n        <AiOutlineArrowLeft className='Detail-icon' onClick={backClick} />\r\n      </div>\r\n\r\n      <div className='Wrapper-flex'>\r\n        \r\n        {/* ------------------- CARD IMAGE --------------------- */}\r\n        <div className='Card Detail-card'>\r\n          <div className='Detail-container Detail-zoom'>\r\n            <img src={article['imgPath']} alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* -------------- DATA CARD -------------- */}\r\n        <div className='Card Detail-card'>\r\n          <div className='Detail-container Detail-data'>\r\n            <h4>DAMAX BOUTIQUE</h4>\r\n            <p className='Detail-title'>{article['articleName']}</p>\r\n            <p className='Detail-price'>$ {article['price']}</p>\r\n\r\n            {/* qty */}\r\n            <div className='Detail-qty'>\r\n              <AiOutlineMinus className='Detail-icon' onClick={substractClick} />\r\n              <span>{qty}</span>\r\n              <AiOutlinePlus className='Detail-icon' onClick={addClick} />\r\n            </div>\r\n\r\n            <div className='Detail-stock'>\r\n              <span>{article['stock'] > 0 ? 'Solo restan: ' + article['stock'] : 'AGOTADO'}</span>\r\n            </div>\r\n            <p className='Detail-title'>Descripción</p>\r\n            <pre className='Detail-description'>{article['description']}</pre>\r\n\r\n            { // only if not user on session and stock >= qty\r\n              !userSession && article['stock'] >= qty &&\r\n              <button className='Detail-btn-cart' onClick={btnAddToCartClick}>AGREGAR AL CARRITO</button>\r\n            }\r\n\r\n            {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} isSuccess={true} />}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductDetail","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnDanger from '../buttons/BtnDanger';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n// css\r\nimport './CustomersList.css';\r\n\r\n\r\nconst Customers = () => {\r\n    // context\r\n    const { fetchGet, fetchDelete, userSession } = useContext(DataContext);\r\n\r\n    // states\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customerSelected, setCustomerSelected] = useState(null);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [txtSearch, setTxtSearch] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // protected of re-render with useCallback()\r\n    const customersLoad = useCallback(async () => {\r\n        // load customers\r\n        const json = await fetchGet(\r\n            '/customer.php?fn=getAllCustomers&txtSearch=' + txtSearch,\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n        \r\n        if (json !== null) setCustomers(json['customers']);\r\n        \r\n    }, [fetchGet, txtSearch, userSession]);\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Customers');\r\n\r\n        if (userSession) customersLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {}\r\n\r\n    }, [customersLoad, navigate, userSession, stateModalDelete]);\r\n\r\n    const searchChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setTxtSearch(e.target.value);\r\n        //console.log(txtSearch);\r\n    }\r\n\r\n    const searchKeyPress = (e) => {\r\n        //console.log(e.key);\r\n\r\n        if (e.key === 'Enter')\r\n            customersLoad();\r\n    }\r\n\r\n    const btnSeeClick = async (id) => {\r\n        //console.log(id);\r\n        // load article\r\n\r\n        const json = await fetchGet(\r\n            '/customer.php?fn=getCustomer&id=' + id,\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setCustomerSelected(json['customer'])            \r\n    }\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n\r\n        const json = await fetchDelete(\r\n            '/customer.php?fn=deleteCustomer',\r\n            {\r\n                id: stateModalDelete['id']\r\n            },\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null) {\r\n            setCustomerSelected(null);\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n        }\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const rowClick = (e) => {\r\n        //console.log(e.target.parentElement.id);\r\n        \r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            //console.log(rowSelected);\r\n            if (row) row.classList.remove('active');\r\n            const id = e.target.parentElement.id;\r\n            row = document.getElementById(id);\r\n            row.classList.add('active');\r\n            btnSeeClick(id)\r\n        }        \r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <table className=\"Table\">\r\n                <caption><h2>Clientes</h2></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}><input type=\"search\" onChange={searchChange} onKeyPress={searchKeyPress} placeholder='Buscar...' autoFocus /></td>\r\n                        <td colSpan={2}>\r\n                            <Link to='/customer-insert'>\r\n                                <BtnAccept text='Nuevo' />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Correo</th>\r\n                        <th>Nombre</th>\r\n                        <th>Teléfono</th>\r\n                        <th>Activo</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        customers.map(customer =>\r\n                            <tr key={customer.id} id={customer.id} onClick={rowClick}>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.fullname}</td>\r\n                                <td>{customer.phone}</td>\r\n                                <td className=\"Table-cell-center\">{customer.isActive && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td>\r\n                                    { // only if is admin\r\n                                        userSession.isAdmin &&\r\n                                        <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(customer.id)} />\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        {<td className='Table-cell-center' colSpan={4}>{customers.length} {customers.length === 1 ? 'cliente' : 'clientes'}</td>}\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n            \r\n            <div className='Card'>\r\n                <div className='Card-customer-border' >\r\n\r\n                    { // show only if userSelected not is null\r\n                        customerSelected != null &&\r\n                        <div className='Card-customer-container' >\r\n                            <div className='Card-customer-data'>\r\n                                <h5>Correo</h5>\r\n                                <pre>{customerSelected['email']}</pre>\r\n                                <h5>Nombre</h5>\r\n                                <pre>{customerSelected['fullname']}</pre>\r\n                                <h5>Teléfono</h5>\r\n                                <pre>{customerSelected['phone']}</pre>\r\n                                <h5>Calle y número</h5>\r\n                                <pre>{customerSelected['streetAndNumber']}</pre>\r\n                                <h5>Colonia</h5>\r\n                                <pre>{customerSelected['suburb']}</pre>\r\n                                <h5>CP</h5>\r\n                                <pre>{customerSelected['cp']}</pre>\r\n                                <h5>Ciudad</h5>\r\n                                <pre>{customerSelected['town']}</pre>\r\n                            </div>\r\n                            { // only if is admin\r\n                                userSession.isAdmin &&\r\n                                <BtnPrimary\r\n                                    text='Modificar'\r\n                                    style={{ display: 'block' }}\r\n                                    onClick={() => navigate(`/customer-update/${customerSelected['id']}`)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar al cliente?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Customers","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// components\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './CustomerForm.css';\r\n\r\nconst CustomerForm = () => {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, userSession } = useContext(DataContext)\r\n\r\n    // param\r\n    const params = useParams();\r\n    const id = params['id'];\r\n\r\n    // states    \r\n    const [customer, setCustomer] = useState({\r\n        id: params['id'] ?? -1,\r\n        email: '',\r\n        fullname: '',\r\n        phone: '',\r\n        streetAndNumber: '',\r\n        suburb: '',\r\n        cp: '',\r\n        town: '',\r\n        isActive: true,\r\n        pass: '',\r\n        confirm: ''\r\n    });\r\n    const [isShowPass, setIsShowPass] = useState(false)\r\n    const [msg, setMsg] = useState('');\r\n    \r\n    // navigate\r\n    const navigate = useNavigate();\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        const { name, value } = e.target;        \r\n\r\n        // if (name !== 'isChangePass') {\r\n        setCustomer({\r\n            ...customer, // same data\r\n            [name]: name !== 'isActive' ? value : e.target.checked // only change 1 field\r\n        })\r\n        // }\r\n        // else setIsShowPass(e.target.checked)\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('customer before save: ', customer);\r\n\r\n        let json = await fetchGet(`/customer.php?fn=isExistsCustomer&email=${customer['email'].trim()}&id=${customer['id']}`, userSession['token']);\r\n        // console.log(json);\r\n        // return;\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsCustomer']) {\r\n                // console.log(customer.id);\r\n                // return;\r\n\r\n                // verify if showPass and pass-confirm equals\r\n                let isContinue = false\r\n                if (isShowPass) {\r\n                    if (customer.pass === customer.confirm) isContinue = true\r\n                    else {\r\n                        setCustomer({\r\n                            ...customer,\r\n                            pass: '',\r\n                            confirm: ''\r\n                        });\r\n                        setMsg('Contraseña y confirmación son diferentes')\r\n                    }\r\n                }\r\n                else isContinue = true\r\n\r\n                if (isContinue) {\r\n                    // insert customer\r\n                    if (customer.id === -1) {\r\n                        json = await fetchPost('/customer.php?fn=insertCustomer&isAutoRegister=false', customer, userSession['token']);\r\n                    }\r\n\r\n                    // update customer\r\n                    else\r\n                        json = await fetchPut('/customer.php?fn=updateCustomer', customer, userSession['token']);\r\n\r\n                    // console.log(json);\r\n                    // return;\r\n\r\n                    navigate('/customers');                    \r\n                }\r\n            }\r\n            else setMsg('El cliente ya existe');\r\n        }\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    const customerLoad = useCallback(async () => {\r\n        if (customer['id'] > -1) {\r\n            let res = await fetchGet('/customer.php?fn=getCustomer&id=' + customer.id, userSession['token']);\r\n            //console.log(json);\r\n\r\n            if (res !== null) {\r\n                res = res['customer'];\r\n\r\n                // add pass empty\r\n                res['pass'] = ''\r\n                res['confirm'] = ''\r\n                //console.log(json);\r\n                setCustomer(res);\r\n            }\r\n        }\r\n    }, [fetchGet, userSession, customer])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> useEffect CustomerForm');\r\n\r\n        if (userSession) {\r\n            if (id) customerLoad()\r\n            else setIsShowPass(true) // pass obligatory\r\n        }\r\n        else navigate('/not-found')\r\n\r\n        return () => {}\r\n    }, [customerLoad, id, userSession, navigate]);\r\n\r\n    const toggleShowPass = (e) => {\r\n        //console.log(e.target.checked);\r\n        setIsShowPass(e.target.checked);\r\n    }\r\n\r\n    return (    \r\n        userSession &&    \r\n        <div className='Wrapper-flex'>\r\n            <div className=\"Card\">\r\n                <h4>{id === undefined ? 'Agregando' : 'Modificando'} cliente</h4>\r\n                <form className='Form' onSubmit={formSubmit}>\r\n                    <label htmlFor=\"email\">Correo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"fullname\">Nombre</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"fullname\"\r\n                        name=\"fullname\"\r\n                        value={customer.fullname}\r\n                        onChange={inputChange}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"phone\">Teléfono</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        value={customer.phone}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <label htmlFor=\"streetAndNumber\">Calle y número</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"streetAndNumber\"\r\n                        name=\"streetAndNumber\"\r\n                        value={customer.streetAndNumber}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-input-pair-inline'>\r\n                        <div>\r\n                            <label htmlFor=\"suburb\">Colonia</label>\r\n                            <input\r\n                                type='text'\r\n                                id=\"suburb\"\r\n                                name=\"suburb\"\r\n                                value={customer.suburb}\r\n                                onChange={inputChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"cp\">C.P.</label>\r\n                            <input\r\n                                type='text'\r\n                                id=\"cp\"\r\n                                name=\"cp\"\r\n                                value={customer.cp}\r\n                                onChange={inputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"town\">Municipio</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"town\"\r\n                        name=\"town\"\r\n                        value={customer.town}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <label htmlFor=\"isActive\">Activo</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isActive'\r\n                        name=\"isActive\"\r\n                        checked={customer.isActive}\r\n                        onChange={inputChange}\r\n                    />\r\n\r\n                    {  // show only if editing\r\n                        id &&\r\n                        <div className='Form-customer-check-pass'>\r\n                            <label htmlFor=\"password\">Cambiar contraseña</label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"isShowPass\"\r\n                                onChange={toggleShowPass}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    { // show only if above checkbox is checked\r\n                        isShowPass &&\r\n                        <div className='Form-customer-pair-pass'>\r\n                            <div>\r\n                                <label htmlFor=\"password\">Contraseña</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id='pass'\r\n                                    name=\"pass\"\r\n                                    value={customer.pass}\r\n                                    onChange={inputChange}\r\n                                    required\r\n                                //required={id || isShowPass /* with id or user-editing with checked-showPass*/}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"confirm\">Confirmar</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id='confirm'\r\n                                    name=\"confirm\"\r\n                                    value={customer.confirm}\r\n                                    onChange={inputChange}\r\n                                    required\r\n                                //required={id || isShowPass /* with id or user-editing with checked-showPass */}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='Form-customer-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/customers')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerForm","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport { Link } from 'react-router-dom'\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n// icon\r\nimport { AiFillDelete, AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './Cart.css';\r\n\r\nconst Cart = () => {\r\n  // context\r\n  const {\r\n    fetchGet,\r\n    fetchPost,\r\n    articlesCart,\r\n    setArticlesCart,\r\n    totalCart,\r\n    setTotalCart,\r\n    customerSession,\r\n    setIsReturnToCart\r\n  } = useContext(DataContext);\r\n\r\n  // useNavigate\r\n  const navigate = useNavigate()\r\n\r\n  // states\r\n  const [msg, setMsg] = useState('')\r\n  const [idOrder, setIdOrder] = useState(-1)\r\n\r\n  // vars\r\n  var articleWithoutStock = ''\r\n\r\n  useEffect(() => {\r\n    //console.log('>>> useEffect Cart');\r\n    //console.log('articlesCart: ', articlesCart);\r\n\r\n    // update total\r\n    let newTotal = articlesCart.reduce((total, articleCart) =>\r\n      total = total + articleCart['qty'] * articleCart['price'], 0) // this zero its initial\r\n    //console.log('total: ', newTotal)\r\n    setTotalCart(newTotal)\r\n\r\n    // save articlesCart on storage\r\n    window.localStorage.setItem('cart', JSON.stringify(articlesCart))\r\n\r\n  }, [articlesCart, setTotalCart]);\r\n\r\n  const substractClick = (id) => {\r\n    //console.log('substractClick: ' + id);\r\n    // find index of article in cart\r\n    const i = articlesCart.findIndex(article => article.id === id)\r\n    //console.log('i: ', i)\r\n\r\n    // if exists\r\n    if (i > -1) {\r\n      // if current qty >= 2\r\n      if (articlesCart[i].qty >= 2) {\r\n        const updateArticlesCart = articlesCart.map(articleCart =>\r\n          articleCart === articlesCart[i] // same article?\r\n            ? { ...articleCart, qty: articleCart['qty'] - 1 } // copy article, only change qty\r\n            : articleCart // if not exists, return same object\r\n        )\r\n        setArticlesCart(updateArticlesCart)\r\n      }\r\n    }\r\n  }\r\n\r\n  const addClick = (id) => {\r\n    //console.log('addClick: ' + id);\r\n    //console.log('articlesCart: ', articlesCart);\r\n\r\n    // find index of article in cart\r\n    const i = articlesCart.findIndex(article => article.id === id)\r\n    //console.log('i: ', i)\r\n\r\n    if (i > -1) {\r\n      const updateArticlesCart = articlesCart.map(articleCart =>\r\n        articleCart === articlesCart[i] // same article?\r\n          ? { ...articleCart, qty: articleCart['qty'] + 1 } // copy article, only change qty          \r\n          : articleCart // same object\r\n      )\r\n      setArticlesCart(updateArticlesCart)\r\n    }\r\n  }\r\n\r\n  const deleteClick = (id) => {\r\n    //console.log('deleteClick: ' + id);\r\n    setArticlesCart(articlesCart.filter(articleCart => articleCart.id !== id));\r\n  }\r\n\r\n  //---------------- SUMMARY -----------------//\r\n  function cleanCartClick() {\r\n    setArticlesCart([])\r\n    setTotalCart(0)\r\n  }\r\n\r\n  function btnStartSessionClick() {\r\n    setIsReturnToCart(true)\r\n    navigate('/input')\r\n  }\r\n\r\n  async function btnOrderClick() {\r\n    // verify if complete qty on database\r\n    let isContinue = true\r\n    articlesCart.forEach(async (articleCart, i) => {\r\n      //console.log(articleCart, i)\r\n      let res = await fetchGet(`/customer_authorized.php?fn=isStockComplete&id=${articleCart.id}&qty=${articleCart.qty}`, customerSession.token)\r\n      //console.log(res); // {isAuth: true|false, isStockComplete: true|false}\r\n      if (res !== null) {\r\n        if (!res['isStockComplete']) {\r\n          isContinue = false\r\n          articleWithoutStock = articleCart.articleName\r\n        }\r\n\r\n        // last item\r\n        if (i === articlesCart.length - 1) {\r\n          if (isContinue) {\r\n            setMsg('')\r\n            //console.log('save order!!')\r\n\r\n            // insert order from cart\r\n            res = await fetchPost(\r\n              `/customer_authorized.php?fn=insertOrderFromCart&items=${articlesCart.length}&total=${totalCart}`,\r\n              articlesCart,\r\n              customerSession.token\r\n            )\r\n            //console.log(res) // {isAuth: true|false, idOrder: <int>}\r\n\r\n            setIdOrder(res['idOrder']);\r\n\r\n            // clear cart\r\n            setArticlesCart([]);\r\n          }\r\n          else {\r\n            setMsg(`Existencia insuficiente:\\n${articleWithoutStock}`)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function onCloseFormMessage() {\r\n    setMsg('')\r\n  }\r\n\r\n  function onCloseFormMessageOrder() {\r\n    setIdOrder(-1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/*console.log('final articlesCart: ', articlesCart)*/}\r\n      {/* <div className='Cart-top'>Carrito</div> */}\r\n      <div className='Cart-title'>Carrito</div>\r\n\r\n      <div className='Cart-container'>\r\n        <div className='Cart-table-summary'>\r\n          <table className='Cart-table'>\r\n            <thead>\r\n              <tr className='Cart-row Cart-row-delete'>\r\n                <th className='Cart-col-product'>Producto</th>\r\n                <th className='Cart-col-qty'>Cantidad</th>\r\n                <th className='Cart-col-price'>Precio</th>\r\n                <th className='Cart-col-amount'>Importe</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                articlesCart.map((articleCart, i) =>\r\n                  <tr className='Cart-row no-title' key={i}>\r\n                    <td className='Cart-col-product'>\r\n                      <div className='Cart-container-img'>\r\n                        <img src={articleCart.imgPath} alt={articleCart.articleName} />\r\n                      </div>\r\n                      <Link to={'/productoDetalle/' + articleCart.id} className='Cart-description'>\r\n                        {articleCart.articleName}\r\n                      </Link>\r\n                    </td>\r\n                    <td className='Cart-col-qty'>\r\n                      <div className='Cart-qty'>\r\n                        <AiOutlineMinus className='Cart-icon' onClick={() => substractClick(articlesCart[i].id)} />\r\n                        <span>{articleCart.qty}</span>\r\n                        <AiOutlinePlus className='Cart-icon' onClick={() => addClick(articlesCart[i].id)} />\r\n                      </div>\r\n                    </td>\r\n                    <td className='Cart-col-price'>${new Intl.NumberFormat('es-MX').format(articleCart.price)}</td>\r\n                    <td className='Cart-col-amount'>\r\n                      ${new Intl.NumberFormat('es-MX').format(articleCart.qty * articleCart.price)}\r\n                      <AiFillDelete className='Cart-icon Cart-icon-delete' onClick={() => deleteClick(articlesCart[i].id)} />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* ---------------- SUMMARY CARD ------------------- */}\r\n          <div className='Cart-summary'>\r\n            <div className='Card'>\r\n              <h3>RESUMEN</h3>\r\n              <br />\r\n              {idOrder === -1 ?\r\n                <>\r\n                  <code>{articlesCart.length} {articlesCart === 1 ? 'artículo' : 'artículos'}</code>\r\n                  <h4>Total ${new Intl.NumberFormat('es-MX', { minimumFractionDigits: 2 }).format(totalCart)}</h4>\r\n                  {\r\n                    articlesCart.length > 0 &&\r\n                    <>\r\n                      {customerSession\r\n                        ? <button className='Cart-btn-order' onClick={btnOrderClick}>ORDENAR</button>\r\n                        : <button className='Cart-btn-order' onClick={btnStartSessionClick}>INICIAR SESIÓN PARA ORDENAR</button>\r\n                      }\r\n                      <br />\r\n                      <br />\r\n                      <p className='Cart-clean-cart' onClick={cleanCartClick}>Limpiar carrito</p>\r\n                      {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />}\r\n                    </>\r\n                  }\r\n                </>\r\n                : <FormMessage msg={'Órden enviada con el folio: ' + idOrder} btnCloseClick={onCloseFormMessageOrder} isSuccess={true} />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='Footer'>\r\n            <div className='Footer-wrapper'>\r\n                <div className='Footer-left'>\r\n\r\n                </div>\r\n                <div className='Footer-right'>\r\n\r\n                </div>\r\n            </div>\r\n            <Link to='/admin' className='Link'>\r\n                <p>&copy;DAMAX BOUTIQUE. Todos los derechos reservados.</p>\r\n            </Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport { useNavigate } from 'react-router';\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n\r\n// css\r\nimport './CustomerOrdersList.css'\r\n\r\nconst CustomerOrdersList = () => {\r\n    // context\r\n    const { fetchGet, customerSession } = useContext(DataContext)\r\n\r\n    // states\r\n    const [orders, setOrders] = useState([])\r\n    const [orderSelected, setOrderSelected] = useState(null)\r\n    const [itemsOrder, setItemsOrder] = useState([])\r\n    const [dates, setDates] = useState({\r\n        firstDate: new Date(Date.now() - 1000 * 60 * 60 * 24 * 29).toLocaleDateString('en-CA'), // yyyy-MM-dd minus 30days\r\n        lastDate: new Date().toLocaleDateString('en-CA') // yyyy-MM-dd today\r\n    })\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const loadItemsOrder = useCallback(async (idOrder) => {\r\n        let res = await fetchGet(`/customer_authorized.php?fn=getItemsOrder&idOrder=${idOrder}`)\r\n        //console.log(res)\r\n\r\n        if (res !== null) setItemsOrder(res['itemsOrder'])\r\n        \r\n    }, [fetchGet])\r\n\r\n    const loadOrders = useCallback(async () => {\r\n        let res = await fetchGet(\r\n            `/customer_authorized.php?fn=getAllOrders&idCustomer=${customerSession['id']}&firstDate=${dates.firstDate}&lastDate=${dates.lastDate}`, \r\n            customerSession['token']\r\n        )\r\n        //console.log(res);\r\n        if (res !== null) {\r\n            // update ordersList\r\n            res = res['orders'];\r\n            //console.log(res);\r\n            setOrders(res)\r\n            if (res.length > 0) {\r\n                setOrderSelected(res[0])\r\n                loadItemsOrder(res[0]['id'])\r\n            }\r\n        }        \r\n    }, [fetchGet, customerSession, loadItemsOrder, dates.firstDate, dates.lastDate])\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect OrderList')\r\n\r\n        if (customerSession) loadOrders()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [customerSession, navigate, loadOrders])\r\n\r\n    function rowClick(e) {\r\n        //console.log(e.target.parentElement.id);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            if (row) row.classList.remove('active');\r\n\r\n            // get idOrder and select row\r\n            const idOrder = parseInt(e.target.parentElement.id) // text\r\n            const i = orders.findIndex(order => order.id === idOrder) // int == text\r\n            setOrderSelected(orders[i])\r\n            row = document.getElementById(idOrder)\r\n            row.classList.add('active')\r\n            loadItemsOrder(idOrder)\r\n        }\r\n    }\r\n\r\n    function dateChange(e) {\r\n        setDates({\r\n            ...dates,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        customerSession &&\r\n        <>\r\n            <p className='ProductsTitle'>MIS PEDIDOS</p>\r\n            <div className='OrdersCustomer-table-detail'>\r\n                <table className='OrdersCustomer-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <label htmlFor=\"firstDate\"><code>Desde </code></label>\r\n                                <input type=\"date\"\r\n                                    name=\"firstDate\"\r\n                                    id=\"firstDate\"\r\n                                    value={dates.firstDate}\r\n                                    onChange={dateChange}\r\n                                    required // mozilla remove clear button\r\n                                />\r\n                            </td>\r\n                            <td colSpan={2}>\r\n                                <label htmlFor=\"lastDate\"><code>Hasta </code></label>\r\n                                <input type=\"date\"\r\n                                    name=\"lastDate\"\r\n                                    id=\"lastDate\"\r\n                                    value={dates.lastDate}\r\n                                    onChange={dateChange}\r\n                                    required // mozilla remove clear button\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Orden</th>\r\n                            <th>Fecha</th>\r\n                            <th>Artículos</th>\r\n                            <th>Total</th>\r\n                            <th>Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            orders.map((order, i) =>\r\n                                <tr className={i === 0 ? 'active' : ''} key={order.id} id={order.id} onClick={rowClick}>\r\n                                    <td className='OrdersCustomer-col-number'>{order.id}</td>\r\n                                    <td>{order.created}</td>\r\n                                    <td className='OrdersCustomer-col-number'>{order.items}</td>\r\n                                    <td className='OrdersCustomer-col-number'>${new Intl.NumberFormat('es-MX', { minimumFractionDigits: 2 }).format(order.total)}</td>\r\n                                    <td>\r\n                                        <code className='OrdersCustomer-state'>{order.isDelivered ? `ENTREGADO\\n(${order.dateDelivered})`  : 'POR ENTREGAR'}</code>                                        \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colSpan={4}>{orders.length} {orders.length !== 1 ? 'órdenes' : 'órden'}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                <article className='OrdersCustomer-detail Card'>\r\n                    <table className='OrdersCustomer-table-items'>\r\n                        {\r\n                            orderSelected !== null &&\r\n                            <caption>Orden: <b>{orderSelected.id}</b></caption>\r\n                        }\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '5%' }}>Cant</th>\r\n                                <th style={{ width: '55%' }}>Descripción</th>\r\n                                <th style={{ width: '20%' }}>Precio</th>\r\n                                <th style={{ width: '20%' }}>Importe</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                itemsOrder.map(item =>\r\n                                    <tr key={item.id}>\r\n                                        <td className='OrdersCustomer-col-number'>{item.qty}</td>\r\n                                        <td className='OrdersCustomer-col-text'>{item.articleName}</td>\r\n                                        <td className='OrdersCustomer-col-number'>{item.price}</td>\r\n                                        <td className='OrdersCustomer-col-number'>{item.amount}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                        {\r\n                            orderSelected !== null &&\r\n                            <tfoot className='OrdersCustomer-detail-data'>\r\n                                <tr>\r\n                                    <td colSpan={2}>{orderSelected.items} artículos</td>\r\n                                    <td className='OrdersCustomer-col-number'>Total</td>\r\n                                    <td className='OrdersCustomer-col-number'>${orderSelected.total}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        }\r\n\r\n                    </table>\r\n                </article>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerOrdersList","import React, { useContext, useState } from 'react'\r\n\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n\r\nconst FormCustomerPass = () => {\r\n  // context\r\n  const { fetchPost, customerSession } = useContext(DataContext)\r\n\r\n  const inputsDefaultValues = {\r\n    current: '',\r\n    pass: '',\r\n    confirm: ''\r\n  }\r\n\r\n  // states\r\n  const [inputs, setInputs] = useState(inputsDefaultValues)\r\n  const [msg, setMsg] = useState('')\r\n  const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n  function inputChange(e) {\r\n    setInputs({\r\n      ...inputs, // same values\r\n      [e.target.name]: e.target.value // only change property same name\r\n    })\r\n  }\r\n\r\n  async function formSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // verify current pass\r\n    let res = await fetchPost('/customer_authorized.php?fn=isSamePass', { pass: inputs.current }, customerSession.token)\r\n    if (res !== null) {\r\n      if (res['isSamePass']) {\r\n        if (inputs.pass === inputs.confirm) {\r\n          await fetchPost('/customer_authorized.php?fn=changePass', { pass: inputs.pass }, customerSession.token)\r\n          setIsSuccess(true)\r\n          setMsg('La contraseña ha sido actualizada')\r\n        }\r\n        else setMsg('Nueva contraseña y confirmación son diferentes')\r\n      }\r\n      else setMsg('Contraseña actual incorrecta')\r\n      setInputs(inputsDefaultValues)\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <form className='FormCard' onSubmit={formSubmit}>\r\n      <input\r\n        type=\"password\"\r\n        name=\"current\"\r\n        value={inputs.current}\r\n        placeholder='Contraseña actual'\r\n        onChange={inputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"pass\"\r\n        value={inputs.pass}\r\n        placeholder='Nueva contraseña'\r\n        onChange={inputChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"confirm\"\r\n        value={inputs.confirm}\r\n        placeholder='Confirmar nueva contraseña'\r\n        onChange={inputChange}\r\n        required\r\n      />\r\n      {\r\n        !isSuccess &&\r\n        <input type=\"submit\" value=\"Aceptar\" />\r\n      }\r\n      {\r\n        msg.length !== 0 &&\r\n        <FormMessage msg={msg} btnCloseClick={() => setMsg('')} isSuccess={isSuccess} />\r\n      }\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormCustomerPass","import React, { useContext, useEffect } from 'react'\r\n\r\n// components\r\nimport FormCustomerPass from '../form/FormCustomerPass'\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst CustomerPass = () => {\r\n  const { customerSession } = useContext(DataContext) \r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (customerSession === null) navigate('/not-found')    \r\n    return () => {}\r\n  }, [customerSession, navigate])\r\n  \r\n\r\n  return (\r\n    customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>CAMBIAR CONTRASEÑA</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerPass customerId={customerSession ? customerSession.id : -1} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerPass","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n\r\nconst FormCustomerData = ({ isAutoRegister }) => {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, customerSession } = useContext(DataContext)\r\n\r\n    const inputsDefaultValues = {\r\n        email: '',\r\n        fullname: '',\r\n        phone: '',\r\n        streetAndNumber: '',\r\n        suburb: '',\r\n        cp: '',\r\n        town: '',\r\n        pass: '',\r\n        confirm: ''\r\n    }\r\n\r\n    // states\r\n    const [inputs, setInputs] = useState(inputsDefaultValues)\r\n    const [msg, setMsg] = useState('')\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    const loadCustomerData = useCallback(async () => {\r\n        let res = await fetchGet(\r\n            `/customer_authorized.php?fn=getCustomer&id=${customerSession['id']}`,\r\n            customerSession['token']\r\n        )\r\n        if (res !== null) {\r\n            res = res['customer']\r\n            setInputs({\r\n                email: res['email'],\r\n                fullname: res['fullname'],\r\n                phone: res['phone'],\r\n                streetAndNumber: res['streetAndNumber'],\r\n                suburb: res['suburb'],\r\n                cp: res['cp'],\r\n                town: res['town'],\r\n                pass: '',\r\n                confirm: ''\r\n            })\r\n        }\r\n    }, [fetchGet, customerSession])\r\n\r\n    useEffect(() => {\r\n        if (customerSession) loadCustomerData() // use-callback for prevent execute infinite\r\n\r\n        return () => { }\r\n    }, [loadCustomerData, customerSession])\r\n\r\n\r\n    function inputChange(e) {\r\n        setInputs({\r\n            ...inputs, // same values\r\n            [e.target.name]: e.target.value // only change property same name\r\n        })\r\n    }\r\n\r\n    async function formSubmit(e) {\r\n        e.preventDefault()\r\n        let res\r\n        if (isAutoRegister) {\r\n            res = await fetchGet(`/index.php?fn=isExistsCustomer&email=${inputs.email}&id=-1`)\r\n            //console.log(res)\r\n            if (res !== null) {\r\n                if (!res['isExistsCustomer']) {\r\n                    // verify pass and confirm\r\n                    if (inputs.pass === inputs.confirm) {\r\n\r\n                        // save new customer\r\n                        res = await fetchPost(\r\n                            `/index.php?fn=insertCustomer&isAutoregister=${isAutoRegister}`,\r\n                            inputs\r\n                        )\r\n                        //console.log(res)\r\n                        if (res !== null) {\r\n                            setIsSuccess(true)\r\n                            setMsg('El cliente ha sido registrado, para activar tu cuenta ingresa a tu correo')\r\n                        }\r\n                    }\r\n                    else {\r\n                        setInputs({\r\n                            ...inputs,\r\n                            pass: '', confirm: ''\r\n                        })\r\n                        setMsg('Contraseña y confirmación son diferentes')\r\n                    }\r\n\r\n                }\r\n                else setMsg('El correo ya se encuentra registrado')\r\n            }\r\n        }\r\n        else {\r\n            res = await fetchPut('/customer_authorized.php?fn=updateCustomer&id=' + customerSession['id'],\r\n                inputs,\r\n                customerSession['token']\r\n            )\r\n            if (res !== null) {\r\n                setIsSuccess(true)\r\n                setMsg('Los datos han sido actualizados')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Card'>\r\n            <form className='Form' onSubmit={formSubmit} style={{ display: isSuccess ? 'none' : 'block' }}>\r\n                <label htmlFor='email'>Correo</label>\r\n                <input\r\n                    type='email'\r\n                    name='email'\r\n                    id='email'\r\n                    value={inputs.email}\r\n                    onChange={inputChange}\r\n                    readOnly={!isAutoRegister}\r\n                    autoFocus={isAutoRegister}\r\n                    required={true}\r\n                    style={{\r\n                        backgroundColor: isAutoRegister ? 'white' : 'gainsboro'\r\n                    }}\r\n                />\r\n                <label htmlFor='fullname'>Nombre completo</label>\r\n                <input\r\n                    type='text'\r\n                    name='fullname'\r\n                    id='fullname'\r\n                    value={inputs.fullname}\r\n                    onChange={inputChange}\r\n                    autoFocus={!isAutoRegister}\r\n                    required\r\n                />\r\n                <label htmlFor='phone'>Teléfono</label>\r\n                <input\r\n                    type='text'\r\n                    name='phone'\r\n                    id='phone'\r\n                    value={inputs.phone}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <label htmlFor='streetAndNumber'>Calle y número</label>\r\n                <input\r\n                    type='text'\r\n                    name='streetAndNumber'\r\n                    id='streetAndNumber'\r\n                    value={inputs.streetAndNumber}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <div className='Form-input-pair-inline'>\r\n                    <div>\r\n                        <label htmlFor='suburb'>Colonia</label>\r\n                        <input\r\n                            type='text'\r\n                            name='suburb'\r\n                            id='suburb'\r\n                            value={inputs.suburb}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='cp'>C.P.</label>\r\n                        <input\r\n                            type='text'\r\n                            name='cp'\r\n                            id='cp'\r\n                            value={inputs.cp}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <label htmlFor='town'>Municipio</label>\r\n                <input\r\n                    type='text'\r\n                    name='town'\r\n                    id='town'\r\n                    value={inputs.town}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <div className='Form-input-pair-inline' style={{display: isAutoRegister ? 'flex' : 'none'}}>\r\n                    <div style={{ width: '50%' }}>\r\n                        <label htmlFor='pass'>Contraseña</label>\r\n                        <input\r\n                            type='password'\r\n                            name='pass'\r\n                            id='pass'\r\n                            value={inputs.pass}\r\n                            onChange={inputChange}\r\n                            required={isAutoRegister}\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: '50%' }}>\r\n                        <label htmlFor='confirm'>Confirmar</label>\r\n                        <input\r\n                            type='password'\r\n                            name='confirm'\r\n                            id='confirm'\r\n                            value={inputs.confirm}\r\n                            onChange={inputChange}\r\n                            required={isAutoRegister}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !isSuccess &&\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Guardar\"\r\n                        style={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            height: '40px',\r\n                            marginTop: '20px',\r\n                            fontSize: '1rem',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                    />\r\n                }\r\n            </form>\r\n            {\r\n                msg.length !== 0 &&\r\n                <FormMessage msg={msg} btnCloseClick={() => setMsg('')} isSuccess={isSuccess} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormCustomerData","import React, { useContext, useEffect } from 'react'\r\n\r\n// components\r\nimport FormCustomerData from '../form/FormCustomerData'\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst CustomerData = () => {\r\n  const { customerSession } = useContext(DataContext) \r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (customerSession === null) navigate('/not-found')    \r\n    return () => {}\r\n  }, [customerSession, navigate])  \r\n\r\n  return (\r\n    customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>MIS DATOS</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerData isAutoRegister={false} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerData","import { useCallback, useEffect, useState, useContext } from 'react';\r\n// components\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n// css\r\nimport './ModalAddArticle.css';\r\n\r\nconst ModalAddArticle = ({ isShowModal, idOrder, btnAcceptClick, btnCancelClick }) => {\r\n  // context\r\n  const { fetchGet, userSession } = useContext(DataContext)\r\n  // states\r\n  const [categories, setCategories] = useState([])\r\n  const [categoryNameSelected, setCategoryNameSelected] = useState('')\r\n  const [articles, setArticles] = useState([])\r\n\r\n  const loadCategories = useCallback(async () => {\r\n    let res = await fetchGet('/category.php?fn=getAllCategories', userSession['token'])\r\n    if (res !== null) {\r\n      res = res['categories']\r\n      setCategories(res)\r\n      setCategoryNameSelected(res[0].categoryName) // first category\r\n    }\r\n  }, [fetchGet, userSession])\r\n\r\n  // effect init\r\n  useEffect(() => {\r\n    if (userSession) loadCategories()\r\n    return () => { }\r\n  }, [loadCategories, userSession])\r\n\r\n  const loadArticles = useCallback(async () => {\r\n    //console.log('loadArticles()')\r\n    const res = await fetchGet(\r\n      `/article.php?fn=getAllArticlesFromCategoryName&categoryName=${categoryNameSelected}`,\r\n      userSession['token']\r\n    )\r\n    if (res !== null) setArticles(res['articles'])\r\n  }, [fetchGet, categoryNameSelected, userSession])\r\n\r\n  // effect categoryNameSelected\r\n  useEffect(() => {\r\n    if (categoryNameSelected !== '') loadArticles()\r\n    return () => { }\r\n  }, [categoryNameSelected, loadArticles])\r\n\r\n  function selectChange(e) {\r\n    //console.log(e.target.value)\r\n    setCategoryNameSelected(e.target.value)\r\n  }\r\n\r\n  return (\r\n    userSession &&\r\n    <div className={isShowModal ? 'ModalAddArticle-background active' : 'ModalAddArticle-background'}>\r\n      <div className='ModalAddArticle-card'>\r\n        <h3>Agregar artículo al pedido: {idOrder}</h3>\r\n        <section className='ModalAddArticle-section-select'>\r\n          <label htmlFor=\"select\">Categoría </label>\r\n          <select\r\n            name=\"select\"\r\n            id=\"select\"\r\n            onChange={selectChange}\r\n          >\r\n            {\r\n              categories.map((category, i) =>\r\n                <option key={i} value={category.categoryName}>{category.categoryName}</option>\r\n              )\r\n            }\r\n          </select>\r\n        </section>\r\n        <table className='ModalAddArticle-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Descripción</th>\r\n              <th>Precio</th>\r\n              <th>Exist</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              articles.map((article, i) =>\r\n                <tr key={i}>\r\n                  <td className='ModalAddArticle-col-number'>{article.id}</td>\r\n                  <td style={{width: '50%'}}>{article.articleName}</td>\r\n                  <td className='ModalAddArticle-col-number'>${article.price}</td>\r\n                  <td className='ModalAddArticle-col-number'>{article.stock}</td>\r\n                  <td><button className='ModalAddArticle-btn-add' onClick={() => btnAcceptClick(article.id)}>Agregar</button></td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <div className='ModalAddArticle-actions'>\r\n          <BtnSecundary text='Cancelar' onClick={btnCancelClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalAddArticle","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport { useNavigate } from 'react-router';\r\n\r\n// component\r\nimport BtnDanger from '../buttons/BtnDanger'\r\nimport BtnPrimary from '../buttons/BtnPrimary'\r\nimport BtnAccept from '../buttons/BtnAccept'\r\nimport ModalDelete from '../modal_delete/ModalDelete'\r\n\r\n// icon\r\nimport { AiFillDelete, AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';\r\n\r\n// context\r\nimport { DataContext } from '../../context/DataContext';\r\n\r\n// css\r\nimport './OrdersList.css'\r\nimport ModalAddArticle from '../modal_add_article/ModalAddArticle';\r\n\r\nconst OrdersList = () => {\r\n    // context\r\n    const { fetchGet, fetchPost, fetchPut, fetchDelete, userSession } = useContext(DataContext)\r\n\r\n    // states\r\n    const [orders, setOrders] = useState([])\r\n    const [idOrderSelected, setIdOrderSelected] = useState(-1)\r\n    const [indexOrderSelected, setIndexOrderSelected] = useState(-1)\r\n    const [indexCustomerSelected, setIndexCustomerSelected] = useState(-1)\r\n    const [itemsOrder, setItemsOrder] = useState([])\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        isDeleteOrder: false,\r\n        isRestore: false,\r\n        subject: '',\r\n        id: -1\r\n    })\r\n    const [customers, setCustomers] = useState([])\r\n    const [dates, setDates] = useState({\r\n        firstDate: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10/*<- last number is days*/).toLocaleDateString('en-CA'), // yyyy-MM-dd\r\n        lastDate: new Date().toLocaleDateString('en-CA') // yyyy-MM-dd\r\n    })\r\n    const [stateModalAddArticle, setStateModalAddArticle] = useState({\r\n        isShowModal: false,\r\n        idOrder: -1\r\n    })\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const loadItemsOrder = useCallback(async (idOrder) => {\r\n        const res = await fetchGet(`/customer_authorized.php?fn=getItemsOrder&idOrder=${idOrder}`)\r\n        //console.log(res)\r\n\r\n        if (res !== null) setItemsOrder(res['itemsOrder'])\r\n    }, [fetchGet])\r\n\r\n    const loadCustomers = useCallback(async () => {\r\n        const res = await fetchGet('/customer.php?fn=getAllCustomers&txtSearch=', userSession.token)\r\n        if (res !== null) setCustomers(res['customers'])        \r\n    }, [fetchGet, userSession])\r\n\r\n    const loadOrders = useCallback(async () => {\r\n        const idCustomer = document.getElementById('select').value\r\n        const res = await fetchGet(`/order.php?fn=getAllOrders&idCustomer=${idCustomer}&firstDate=${dates.firstDate}&lastDate=${dates.lastDate}`, userSession.token) // -1 = all orders\r\n        //console.log(res);\r\n\r\n        if (res !== null) {\r\n            // update ordersList\r\n            rowUnselect()\r\n            setOrders(res['orders'])\r\n            setItemsOrder([])\r\n            //console.log('idOrderSelected after update orders: ', idOrderSelected)\r\n        }        \r\n    }, [fetchGet, userSession, dates.firstDate, dates.lastDate])\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect loadCustomers()')\r\n        //console.log('firstDate: ', firstDate)\r\n        if (userSession) loadCustomers()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [loadCustomers, navigate, userSession])\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect loadOrders()')\r\n\r\n        if (userSession) loadOrders()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [userSession, navigate, loadOrders])\r\n\r\n    function comboCustomersChange(e) {\r\n        //console.log('comboCustomersChange', e.target.value)\r\n        loadOrders()\r\n    }\r\n\r\n    function rowUnselect() {\r\n        // clean selection\r\n        let row = document.getElementsByClassName('active')[0];\r\n        if (row) row.classList.remove('active');\r\n        setIdOrderSelected(-1)\r\n        setIndexOrderSelected(-1)\r\n        setIndexCustomerSelected(-1)\r\n    }\r\n\r\n    function rowClick(e) {\r\n        // console.log('idOrderSelected before rowClick', idOrderSelected);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            rowUnselect()\r\n\r\n            // get idOrder and select row\r\n            const idOrder = parseInt(e.target.parentElement.id) // text\r\n            setIdOrderSelected(idOrder)\r\n\r\n            // get index-order-selected\r\n            let i = orders.findIndex(order => order.id === idOrder)\r\n            setIndexOrderSelected(i)\r\n\r\n            // update index-customer-selected\r\n            i = customers.findIndex(customer => customer.id === orders[i].idCustomer)\r\n            //console.log('indexCustomerSelected: ', i)\r\n            setIndexCustomerSelected(i)\r\n\r\n            const row = document.getElementById(idOrder)\r\n            row.classList.add('active')\r\n            loadItemsOrder(idOrder)\r\n        }\r\n    }\r\n\r\n    function btnDeleteRestoringClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: true, // delete complete order\r\n            isRestore: true, // restore stock\r\n            subject: '¿Estás segur@ de cancelar el pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    function btnDeleteClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: true,\r\n            isRestore: false, // no restore stock\r\n            subject: '¿Estás segur@ de eliminar el pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    async function iconDeleteClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: false,\r\n            isRestore: false, // only when isDeleteOrder\r\n            subject: '¿Estás segur@ de eliminar el artículo del pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    const onBtnDeleteClick = async () => {\r\n        //console.log('idOrderSelected before onDelete: ', idOrderSelected);\r\n\r\n        // delete full order\r\n        let res\r\n        if (stateModalDelete.isDeleteOrder) {\r\n            let body\r\n            if (stateModalDelete.isRestore)\r\n                body = {\r\n                    id: stateModalDelete.id,\r\n                    isRestore: true\r\n                }\r\n            else\r\n                body = {\r\n                    id: stateModalDelete.id\r\n                }\r\n            res = await fetchDelete(\r\n                '/order.php?fn=deleteOrder',\r\n                body,\r\n                userSession.token\r\n            );\r\n        }\r\n        // delete item\r\n        else {\r\n            res = await fetchDelete(\r\n                '/order.php?fn=deleteItemOrder',\r\n                {\r\n                    id: stateModalDelete.id\r\n                },\r\n                userSession.token\r\n            );\r\n        }\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        const isSelectRow = !stateModalDelete.isDeleteOrder\r\n        if (res !== null) {\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                isDeleteOrder: false,\r\n                isRestore: false,\r\n                subject: '',\r\n                id: -1\r\n            });\r\n            //console.log('idOrderSelected before call loadOrders()', idOrderSelected)\r\n            if (!isSelectRow) loadOrders() // no select row\r\n            else reloadOrders()\r\n        }        \r\n    }\r\n\r\n    const onBtnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            isDeleteOrder: false,\r\n            isRestore: false,\r\n            subject: '',\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    async function reloadOrders() {\r\n        await loadOrders()\r\n        setIdOrderSelected(idOrderSelected) // reload same id\r\n        let row = document.getElementById(idOrderSelected)\r\n        row.classList.add('active')\r\n        loadItemsOrder(idOrderSelected)\r\n\r\n        // get index of order selected\r\n        let i = orders.findIndex(order => order.id === idOrderSelected)\r\n        setIndexOrderSelected(i)\r\n        //console.log('indexOrderSelected: ', i)\r\n\r\n        // get index-customer-selected\r\n        i = customers.findIndex(customer => customer.id === orders[i].idCustomer)\r\n        // console.log('indexCustomerSelected: ', i)\r\n        // console.log('customerSelected', customers[i])\r\n        setIndexCustomerSelected(i)\r\n    }\r\n\r\n    async function iconMinusClick(id) {\r\n        const i = itemsOrder.findIndex(item => item.id === id)\r\n        if (itemsOrder[i].qty >= 2) {\r\n            const res = await fetchPut('/order.php?fn=updateItemQty', { id: id, qty: -1 }, userSession.token)\r\n            if (res !== null) reloadOrders()            \r\n        }\r\n    }\r\n\r\n    async function iconPlusClick(id) {\r\n        const res = await fetchPut('/order.php?fn=updateItemQty', { id: id, qty: 1 }, userSession.token)\r\n        if (res !== null) reloadOrders()       \r\n    }\r\n\r\n    function dateChange(e) {\r\n        setDates({\r\n            ...dates, // dame values\r\n            [e.target.name]: e.target.value // only change 1 date named e.target.name\r\n        })\r\n    }\r\n\r\n    async function btnDeliverClick(id) {\r\n        const res = await fetchPut(\r\n            `/order.php?fn=deliverOrder&idOrder=${id}`,\r\n            {},\r\n            userSession.token\r\n        )\r\n        if (res !== null) {\r\n            if (idOrderSelected === -1) loadOrders()\r\n            else reloadOrders()\r\n        }        \r\n    }\r\n\r\n    /*------------ MODAL ADD ARTICLE ---------------*/\r\n\r\n    function btnAddClick() {\r\n        setStateModalAddArticle({\r\n            isShowModal: true,\r\n            idOrder: idOrderSelected\r\n        });\r\n    }\r\n\r\n    async function onBtnAcceptAddArticleClick(id) {\r\n        setStateModalAddArticle({\r\n            ...stateModalAddArticle, // same values\r\n            isShowModal: false, idOrder: -1 // only change this property\r\n        });\r\n\r\n        // insert item to order\r\n        let res = await fetchPost(\r\n            '/order.php?fn=insertItemOrder',\r\n            {\r\n                idOrder: idOrderSelected,\r\n                idArticle: id,\r\n                qty: 1\r\n            },\r\n            userSession.token\r\n        )\r\n        if (res !== null) reloadOrders()        \r\n    }\r\n\r\n    function onBtnCancelAddArticleClick() {\r\n        setStateModalAddArticle({\r\n            ...stateModalAddArticle, // same values\r\n            isShowModal: false, idOrder: -1 // only change this property\r\n        });\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Orders-table-detail'>\r\n            <table className='Orders-table'>\r\n                <caption><h3>Pedidos</h3></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}>\r\n                            <label htmlFor=\"firstDate\">Desde </label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"firstDate\"\r\n                                id=\"firstDate\"\r\n                                className='Orders-input Orders-date'\r\n                                value={dates.firstDate}\r\n                                onChange={dateChange}\r\n                            />\r\n                            <label htmlFor=\"lastDate\">  Hasta </label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"lastDate\"\r\n                                id=\"lastDate\"\r\n                                className='Orders-input Orders-date'\r\n                                value={dates.lastDate}\r\n                                onChange={dateChange}\r\n                            />\r\n                        </td>\r\n                        <td colSpan={4}>\r\n                            Cliente&nbsp;\r\n                            <select\r\n                                className='Orders-input'\r\n                                name='select'\r\n                                id='select'\r\n                                onChange={comboCustomersChange}\r\n                            >\r\n                                <option value='-1'>Todos</option>\r\n                                {\r\n                                    customers.map(customer =>\r\n                                        <option key={customer.id} value={customer.id}>{customer.fullname} {'(' + customer.email + ')'}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style={{ width: '10%' }}>Orden</th>\r\n                        <th style={{ width: '20%' }}>Fecha</th>\r\n                        <th style={{ width: '60%' }}>Cliente</th>\r\n                        <th style={{ width: '5%' }}>Arts</th>\r\n                        <th style={{ width: '15%' }}>Total</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        orders.map((order, i) =>\r\n                            <tr key={order.id} id={order.id} onClick={rowClick}>\r\n                                <td className='Orders-col-number'>{order.id}</td>\r\n                                <td>{order.created}</td>\r\n                                <td>{order.fullname}</td>\r\n                                <td className='Orders-col-number'>{order.items}</td>\r\n                                <td className='Orders-col-number'>${new Intl.NumberFormat('es-MX', { maxFractionDigits: 2 }).format(order.total)}</td>\r\n                                <td>\r\n                                    { // show button deliver if not is delivered\r\n                                        order.isDelivered\r\n                                            ? <code className='Orders-label'>{'ENTREGADO\\n' + order.dateDelivered}</code>\r\n                                            : <BtnPrimary text='Entregar' onClick={() => btnDeliverClick(order.id)} />\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    { // isDelivered Delete, else Cancel\r\n                                        order.isDelivered\r\n                                            ? userSession.isAdmin && <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(order.id)} />\r\n                                            : <BtnDanger text='Cancelar' onClick={() => btnDeleteRestoringClick(order.id)} />\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colSpan={4}>{orders.length} {orders.length !== 1 ? 'órdenes' : 'órden'}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n            {/* ---------------------- TICKET ----------------------- */}\r\n            <article className='Orders-detail Card'>\r\n                <table className='Orders-table-items'>\r\n                    {\r\n                        idOrderSelected > -1 &&\r\n                        <>\r\n                            <caption><b>Pedido: {idOrderSelected}</b></caption>\r\n                            {indexCustomerSelected > -1 &&\r\n                                <>\r\n                                    <caption>{customers[indexCustomerSelected].fullname}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].email}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].phone}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].streetAndNumber}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].suburb}, CP: {customers[indexCustomerSelected].cp}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].town}</caption>\r\n                                    {\r\n                                        !orders[indexOrderSelected].isDelivered &&\r\n                                        <caption style={{ textAlign: 'end' }}><BtnAccept text='Agregar' onClick={btnAddClick} /></caption>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '35%' }}>Cant</th>\r\n                            <th style={{ width: '45%' }}>Descripción</th>\r\n                            <th style={{ width: '10%' }}>Precio</th>\r\n                            <th style={{ width: '10%' }}>Importe</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            itemsOrder.map(item =>\r\n                                <tr key={item.id}>\r\n                                    <td>\r\n                                        { // only show buttons minus-plus if not isDelivered\r\n                                            indexOrderSelected > -1 && orders[indexOrderSelected].isDelivered\r\n                                                ? item.qty\r\n                                                :\r\n                                                <div className='Orders-wrapper-qty'>\r\n                                                    <AiOutlineMinus className='Orders-icon' onClick={() => iconMinusClick(item.id)} />\r\n                                                    {item.qty}\r\n                                                    <AiOutlinePlus className='Orders-icon' onClick={() => iconPlusClick(item.id)} />\r\n                                                </div>\r\n                                        }\r\n                                    </td>\r\n                                    <td className='Orders-col-text'>{item.articleName}</td>\r\n                                    <td className='Orders-col-number'>{item.price}</td>\r\n                                    <td className='Orders-col-number'>{item.amount}</td>\r\n                                    <td>\r\n                                        { // only if items > 1 and !order.isDelivered\r\n                                            itemsOrder.length > 1 && indexOrderSelected > -1 && !orders[indexOrderSelected].isDelivered &&\r\n                                            <AiFillDelete className='Orders-icon-delete' onClick={() => iconDeleteClick(item.id)} />\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    {\r\n                        idOrderSelected > -1 &&\r\n                        <tfoot className='Orders-detail-data'>\r\n                            <tr>\r\n                                <td colSpan={2}>{itemsOrder.length} artículos</td>\r\n                                <td className='Orders-col-number'>Total</td>\r\n                                <td className='Orders-col-number'>${new Intl.NumberFormat('es-MX', { maximumFractionDigits: 2 }).format(orders.find(order => order.id === idOrderSelected).total)}</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    }\r\n\r\n                </table>\r\n            </article>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete.isShowModal}\r\n                subject={stateModalDelete.subject}\r\n                btnDeleteClick={onBtnDeleteClick}\r\n                btnCancelClick={onBtnCancelClick}\r\n            />\r\n            <ModalAddArticle\r\n                isShowModal={stateModalAddArticle.isShowModal}\r\n                idOrder={stateModalAddArticle.idOrder}\r\n                btnAcceptClick={onBtnAcceptAddArticleClick}\r\n                btnCancelClick={onBtnCancelAddArticleClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersList","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotFound = () => {\r\n  window.history.replaceState(null, '', '/not-found')\r\n  return (\r\n    <div \r\n    className='Wrapper-flex' \r\n    style={{\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }}\r\n    >\r\n        <h3>Página no encontrada</h3>\r\n        <code>(Error 404)</code>\r\n        <Link to='/'>\r\n            <p>INICIO</p>\r\n        </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport FormCustomerData from '../form/FormCustomerData'\r\n\r\nconst CustomerRegister = () => {\r\n  return (\r\n    <>\r\n      <p className='ProductsTitle'>REGISTRO DE CLIENTE</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerData isAutoRegister={true} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerRegister","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\nconst CustomerActivation = () => {\r\n  // context\r\n  const { customerSession, fetchGet, fetchPut } = useContext(DataContext)\r\n  // params\r\n  const params = useParams()\r\n  // states\r\n  const [idCustomer, setIdCustomer] = useState(-1)\r\n  const [msg, setMsg] = useState('')\r\n  const [isSuccess, setIsSuccess] = useState(false)\r\n  // navigate\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    //console.log(params)\r\n    window.history.replaceState(null, '', '/customer-activation') // clean token\r\n\r\n    async function getIdCustomerFromToken() {\r\n      // get idCustomer from token (-1 not exists); if exists change token\r\n      let res = await fetchGet(`/index.php?fn=getIdCustomerFromToken&token=${params['token']}`)\r\n      if (res !== null) {\r\n        //console.log(res)\r\n        setIdCustomer(res['idCustomer'])\r\n\r\n        // verify if idCustomer > -1\r\n        if (res['idCustomer'] > -1) {\r\n          // activate account of customer\r\n          res = await fetchPut(\r\n            `/index.php?fn=activateCustomer`,\r\n            {\r\n              idCustomer: res['idCustomer']\r\n            }\r\n          )\r\n          setIsSuccess(true)\r\n          setMsg('Tu cuenta ha sido activada.')\r\n        }\r\n        else {\r\n          setIsSuccess(false)\r\n          setMsg('El link de activación no es válido.')\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!customerSession && params['token']) getIdCustomerFromToken()\r\n    else navigate('/not-found')\r\n  }, [customerSession, params, navigate, fetchGet, fetchPut])\r\n\r\n  return (\r\n    !customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>ACTIVACIÓN DE CUENTA</p>\r\n      <div className='Wrapper-flex'>\r\n        <div className='Card' style={{ width: '300px' }}>\r\n          <FormMessage msg={msg} isSuccess={isSuccess} />\r\n          {\r\n            idCustomer > -1 &&              \r\n              <Link to='/input'>\r\n                <p>Iniciar sesión</p>\r\n              </Link>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerActivation","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\nconst CustomerPassLost = () => {\r\n    // context\r\n    const { customerSession, fetchGet, fetchPut } = useContext(DataContext)\r\n    // states\r\n    const [email, setEmail] = useState('')\r\n    const [formMessage, setFormMessage] = useState({\r\n        msg: '',\r\n        isSuccess: false\r\n    })\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (customerSession) navigate('/not-found')\r\n    }, [customerSession, navigate, fetchGet, fetchPut])\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // get idCustomer from email\r\n        let res = await fetchGet(`/index.php?fn=getIdCustomerFromEmail&email=${email}`)\r\n        //console.log(res) // {idCustomer: <int>}\r\n        if (res !== null) {\r\n            if (res['idCustomer'] > -1) {\r\n                // send email for recovery pass\r\n                res = await fetchGet(`/index.php?fn=sendEmailRecoveryPass&id=${res['idCustomer']}&email=${email}`)\r\n                //console.log(res) // isSendedEmailRecoveryPass: bool\r\n                if (res !== null && res['isSendedEmailRecoveryPass']) {\r\n                    setFormMessage({\r\n                        msg: 'Correo enviado. Ingresa a tu correo\\npara restaurar tu contraseña.',\r\n                        isSuccess: true\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                setFormMessage({\r\n                    msg: 'El correo no se encuentra registrado',\r\n                    isSuccess: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    function inputChange(e) {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function btnCloseClick() {\r\n        setFormMessage({\r\n            ...formMessage, // same values\r\n            msg: '' // only change this value\r\n        })\r\n    }\r\n\r\n    return (\r\n        !customerSession &&\r\n        <>\r\n            <p className='ProductsTitle'>OLVIDÉ MI CONTRASEÑA</p>\r\n            <div className='Wrapper-flex'>\r\n                <div className='FormCard'>\r\n                    {!formMessage.isSuccess &&\r\n                        <form onSubmit={onSubmit}>\r\n                            <input\r\n                                type='email'\r\n                                name='email'\r\n                                placeholder='Correo'\r\n                                value={email}\r\n                                onChange={inputChange}\r\n                            />\r\n                            <input type='submit' value='Enviarme correo de restauración' />\r\n                        </form>\r\n                    }\r\n                    {\r\n                        formMessage.msg.length > 0 &&\r\n                        <FormMessage msg={formMessage.msg} btnCloseClick={btnCloseClick} isSuccess={formMessage.isSuccess} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPassLost","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n// context\r\nimport { DataContext } from '../../context/DataContext'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\nconst CustomerPassRestore = () => {\r\n    // context\r\n    const { customerSession, fetchGet, fetchPut } = useContext(DataContext)\r\n    // params\r\n    const params = useParams()\r\n    // states\r\n    const [idCustomer, setIdCustomer] = useState(-1)\r\n    const [inputs, setInputs] = useState({\r\n        pass: '',\r\n        confirm: ''\r\n    })\r\n    const [formMessage, setFormMessage] = useState({\r\n        msg: '',\r\n        isSuccess: false\r\n    })\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        //console.log(params)\r\n        window.history.replaceState(null, '', '/customer-pass-restore')\r\n\r\n        async function getIdCustomerFromToken() {\r\n            // get idCustomer from token (-1 not exists)\r\n            let res = await fetchGet(`/index.php?fn=getIdCustomerFromToken&token=${params['token']}`)\r\n            //console.log(res) // null|{idCustomer: <int>}\r\n            if (res !== null) {\r\n                setIdCustomer(res['idCustomer'])\r\n\r\n                // verify if idCustomer > -1\r\n                if (res['idCustomer'] > -1) {\r\n                    setFormMessage({\r\n                        msg: '',\r\n                        isSuccess: false\r\n                    })\r\n                }\r\n                else {\r\n                    setFormMessage({\r\n                        msg: 'El link para restaurar tu contraseña\\nno es válido.',\r\n                        isSuccess: false\r\n                    })                    \r\n                }\r\n            }\r\n        }\r\n\r\n        if (!customerSession && params['token']) getIdCustomerFromToken()\r\n        else navigate('/not-found')\r\n    }, [customerSession, params, navigate, fetchGet, fetchPut])\r\n\r\n    function inputChange(e) {\r\n        setInputs({\r\n            ...inputs, // same values\r\n            [e.target.name]: e.target.value // only change 1 value named equals that e.target.name \r\n        })\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // verify if pass and confirm are equals\r\n        if (inputs.pass === inputs.confirm) {\r\n            // update new pass\r\n            let res = await fetchPut(\r\n                '/index.php?fn=changePassCustomer',\r\n                {\r\n                    id: idCustomer,\r\n                    pass: inputs.pass\r\n                }\r\n            )\r\n            //console.log(res) // null|{}\r\n            if (res !== null) {\r\n                setInputs({\r\n                    pass: '',\r\n                    confirm: ''\r\n                })\r\n                setFormMessage({\r\n                    msg: 'Tu contraseña ha sido restaurada.',\r\n                    isSuccess: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            setInputs({\r\n                pass: '',\r\n                confirm: ''\r\n            })\r\n            setFormMessage({\r\n                msg: 'Las contraseñas son diferentes.',\r\n                isSuccess: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        !customerSession && params['token'] &&\r\n        <>\r\n            <p className='ProductsTitle'>RESTAURAR CONTRASEÑA</p>\r\n            <div className='Wrapper-flex'>\r\n                <div className='FormCard'>\r\n                    {\r\n                        idCustomer > -1 && !formMessage.isSuccess &&\r\n                        <form onSubmit={onSubmit}>\r\n                            <input\r\n                                type='password'\r\n                                name='pass'\r\n                                placeholder='Nueva contraseña'\r\n                                value={inputs.pass}\r\n                                onChange={inputChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                name='confirm'\r\n                                placeholder='Confirmar nueva contraseña'\r\n                                value={inputs.confirm}\r\n                                onChange={inputChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='submit'\r\n                                value='Aceptar'\r\n                            />\r\n                        </form>\r\n                    }\r\n                    {\r\n                        formMessage.msg.length > 0 &&\r\n                        <FormMessage msg={formMessage.msg} isSuccess={formMessage.isSuccess} />\r\n                    }\r\n                    {\r\n                        formMessage.isSuccess &&\r\n                        <Link to='/input'>\r\n                            <p>Iniciar sesión</p>\r\n                        </Link>\r\n                    } \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPassRestore","// react\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// context\r\nimport { DataProvider } from './context/DataContext';\r\n// components\r\nimport Header from \"./components/header/Header\";\r\nimport Welcome from './components/welcome/Welcome';\r\nimport UserInput from './components/users/UserInput';\r\nimport UsersList from \"./components/users/UsersList\";\r\nimport UserInsert from \"./components/users/UserInsert\";\r\nimport UserUpdate from \"./components/users/UserUpdate\";\r\nimport UserChangePass from \"./components/users/UserChangePass\";\r\nimport CustomerInput from './components/customers/CustomerInput';\r\nimport Categories from './components/categories/Categories';\r\nimport CategoryForm from './components/categories/CategoryForm';\r\nimport ArticlesList from './components/articles/ArticlesList';\r\nimport ArticleForm from './components/articles/ArticleForm';\r\nimport Products from './components/products/Products';\r\nimport ProductDetail from './components/products/ProductDetail';\r\nimport Customers from './components/customers/CustomersList';\r\nimport CustomerForm from './components/customers/CustomerForm';\r\nimport Cart from './components/cart/Cart';\r\nimport Footer from './components/footer/Footer';\r\nimport CustomerOrdersList from './components/customer_authorized/CustomerOrdersList';\r\nimport CustomerPass from './components/customer_authorized/CustomerPass';\r\nimport CustomerData from './components/customer_authorized/CustomerData';\r\nimport OrdersList from './components/orders/OrdersList';\r\nimport NotFound from './components/not_found/NotFound';\r\nimport CustomerRegister from './components/customers/CustomerRegister';\r\nimport CustomerActivation from './components/customers/CustomerActivation';\r\nimport CustomerPassLost from './components/customers/CustomerPassLost';\r\nimport CustomerPassRestore from './components/customers/CustomerPassRestore';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div className='Body-wrapper'>\r\n            <Router>\r\n                <DataProvider > {/* contain useNavigate, only into Router */}\r\n                    <Header />\r\n                    <main className='Main'>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Welcome />} />\r\n                            {/* <Route path=\"/products/:name\" element={<Products />} /> */}\r\n                            {/* --------------------- CATALOG ------------------------ */}\r\n                            {/* <Route path=\"/productos/:txtSearch/:isCategory\" element={<Products />} /> */}\r\n                            <Route path=\"/productos/:search/:txtSearch\" element={<Products />} />\r\n                            <Route path=\"/producto-detalle/:id\" element={<ProductDetail />} />\r\n                            {/* ---------------- INPUT CUSTOMER OR USER ------------- */}\r\n                            <Route path=\"/input\" element={<CustomerInput />} />\r\n                            <Route path=\"/admin\" element={<UserInput />} />\r\n                            {/* ----------------------- USER ------------------------ */}\r\n                            <Route path=\"/users\" element={<UsersList />} />\r\n                            <Route path=\"/user-insert\" element={<UserInsert />} />\r\n                            <Route path=\"/user-update/:id\" element={<UserUpdate />} />\r\n                            <Route path=\"/user-pass\" element={<UserChangePass />} />\r\n                            {/* ---------------------- CATEGORIES --------------------- */}\r\n                            <Route path=\"/categories\" element={<Categories />} />\r\n                            <Route path=\"/category-insert\" element={<CategoryForm />} />\r\n                            <Route path=\"/category-update/:id\" element={<CategoryForm />} />\r\n                            {/* ----------------------- ARTICLES ---------------------- */}\r\n                            <Route path=\"/articles\" element={<ArticlesList />} />\r\n                            <Route path=\"/article-insert\" element={<ArticleForm />} />\r\n                            <Route path=\"/article-update/:id\" element={<ArticleForm />} />\r\n                            {/* ----------------------- ORDERS ------------------------ */}\r\n                            <Route path=\"/orders\" element={<OrdersList />} />\r\n                            {/* ------------------- CUSTOMERS ------------------------- */}\r\n                            <Route path='/customers' element={<Customers />} />\r\n                            <Route path=\"/customer-insert\" element={<CustomerForm />} />\r\n                            <Route path=\"/customer-update/:id\" element={<CustomerForm />} />\r\n                            <Route path=\"/customer-register\" element={<CustomerRegister />} />\r\n                            <Route path=\"/customer-activation/:token\" element={<CustomerActivation />} />\r\n                            <Route path=\"/customer-pass-lost\" element={<CustomerPassLost />} />\r\n                            <Route path=\"/customer-pass-restore/:token\" element={<CustomerPassRestore />} />\r\n                            {/* -------------- CUSTOMER AUTHORIZED -------------------- */}\r\n                            <Route path=\"/carrito\" element={<Cart />} />\r\n                            <Route path=\"/customer-orders\" element={<CustomerOrdersList />} />\r\n                            <Route path=\"/customer-pass\" element={<CustomerPass />} />\r\n                            <Route path=\"/customer-data\" element={<CustomerData />} />\r\n                            {/* ---------------- PAGE NOT-FOUND ----------------------- */}\r\n                            <Route path=\"/*\" element={<NotFound />} />\r\n                            <Route path=\"/not-found\" element={<NotFound />} />\r\n                        </Routes>\r\n                    </main>\r\n                    <Footer />\r\n                </DataProvider>\r\n            </Router>\r\n        </div>\r\n    );\r\n}","import RenderDOM from 'react-dom';\nimport './App.css';\nimport App from './App'\n\nRenderDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}