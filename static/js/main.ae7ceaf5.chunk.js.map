{"version":3,"sources":["context/context.js","components/header/logoDamax215x83.jpg","components/header/Header.jsx","components/welcome/Welcome.jsx","components/form/FormMessage.jsx","components/users/UserInput.jsx","components/buttons/BtnAccept.jsx","components/buttons/BtnDanger.jsx","components/buttons/BtnSecundary.jsx","components/modal_delete/ModalDelete.jsx","components/modal_information/ModalInformation.jsx","components/users/UsersList.jsx","components/buttons/BtnPrimary.jsx","components/users/UserForm.jsx","components/users/UserInsert.jsx","components/users/UserUpdate.jsx","components/users/UserChangePass.jsx","components/customers/CustomerInput.jsx","components/categories/CategoryForm.jsx","components/articles/ArticlesList.jsx","components/articles/ArticleForm.jsx","components/products/Products.jsx","components/products/ProductDetail.jsx","components/customers/CustomersList.jsx","components/customers/CustomerForm.jsx","components/cart/Cart.jsx","components/footer/Footer.jsx","components/customer_authorized/CustomerOrdersList.jsx","components/form/FormCustomerPass.jsx","components/customer_authorized/CustomerPass.jsx","components/form/FormCustomerData.jsx","components/customer_authorized/CustomerData.jsx","components/modal_add_article/ModalAddArticle.jsx","components/orders/OrdersList.jsx","components/not_found/NotFound.jsx","components/customers/CustomerRegister.jsx","components/customers/CustomerConfirmEmail.jsx","components/form/FormPassLost.jsx","components/form/FormPassRestore.jsx","components/categories/CategoriesList.jsx","components/paypal/PayPal.jsx","App.jsx","index.js"],"names":["ENDPOINT","API_NO_CORS","TOKEN_DEFAULT","Context","createContext","ContextProvider","children","console","log","useState","JSON","parse","window","sessionStorage","getItem","userSession","setUserSession","localStorage","customerSession","setCustomerSession","cart","setCart","reduce","total","article","totalCart","setTotalCart","isReturnToCart","setIsReturnToCart","navigate","useNavigate","closeSessions","useCallback","clear","proccessPromise","prom","a","then","res","text","txt","catch","error","alert","data","onFetch","params","method","token","body","fetch","headers","stringify","Provider","value","PAYPAL_ENDPOINT","PAYPAL_CLIENTID","PAYPAL_SECRET","Header","useContext","isCategoriesMenu","setIsCategoriesMenu","isUserMenu","setIsUserMenu","isCustomerMenu","setIsCustomerMenu","categories","setCategories","isShowFinder","setIsShowFinder","txtSearch","setTxtSearch","categoriesLoad","useEffect","length","timeOut","to","setTimeout","clearTimeout","toggleCategoryMenu","toggleUserMenu","toggleCustomerMenu","closeSessionCustomerClick","e","target","className","onClick","map","category","categoryName","id","src","logo","alt","type","name","placeholder","onChange","autoFocus","Welcome","FormMessage","msg","btnCloseClick","isSuccess","UserInput","email","pass","inputsTxt","setInputsTxt","setMsg","showFormMessage","formOnSubmit","preventDefault","setItem","txtOnChange","onSubmit","required","BtnAccept","style","color","backgroundColor","width","BtnDanger","BtnSecundary","ModalDelete","isShowModal","subject","btnDeleteClick","btnCancelClick","ModalInformation","UsersList","users","setUsers","stateModalDelete","setStateModalDelete","isShowModalInfo","setIsShowModalInfo","loadUsers","onDelete","textDecoration","user","userName","isAdmin","isActive","colSpan","BtnPrimary","UserForm","confirm","setUser","isShowPass","setIsShowPass","loadUser","inputChange","checked","formSubmit","json","htmlFor","disabled","UserInsert","UserUpdate","useParams","history","replaceState","UserChangePass","current","isPassChanged","borderRadius","CustomerInput","txtInputs","setTxtInputs","txtChange","CategoryForm","isAvailable","setCategory","loadCategory","Articles","articles","setArticles","articleSelected","setArticleSelected","articlesLoad","btnSeeClick","rowClick","tagName","row","document","getElementsByClassName","classList","remove","parentElement","getElementById","add","onKeyPress","key","articleName","price","display","ArticleForm","nameImg","imgBase64","idCategory","description","stock","setArticle","trim","height","accept","file","files","FileReader","fr","onload","result","readAsDataURL","marginLeft","Products","ProductDetail","context","qty","setQty","formMessage","setFormMessage","getArticle","buttonENDPOINT","addClick","onCloseFormMessage","btnAddToCartClick","i","findIndex","articleCart","newCart","index","Customers","customers","setCustomers","customerSelected","setCustomerSelected","customersLoad","customer","fullname","isEmailConfirmed","CustomerForm","phone","streetAndNumber","suburb","cp","town","setCustomer","isContinue","customerLoad","undefined","Cart","messageTable","setMessageTable","messageSummary","setMessageSummary","useSearchParams","insertOrderFromCart","tokenPay","tokenPayer","items","has","get","newTotal","closeMessageTableClick","updateCart","amount","getIsStockComplete","closeMessageSummaryClick","Promise","all","articleNotStock","find","imgPath","substractClick","Intl","NumberFormat","format","filter","minimumFractionDigits","Footer","Date","getFullYear","CustomerOrdersList","orders","setOrders","orderSelected","setOrderSelected","itemsOrder","setItemsOrder","firstDate","now","toLocaleDateString","lastDate","dates","setDates","loadItemsOrder","idOrder","loadOrders","parseInt","order","dateChange","created","isDelivered","dateDelivered","textAlign","item","FormCustomerPass","inputsDefaultValues","inputs","setInputs","CustomerPass","customerId","FormCustomerData","isAutoRegister","loadCustomerData","readOnly","marginTop","fontSize","cursor","CustomerData","ModalAddArticle","btnAcceptClick","categoryNameSelected","setCategoryNameSelected","loadCategories","loadArticles","OrdersList","idOrderSelected","setIdOrderSelected","indexOrderSelected","setIndexOrderSelected","indexCustomerSelected","setIndexCustomerSelected","isDeleteOrder","isRestore","stateModalAddArticle","setStateModalAddArticle","loadCustomers","idCustomer","rowUnselect","onBtnDeleteClick","isSelectRow","reloadOrders","idArticle","btnDeliverClick","iconMinusClick","iconPlusClick","iconDeleteClick","maximumFractionDigits","NotFound","flexDirection","alignItems","CustomerRegister","CustomerConfirmEmail","setIdCustomer","getIdCustomerFromToken","CustomerPassLost","setEmail","CustomerPassRestore","setId","url","CategoriesList","overflow","PayPal","createOrder","auth","btoa","purchaseUnits","reference_id","currency_code","intent","purchase_units","application_context","brand_name","landing_page","user_action","return_url","cancel_url","location","replace","App","basename","path","element","FormPassLost","FormPassRestore","RenderDOM","render"],"mappings":"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","file":"static/js/main.ae7ceaf5.chunk.js","sourcesContent":["import { createContext, useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n\r\n\r\n//------------------ BACKEND --------------------//\r\n//const ENDPOINT = 'http://192.168.0.27/react_php-damaxboutique/backend'; // dev\r\nconst API_NO_CORS = 'https://cors-anywhere.herokuapp.com/'\r\nconst ENDPOINT = API_NO_CORS + 'http://gucitex.com.mx/web-damaxboutique/backend'; // dist\r\nconst TOKEN_DEFAULT = '0eab84ea-917d-4817-9e33-c98caecf626d'; // only for getDataUserFromPass\r\n\r\n// ----------------- PAYPAL ------------------//\r\n// sandbox\r\nconst PAYPAL_ENDPOINT = 'https://api-m.sandbox.paypal.com' // sandbox\r\nconst PAYPAL_CLIENTID = 'ASTGhIaKlycjzaLrjCbuEzROMDBpRfb23NWX4DLbyoLk-Y9D-QTACRisGtWBE2LqqZdckxRJ-GY_86kl'\r\nconst PAYPAL_SECRET = 'EC_FmktrxY0UDcOi_GjWB4I4m5MHJdadRxE2y8Yzy-uOd0qX_WowLmxQhl1xzgezRvXKgVLDLPyoGnSH'\r\n// live\r\n//const PAYPAL_ENDPOINT = 'https://api-m.paypal.com' // live\r\n\r\n\r\nexport const Context = createContext()\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n    console.log('>>>>> CONTEXT LOAD <<<<<')\r\n    //------------------- STATES ----------------------//\r\n    const [userSession, setUserSession] = useState(JSON.parse(window.sessionStorage.getItem('damax')))\r\n    const [customerSession, setCustomerSession] = useState(JSON.parse(window.localStorage.getItem('customer')));\r\n    const [cart, setCart] = useState(JSON.parse(window.localStorage.getItem('cart')) ?? [])\r\n\r\n    const [totalCart, setTotalCart] = useState(\r\n        // Calculate from articles cart\r\n        cart.reduce((total, article) => total += article['amount'], 0)\r\n    )\r\n    const [isReturnToCart, setIsReturnToCart] = useState(false)\r\n\r\n    //-------------- NAVIGATE -------------//\r\n    const navigate = useNavigate();\r\n\r\n    //--------------- FUNCTIONS ---------------//\r\n    const closeSessions = useCallback(() => {\r\n        window.sessionStorage.clear()\r\n        window.localStorage.clear()\r\n        setUserSession(null)\r\n        setCustomerSession(null)\r\n        navigate('/');\r\n    }, [navigate])\r\n\r\n    async function proccessPromise(prom) {\r\n        let data = await prom.then(res => res.text())\r\n        .then(txt => {\r\n            console.log('resTxt:', txt)\r\n            return JSON.parse(txt)\r\n        })\r\n        .catch(error => {\r\n            console.log('error fetch:', error)\r\n            alert('NO ES POSIBLE COMUNICARSE CON EL SERVIDOR')\r\n            return null\r\n        })\r\n\r\n        if (data !== null) {\r\n            if (!data['isAuth']) {\r\n                closeSessions()\r\n                data = null\r\n            }\r\n            else delete data['isAuth']\r\n        }\r\n        return data\r\n    }\r\n\r\n    // !import into useCallback for no-reload infinite\r\n    const onFetch = async (params, method = 'GET', token = TOKEN_DEFAULT, body = null) => {\r\n        const prom = fetch(ENDPOINT + params, {\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token,\r\n                'origin': ''\r\n            },\r\n            body: body !== null ? JSON.stringify(body) : null\r\n        })       \r\n\r\n        return await proccessPromise(prom)\r\n    }    \r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            // ---- BACKEND ----\r\n            ENDPOINT,\r\n\r\n            // ----- FETCH ------\r\n            onFetch,\r\n            \r\n            // ----- USER-SESSION ---- //\r\n            userSession,\r\n            setUserSession,\r\n\r\n            //------ CUSTOMER-SESSION\r\n            customerSession,\r\n            setCustomerSession,\r\n            isReturnToCart,\r\n            setIsReturnToCart,\r\n\r\n            //------- both sessions\r\n            closeSessions,\r\n\r\n            //------ CART\r\n            totalCart,\r\n            setTotalCart,\r\n            cart,\r\n            setCart,\r\n\r\n            //------ PAYPAL\r\n            PAYPAL_ENDPOINT,\r\n            PAYPAL_CLIENTID,\r\n            PAYPAL_SECRET\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logoDamax215x83.a8372eeb.jpg\";","// react\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router'\r\nimport { Link } from \"react-router-dom\";\r\n// icons\r\nimport { AiOutlineClose, AiOutlineMenu, AiOutlineUser, AiOutlineSearch, AiOutlineShoppingCart, AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { CgUserList } from 'react-icons/cg';\r\n// context\r\nimport { Context } from \"../../context/context\";\r\n// img\r\nimport logo from './logoDamax215x83.jpg';\r\n// css\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n    // context\r\n    const {\r\n        onFetch,\r\n        userSession,\r\n        customerSession,\r\n        closeSessions,\r\n        cart\r\n    } = useContext(Context);\r\n\r\n    // states\r\n    const [isCategoriesMenu, setIsCategoriesMenu] = useState(false);\r\n    const [isUserMenu, setIsUserMenu] = useState(false);\r\n    const [isCustomerMenu, setIsCustomerMenu] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [isShowFinder, setIsShowFinder] = useState(false)\r\n    const [txtSearch, setTxtSearch] = useState('')\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const categoriesLoad = useCallback(async () => {\r\n        let res = await onFetch('/index.php?fn=getAllCategories');\r\n        //console.log('res:', res); // { categories[?] }\r\n        if (res !== null) setCategories(res['categories'])\r\n    }, [onFetch])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> effect Header')        \r\n\r\n        setIsShowFinder(false) // hide finder\r\n        setTxtSearch('') // clear text finder\r\n\r\n        if (categories.length === 0) categoriesLoad() // only load the first time\r\n\r\n        return () => { }\r\n\r\n    }, [categoriesLoad, categories.length]);\r\n\r\n    const timeOut = useCallback(() => {\r\n        //console.log('timeOut()')\r\n        if (txtSearch.length > 0) {\r\n            navigate(`/products/text/${txtSearch}`)\r\n        }\r\n    }, [navigate, txtSearch])\r\n\r\n    useEffect(() => {\r\n        const to = setTimeout(timeOut, 1000)\r\n\r\n        return () => {\r\n            clearTimeout(to)\r\n        }\r\n    }, [txtSearch, timeOut])\r\n\r\n    const toggleCategoryMenu = () => {\r\n        setIsCategoriesMenu(!isCategoriesMenu);\r\n    }\r\n\r\n    const toggleUserMenu = () => {\r\n        setIsUserMenu(!isUserMenu);\r\n    }\r\n\r\n    const toggleCustomerMenu = () => {\r\n        setIsCustomerMenu(!isCustomerMenu);\r\n    }\r\n\r\n    const closeSessionClick = () => {\r\n        //console.log(\"closeSessionClick()\");\r\n        toggleUserMenu();\r\n\r\n        // clear sessionStorage\r\n        closeSessions()\r\n    }\r\n\r\n    const closeSessionCustomerClick = () => {\r\n        // close menu right of customer if is open\r\n        if (isCustomerMenu) setIsCustomerMenu(false);\r\n\r\n        // clear sessionStorage\r\n        closeSessions()\r\n    }\r\n\r\n    function iconFinderClick() {\r\n        setIsShowFinder(!isShowFinder)\r\n    }\r\n\r\n    function iconCloseFinderClick() {\r\n        setIsShowFinder(false)\r\n        setTxtSearch('')\r\n    }\r\n\r\n    async function inputChange(e) {\r\n        setTxtSearch(e.target.value)\r\n    }\r\n\r\n    function headerClick(e) {\r\n        //console.log(e.target)\r\n        if (isShowFinder) setIsShowFinder(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className={userSession ? 'Header isUserSession' : customerSession ? 'Header isCustomerSession' : 'Header'} onClick={headerClick}>\r\n\r\n                {/* --------------------- SIDEBAR LEFT MENU CATEGORIES ---------------------------------- */}\r\n                <nav className={isCategoriesMenu ? 'Header-menu-categories active' : 'Header-menu-categories'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleCategoryMenu} />\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCategoryMenu}>INICIO</li>\r\n                        </Link>\r\n                        <hr />\r\n\r\n                        {//------------------- LOAD CATEGORIES ---------------------//\r\n                            categories.map(category =>\r\n                                category['isAvailable'] &&\r\n                                <div key={category.id}>\r\n                                    <hr />\r\n                                    <Link to={`/products/category/${category.categoryName}`} className='Header-link-item'>\r\n                                        <li className=\"Header-item\" onClick={toggleCategoryMenu}>{category.categoryName}</li>\r\n                                    </Link>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        {/*\r\n                        <>\r\n                            <Link to=\"/products/cadenas\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>CADENAS Y CHOKERS</li>\r\n                            </Link>\r\n                            <hr />\r\n                            <Link to=\"/products/collares\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>COLLARES</li>\r\n                            </Link>\r\n                            <hr />\r\n                            <Link to=\"/products/personalizados\" className=\"Header-link-item\">\r\n                                <li className=\"Header-item\" onClick={showSidebar}>PERSONALIZADOS</li>\r\n                            </Link>\r\n                        </>\r\n                    */}\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    {  //---------------- only if not user in session -----------------//\r\n                        !userSession && !customerSession &&\r\n                        <Link to=\"/input\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={toggleCategoryMenu}>Cuenta</p>\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        customerSession &&\r\n                        <Link to=\"/input\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={closeSessionCustomerClick}>Cerrar sesión</p>\r\n                        </Link>\r\n                    }\r\n                </nav>\r\n\r\n                {/* --------------- ICON LEFT MENU CATEGORIES-------------- */}\r\n                <AiOutlineMenu\r\n                    className={userSession\r\n                        ? 'Header-icon-burguer'\r\n                        : 'Header-icon-burguer not-session'}\r\n                    onClick={toggleCategoryMenu}\r\n                />\r\n\r\n                {/* ---------------- LOGO ---------------- */}\r\n                <Link to='/' className=\"Header-link-logo\">\r\n                    <img className='Header-logo' src={logo} alt=\"logo\" />\r\n                </Link>\r\n\r\n                {/* -------------- GROUP ICONS CUSTOMER-INPUT, SEARCH, CART --------------- */}\r\n                <nav className=\"NavRight\">\r\n                    { //----------- ICON CUSTOMER-INPUT -------------//\r\n                        !userSession && !customerSession &&\r\n                        <Link to=\"/input\">\r\n                            <AiOutlineUser className=\"Header-icon-user\" />\r\n                        </Link>\r\n                    }\r\n                    <AiOutlineSearch className=\"Header-icon-search\" onClick={iconFinderClick} />\r\n                    <Link to=\"/cart\">\r\n                        <div className=\"Header-container-cart\">\r\n                            <AiOutlineShoppingCart className=\"Header-icon-cart\" />\r\n                            {\r\n                                cart.length > 0 &&\r\n                                <span>{cart.length}</span>\r\n                            }\r\n                        </div>\r\n                    </Link>\r\n                    { //----------------- ICON CUSTOMER-MENU -------------------//\r\n                        customerSession &&\r\n                        <>\r\n                            <CgUserList className=\"Header-icon-menu-customer\" onClick={toggleCustomerMenu} />\r\n                            <span className=\"Header-customeremail\">{customerSession['email']}</span>\r\n                        </>\r\n                    }\r\n                    { //------------------- ICON USER-MENU -------------------// \r\n                        userSession &&\r\n                        <>\r\n                            <CgUserList className='Header-icon-menu-customer' onClick={toggleUserMenu} />\r\n                            <span className=\"Header-username\">{userSession['userName']}</span>\r\n                        </>\r\n                    }\r\n                </nav>\r\n\r\n                {/* --------------------- RIGHT SIDEBAR USER MENU ---------------------------------- */}\r\n                <nav className={isUserMenu ? 'Header-menu-user active' : 'Header-menu-user'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleUserMenu} />\r\n                    {\r\n                        userSession &&\r\n                        <p>{userSession['userName']}</p>\r\n                    }\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/categories\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>CATEGORIAS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/articles\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>ARTÍCULOS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/customers\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>CLIENTES</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"/orders\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleUserMenu}>PEDIDOS</li>\r\n                        </Link>\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    { //------------ only if user is super-admin ---------------//\r\n                        userSession && userSession['id'] === 0 &&\r\n                        <Link to=\"/users\" className=\"Header-link-item\">\r\n                            <p className=\"Header-item\" onClick={toggleUserMenu}>Usuarios</p>\r\n                        </Link>\r\n                    }\r\n                    <Link to=\"/user-pass\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleUserMenu}>Cambiar contraseña</p>\r\n                    </Link>\r\n                    <Link to=\"/\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={closeSessionClick}>Cerrar sesión</p>\r\n                    </Link>\r\n                </nav>\r\n\r\n                {/* --------------------- RIGHT SIDEBAR CUSTOMER MENU ---------------------------------- */}\r\n                <nav className={isCustomerMenu ? 'Header-menu-customer active' : 'Header-menu-customer'}>\r\n                    <AiOutlineClose className=\"Header-icon-close\" onClick={toggleCustomerMenu} />\r\n                    {\r\n                        customerSession &&\r\n                        <p>{customerSession['email']}</p>\r\n                    }\r\n                    <ul className=\"Header-list\">\r\n                        <Link to=\"/customer-orders\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCustomerMenu}>MIS PEDIDOS</li>\r\n                        </Link>\r\n                        <hr />\r\n                        <Link to=\"#\" className=\"Header-link-item\">\r\n                            <li className=\"Header-item\" onClick={toggleCustomerMenu}>ESTADO DE CUENTA</li>\r\n                        </Link>\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    {/* --------------------- DATA CUSTOMER AND CLOSE SESSION ---------------------- */}\r\n                    <Link to=\"/customer-data\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleCustomerMenu}>Mis datos</p>\r\n                    </Link>\r\n                    <Link to=\"/customer-pass\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={toggleCustomerMenu}>Cambiar contraseña</p>\r\n                    </Link>\r\n                    <Link to=\"/input\" className=\"Header-link-item\">\r\n                        <p className=\"Header-item\" onClick={closeSessionCustomerClick}>Cerrar sesión</p>\r\n                    </Link>\r\n                </nav>\r\n            </header>\r\n            { //-------------- FINDER ----------------//\r\n                isShowFinder &&\r\n                <section className='Header-finder'>\r\n                    <AiOutlineSearch className=\"Header-finder-icon\" />\r\n                    <input\r\n                        type=\"search\"\r\n                        name=\"search\"\r\n                        placeholder='BUSCAR...'\r\n                        value={txtSearch}\r\n                        onChange={inputChange}\r\n                        autoFocus={isShowFinder}\r\n                    />\r\n                    <AiOutlineCloseCircle className=\"Header-finder-icon close\" onClick={iconCloseFinderClick} />\r\n                </section>\r\n            }\r\n        </>\r\n    );\r\n}","export default function Welcome() {\r\n    return (\r\n        <h3>Bienvenidos</h3>\r\n    );\r\n}","// React\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n// css\r\nimport './FormMessage.css';\r\n\r\nexport default function FormMessage({msg, btnCloseClick, isSuccess = false}) {\r\n    \r\n    return (\r\n        <div className={isSuccess ? 'FormMessageWrapper success' : 'FormMessageWrapper'} id='formMessageWrapper'>\r\n            <AiOutlineCloseCircle className='FormMessageIcon' onClick={btnCloseClick} />\r\n            <code>{msg}</code> {/* <pre> pre-formatter with line breaks */}\r\n        </div>\r\n    );\r\n}","import { useNavigate, Link } from 'react-router-dom';\r\nimport { useState, useEffect, useContext } from \"react\";\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport FormMessage from \"../form/FormMessage\";\r\n\r\nexport default function UserInput() {\r\n    // context\r\n    const { onFetch, TOKEN_DEFAULT, userSession, setUserSession, customerSession } = useContext(Context);\r\n\r\n    // states\r\n    const [inputsTxt, setInputsTxt] = useState({\r\n        email: '',\r\n        pass: '',\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // only first load\r\n    useEffect(() => {\r\n        //console.log('useEffect UserInput');\r\n        if (userSession || customerSession) navigate('/');\r\n    }, [userSession, customerSession, navigate]);\r\n\r\n    const showFormMessage = (msg) => {\r\n        setMsg(msg);\r\n    }\r\n\r\n    const formOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let res = await onFetch(\r\n            '/user.php?fn=getDataUserFromPass', \r\n            'POST',\r\n            TOKEN_DEFAULT,\r\n            inputsTxt\r\n            )\r\n        setInputsTxt({\r\n            email: '',\r\n            pass: ''\r\n        })\r\n\r\n        if (res !== null) {\r\n            res = res['user']\r\n            \r\n            // email and pass OK\r\n            if (res !== null) {\r\n                if (res['isActive']) {\r\n                    // clean fields useless\r\n                    delete res['isActive']\r\n                    delete res['pass']\r\n\r\n                    // clear and save user on sessionStorage\r\n                    window.sessionStorage.clear()\r\n                    window.sessionStorage.setItem('damax', JSON.stringify(res));\r\n\r\n                    // update user-on-session-state\r\n                    setUserSession(res);\r\n\r\n                    // redirect to root\r\n                    //navigate('/'); // import useNavigate from react-router-dom\r\n                }\r\n                else showFormMessage('El usuario no está activo')\r\n            }\r\n            else showFormMessage('Correo y/o contraseña incorrecta');\r\n        }\r\n    }\r\n\r\n    const txtOnChange = (e) => {\r\n        //console.log(e.target.value);        \r\n        setInputsTxt({\r\n            ...inputsTxt,\r\n            [e.target.name]: e.target.value // same name inputs and variables\r\n        });\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        !userSession && !customerSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>INGRESO DE USUARIO AUTORIZADO</h3>\r\n                <form onSubmit={formOnSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder='Correo'\r\n                        value={inputsTxt.email}\r\n                        onChange={txtOnChange}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"pass\"\r\n                        placeholder='Contraseña'\r\n                        value={inputsTxt.pass}\r\n                        onChange={txtOnChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        <Link to=\"/user-pass-lost\">\r\n                            <span>Olvidé mi contraseña</span>\r\n                        </Link>\r\n                    }\r\n                    <input type=\"submit\" value=\"INICIAR SESIÓN\" />\r\n                </form>\r\n                {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nconst BtnAccept = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn Btn-accept'\r\n      onClick={onClick}  \r\n      style={{\r\n        color: 'white',\r\n        backgroundColor: 'rgb(0, 187, 0)',\r\n        width: '80px'\r\n      }}    \r\n    >{text}</button>\r\n  )\r\n}\r\n\r\nexport default BtnAccept","import React from 'react'\r\n\r\nconst BtnDanger = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn'\r\n      onClick={onClick}  \r\n      style={{        \r\n        backgroundColor: 'salmon'\r\n      }}    \r\n    >{text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BtnDanger","import React from 'react'\r\n\r\nconst BtnSecundary = ({text, onClick}) => {\r\n  return (\r\n    <button className='Btn Btn-secundary' onClick={onClick}>{text}</button>\r\n  )\r\n}\r\n\r\nexport default BtnSecundary","// components\r\nimport BtnDanger from '../buttons/BtnDanger';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// css\r\nimport './ModalDelete.css';\r\n\r\nconst ModalDelete = ({ isShowModal, subject, btnDeleteClick, btnCancelClick }) => {\r\n    \r\n  return (\r\n    <div className={isShowModal ? 'Modal-delete active' : 'Modal-delete'}>\r\n      <div className='Modal-card'>\r\n        <h3>Eliminar</h3>\r\n        <p>{subject}</p>\r\n        <div className='Modal-actions'>\r\n          <BtnDanger text='Eliminar' onClick={btnDeleteClick}/>\r\n          <BtnSecundary text='Cancelar' onClick={btnCancelClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalDelete","// components\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// css\r\nimport './ModalInformation.css';\r\n\r\nconst ModalInformation = ({ isShowModal, subject, btnCloseClick }) => {\r\n    \r\n  return (\r\n    <div className={isShowModal ? 'Modal-information active' : 'Modal-information'}>\r\n      <div className='Modal-card'>\r\n        <h3>Eliminar</h3>\r\n        <p>{subject}</p>\r\n        <div className='Modal-actions'>\r\n          <BtnSecundary text='Cerrar' onClick={btnCloseClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInformation","// React\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { Context } from \"../../context/context\";\r\n// components\r\nimport BtnAccept from \"../buttons/BtnAccept\";\r\nimport ModalDelete from \"../modal_delete/ModalDelete\";\r\nimport ModalInformation from \"../modal_information/ModalInformation\";\r\n// icons\r\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai'\r\n// css\r\nimport './UsersList.css'\r\n\r\nexport default function UsersList() {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context);\r\n    // states    \r\n    const [users, setUsers] = useState([]);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [isShowModalInfo, setIsShowModalInfo] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect UsersList');\r\n\r\n        async function loadUsers() {\r\n            let data = await onFetch(\r\n                '/user.php?fn=getAllUsers',\r\n                'GET',\r\n                userSession['token']\r\n            );\r\n            //console.log(data);\r\n\r\n            if (data !== null) setUsers(data['users']);\r\n        }\r\n\r\n        if (userSession && userSession['id'] === 0) loadUsers();\r\n        else navigate('/not-found')\r\n    }, [onFetch, userSession, stateModalDelete, navigate]); // when change on modalDelete for refresh users\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('before: ', stateModalDelete);\r\n\r\n        if (id !== 0) {\r\n            setStateModalDelete({\r\n                isShowModal: true, // show-Modal\r\n                id: id // only change id\r\n            });\r\n            //console.log('after: ', stateModalDelete);\r\n        }\r\n        else setIsShowModalInfo(true);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n        const json = await onFetch | (\r\n            '/user.php?fn=deleteUser',\r\n            'DELETE',\r\n            userSession['token'],\r\n            {\r\n                id: stateModalDelete['id']\r\n            }\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null)\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const btnCloseClick = () => {\r\n        setIsShowModalInfo(false);\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className=\"Wrapper-flex\">\r\n            <div className=\"UsersList-wrapper-table\">\r\n                <table className=\"Table UsersList-table\">\r\n                    <caption><h2>Lista de usuarios</h2></caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Usuario</th>\r\n                            <th>Correo</th>\r\n                            <th>Administrador</th>\r\n                            <th>Activo</th>\r\n                            <th>\r\n                                <Link to=\"/user-insert\" className=\"Table-link-add\" style={{ textDecoration: 'none' }}>\r\n                                    <BtnAccept text='Nuevo' />\r\n                                </Link>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map(user =>\r\n                                <tr key={user.id}>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td className=\"Table-cell-center\">{user.isAdmin && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                    <td className=\"Table-cell-center\">{user.isActive && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                    <td>\r\n                                        {/* <BtnPrimary text='Modificar' onClick={() => navigate(`/user-update/${user.id}`)} /> */}\r\n                                        {/* <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(user.id)} /> */}\r\n                                        <AiFillEdit\r\n                                            className=\"UsersList-icon-edit\"\r\n                                            onClick={() => navigate(`/user-update/${user.id}`)}\r\n                                        />\r\n                                        <AiFillDelete\r\n                                            className=\"UsersList-icon-delete\"\r\n                                            onClick={() => btnDeleteClick(user.id)}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colSpan={5}>{users.length} usuarios</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject='¿Estás segur@ de eliminar el usuario?'\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n            <ModalInformation\r\n                isShowModal={isShowModalInfo}\r\n                subject='El usuario no puede ser eliminado porque es el super-admin'\r\n                btnCloseClick={btnCloseClick}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nconst BtnPrimary = ({ text, onClick, type = 'button'}) => {\r\n  return (\r\n    <button type={type}\r\n      className='Btn'\r\n      onClick={onClick}  \r\n      style={{\r\n        color: 'white',\r\n        backgroundColor: 'dodgerblue'\r\n      }}    \r\n    >{text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BtnPrimary","// React\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { Context } from '../../context/context';\r\n// css\r\nimport './UserForm.css';\r\n\r\nexport default function UserForm({ id }) {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context);\r\n    // states\r\n    const [user, setUser] = useState({\r\n        id: -1, // for verify if email exists\r\n        userName: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        isActive: true,\r\n        pass: '',\r\n        confirm: ''\r\n    });\r\n    const [isShowPass, setIsShowPass] = useState(false)\r\n    const [msg, setMsg] = useState('');\r\n    // navigate\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('Effect UserForm');\r\n\r\n        async function loadUser(id) {\r\n            let data = await onFetch(\r\n                '/user.php?fn=getUser&id=' + id,\r\n                'GET',\r\n                userSession['token']\r\n            );\r\n            //console.log(data);\r\n\r\n            //data['isAuth'] = false; // test for close session\r\n            if (data !== null) {\r\n                data = data['user'];\r\n                data['pass'] = '';\r\n                data['confirm'] = '';\r\n                setUser(data);\r\n            }\r\n        }\r\n\r\n        if (userSession) {\r\n            if (id) loadUser(id);\r\n            else setIsShowPass(true);\r\n        }\r\n        else navigate('/not-found')\r\n\r\n        return () => {\r\n            //console.log('Effect UserForm BYE') \r\n        }\r\n    }, [id, userSession, msg, onFetch, navigate]);\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target);\r\n        const { name, value } = e.target; // extract name of Element and value\r\n        //console.log('user: ', user);\r\n        setUser({\r\n            ...user, // copy object (same values)\r\n            [name]: name !== 'isAdmin' && name !== 'isActive' ? value : e.target.checked // only change Element named 'name'\r\n        });\r\n    }\r\n\r\n    const toggleShowPass = (e) => {\r\n        //console.log(e.target.checked);\r\n        setIsShowPass(e.target.checked);\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('user before save: ', user);\r\n\r\n        // verify if email exists\r\n        let json = await onFetch(\r\n            `/user.php?fn=isExistsEmail&email=${user['email']}&id=${user['id']}`,\r\n            'GET',\r\n            userSession['token']\r\n            );\r\n        //console.log(json);\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsEmail']) {\r\n\r\n                // verify if pass = confirm\r\n                if (user['pass'] === user['confirm']) {\r\n\r\n                    // update\r\n                    if (id) {\r\n                        json = await onFetch(\r\n                            '/user.php?fn=updateUser',\r\n                            'PUT',\r\n                            userSession['token'],\r\n                            user\r\n                        )\r\n                        //console.log(json);\r\n                    }\r\n                    // insert\r\n                    else {\r\n                        json = await onFetch(\r\n                            '/user.php?fn=insertUser',\r\n                            'POST',\r\n                            userSession['token'],\r\n                            user\r\n                        )\r\n                        //console.log(json);\r\n                    }\r\n                    navigate('/users');\r\n                }\r\n                else setMsg('La contraseña y su confirmación son diferentes');\r\n            }\r\n            else setMsg('El correo ya existe');\r\n        }\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className=\"Card\">\r\n            <h4>{id ? 'Modificando usuario' : 'Agregando usuario'}</h4>\r\n            <form className='Form-user' onSubmit={formSubmit}>\r\n                <label htmlFor=\"userName\">Usuario</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id='userName'\r\n                    name=\"userName\"\r\n                    value={user.userName}\r\n                    onChange={inputChange}\r\n                    autoFocus\r\n                    required />\r\n                <label htmlFor=\"email\">Correo</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id='email'\r\n                    name=\"email\"\r\n                    value={user.email}\r\n                    onChange={inputChange}\r\n                    required />\r\n                <label htmlFor=\"isAdmin\">Administrador</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id='isAdmin'\r\n                    name=\"isAdmin\"\r\n                    checked={user.isAdmin}\r\n                    onChange={inputChange}\r\n                    disabled={user.id === 0}\r\n                />\r\n                <label htmlFor=\"isActive\">Activo</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id='isActive'\r\n                    name=\"isActive\"\r\n                    checked={user.isActive}\r\n                    onChange={inputChange}\r\n                    disabled={user.id === 0}\r\n                />\r\n                {  // show only if editing\r\n                    id &&\r\n                    <>\r\n                        <label htmlFor=\"password\">Cambiar contraseña</label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"isShowPass\"\r\n                            onChange={toggleShowPass}\r\n                        />\r\n                    </>\r\n                }\r\n                { // show only if above checkbox is checked\r\n                    isShowPass &&\r\n                    <div className='Form-user-pair-pass'>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Contraseña</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                value={user.pass}\r\n                                onChange={inputChange}\r\n                                required={id || isShowPass /* with id or user-editing with checked-showPass*/}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"confirm\">Confirmar</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"confirm\"\r\n                                value={user.confirm}\r\n                                onChange={inputChange}\r\n                                required={id || isShowPass /* with id or user-editing with checked-showPass */}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <div className='Form-user-actions'>\r\n                    <BtnPrimary text='Guardar' type='submit' />\r\n                    <BtnSecundary text='Cancelar' onClick={() => navigate('/users')} />\r\n                </div>\r\n\r\n                { // show only if msg !== ''\r\n                    msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","// components\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport default function UserInsert({onFetch}) {\r\n    return (\r\n        <div className=\"Wrapper-flex\">            \r\n            <UserForm onFetch={onFetch} />\r\n        </div>\r\n    );\r\n}","import { useContext, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useParams } from 'react-router-dom'\r\n// context\r\nimport { Context } from '../../context/context'\r\n// components\r\nimport UserForm from \"./UserForm\"\r\n\r\nexport default function UserUpdate() {\r\n    // context\r\n    const { userSession } = useContext(Context)\r\n    // navigate\r\n    const navigate = useNavigate()\r\n    const params = useParams(); // important!\r\n    \r\n    useEffect(() => {\r\n      if (userSession) {\r\n          // url hide param\r\n        window.history.replaceState(null, '', '/user-update')\r\n      }\r\n      else navigate('/not-found')    \r\n      return () => {}\r\n    }, [navigate, userSession])\r\n    \r\n    \r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>            \r\n            <UserForm id={params['id']}/>\r\n        </div>\r\n    );\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useContext } from \"react\";\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport FormMessage from \"../form/FormMessage\";\r\n\r\nexport default function UserChangePass() {\r\n\r\n    // context\r\n    const { userSession, onFetch } = useContext(Context);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [inputsTxt, setInputsTxt] = useState({\r\n        current: '',\r\n        pass: '',\r\n        confirm: '',\r\n        isPassChanged: false\r\n    });\r\n\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // only first load\r\n    useEffect(() => {\r\n        //console.log('useEffect UserChangePass');\r\n        if (!userSession) navigate('/not-found');\r\n    });\r\n\r\n    const showFormMessage = (msg) => {\r\n        setMsg(msg);\r\n    }\r\n\r\n    const formOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // verify current pass\r\n        let res = await onFetch(\r\n            '/user.php?fn=isPassOk',\r\n            'POST',\r\n            userSession.token,\r\n            {\r\n                pass: inputsTxt.current,\r\n                id: userSession.id\r\n            }\r\n        );\r\n        //console.log(res);\r\n        if (res !== null) {\r\n            setInputsTxt({\r\n                ...inputsTxt,\r\n                current: '',\r\n                pass: '',\r\n                confirm: ''\r\n            })\r\n            setMsg('');\r\n            if (res['isPassOk']) {\r\n                // verify if new pass = confirm\r\n                if (inputsTxt.pass === inputsTxt.confirm) {\r\n                    res = await onFetch(\r\n                        '/user.php?fn=setUserPass',\r\n                        'POST',\r\n                        userSession.token,\r\n                        {\r\n                            pass: inputsTxt.pass,\r\n                            id: userSession.id\r\n                        }\r\n                    );\r\n                    //console.log(res);\r\n\r\n                    if (res !== null) {\r\n                        if (res['isPassChanged']) {\r\n                            setInputsTxt({\r\n                                ...inputsTxt,\r\n                                isPassChanged: true\r\n                            });\r\n                            setMsg('Contraseña ha sido actualizada');\r\n                        }\r\n                    }\r\n                }\r\n                else showFormMessage('Nueva contraseña y su confirmación\\nson diferentes')\r\n            }\r\n            else showFormMessage('Contraseña actual incorrecta')\r\n        }\r\n    }\r\n\r\n    const txtOnChange = (e) => {\r\n        //console.log(e.target.value);        \r\n        setInputsTxt({\r\n            ...inputsTxt, // copy same data\r\n            [e.target.name]: e.target.value // only update input changued\r\n        });\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>CAMBIAR CONTRASEÑA DE USUARIO</h3>\r\n                { // only if isPassChange = false\r\n                    !inputsTxt.isPassChanged &&\r\n                    <form onSubmit={formOnSubmit}>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"current\"\r\n                            placeholder='Contraseña actual'\r\n                            value={inputsTxt.current}\r\n                            onChange={txtOnChange} \r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pass\"\r\n                            placeholder='Nueva contraseña'\r\n                            value={inputsTxt.pass}\r\n                            onChange={txtOnChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm\"\r\n                            placeholder='Confirmar nueva contraseña'\r\n                            value={inputsTxt.confirm}\r\n                            onChange={txtOnChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"CAMBIAR\"\r\n                            style={{ backgroundColor: 'dodgerblue', borderRadius: '5px' }}\r\n                        />\r\n                    </form>\r\n\r\n                }\r\n                {msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} isSuccess={inputsTxt.isPassChanged} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// context\r\nimport { Context } from '../../context/context'\r\n\r\nexport default function CustomerInput() {\r\n    // context\r\n    const {\r\n        onFetch,\r\n        TOKEN_DEFAULT,\r\n        userSession,\r\n        customerSession,\r\n        setCustomerSession,\r\n        closeSessions,\r\n        isReturnToCart,\r\n        setIsReturnToCart\r\n    } = useContext(Context)\r\n    // states\r\n    const [txtInputs, setTxtInputs] = useState({\r\n        email: '',\r\n        pass: ''\r\n    })\r\n    const [msg, setMsg] = useState('')\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect-CustomerInput')\r\n\r\n        if (customerSession || userSession) navigate('/')\r\n\r\n        return () => {\r\n            //console.log('useEffect-CustomerInput BYE') \r\n        }\r\n    })\r\n\r\n    const txtChange = (e) => {\r\n        //console.log(e.target)\r\n        setTxtInputs({\r\n            ...txtInputs,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let res = await onFetch(\r\n            '/customer_authorized.php?fn=getDataCustomerFromPass',\r\n            'POST',\r\n            TOKEN_DEFAULT,\r\n            txtInputs\r\n        )\r\n        setTxtInputs({\r\n            email: '',\r\n            pass: ''\r\n        })\r\n\r\n        if (res !== null) {\r\n            res = res['customer']\r\n\r\n            // email and pass OK\r\n            if (res !== null) {\r\n                if (res['isActive']) {\r\n                    if (res['isEmailConfirmed']) {\r\n                        // close sessions\r\n                        closeSessions()\r\n\r\n                        // delete fields useless\r\n                        delete res['phone']\r\n                        delete res['streetAndNumber']\r\n                        delete res['suburb']\r\n                        delete res['cp']\r\n                        delete res['town']\r\n                        delete res['isEmailConfirmed']\r\n                        delete res['isActive']\r\n\r\n\r\n                        // save data on local-storage\r\n                        window.localStorage.setItem('customer', JSON.stringify(res))\r\n                        setCustomerSession(res);\r\n\r\n                        // verify if comming from cart\r\n                        if (isReturnToCart) {\r\n                            //console.log('isReturnToCart')\r\n                            setIsReturnToCart(false)\r\n                            navigate('/carrito')\r\n                        }\r\n                        else navigate('/')\r\n                    }\r\n                    else setMsg('Tu correo no confirmado,\\ningresa a tu correo para confirmarlo.')\r\n                }\r\n                else setMsg('Tu cuenta no está activa.')\r\n            }\r\n            else setMsg('Correo y/o contraseña incorrecta.')\r\n            setTxtInputs({\r\n                ...txtInputs, // same values\r\n                pass: '' // only change 1 property\r\n            })\r\n        }\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        !customerSession && !userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"FormCard\">\r\n                <h3>INICIA SESIÓN</h3>\r\n                <form onSubmit={onSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={txtInputs.email}\r\n                        onChange={txtChange}\r\n                        placeholder='Correo'\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"pass\"\r\n                        value={txtInputs.pass}\r\n                        onChange={txtChange}\r\n                        placeholder='Contraseña'\r\n                        required\r\n                    />\r\n                    <Link to=\"/customer-pass-lost\">\r\n                        <span>Olvidé mi contraseña</span>\r\n                    </Link>\r\n                    <input type=\"submit\" value=\"INICIAR SESIÓN\" />\r\n                    <div style={{backgroundColor: 'gainsboro'}}>\r\n                        <code>Cliente prueba:<br/>\r\n                        cliente@damaxboutique.com<br/>\r\n                        contraseña: 1</code>\r\n                    </div>\r\n                </form>\r\n                <small>No tienes una cuenta? <Link to=\"/customer-register\">Crear una cuenta</Link></small>\r\n                {\r\n                    msg !== '' &&\r\n                    <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","// React\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { Context } from '../../context/context';\r\n\r\nexport default function CategoryForm() {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context);\r\n\r\n    // states\r\n    const [category, setCategory] = useState({\r\n        id: -1, // for verify if email exists\r\n        categoryName: '',\r\n        isAvailable: true\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // read param\r\n    const params = useParams(); // important!\r\n    const id = params['id'];\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect UserForm');\r\n\r\n        async function loadCategory(id) {\r\n            const json = await onFetch(\r\n                '/category.php?fn=getCategory&id=' + id,\r\n                'GET',\r\n                userSession['token']\r\n            );\r\n            //console.log(json);\r\n            if (json !== null) setCategory(json['category']);\r\n        }\r\n\r\n        if (userSession) {\r\n            if (id) loadCategory(id);\r\n        }\r\n        else navigate('/not-found')\r\n\r\n    }, [id, onFetch, navigate, userSession, msg]);\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target);\r\n        const { name, value } = e.target; // extract name of Element and value\r\n        //console.log('category: ', category);\r\n        setCategory({\r\n            ...category, // copy object (same values)\r\n            [name]: name !== 'isAvailable' ? value : e.target.checked // only change Element named 'name'\r\n        });\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('category before save: ', category);\r\n\r\n        // verify if categoryName exists\r\n        let json = await onFetch(\r\n            `/category.php?fn=isExistsCategory&categoryName=${category['categoryName']}&id=${category['id']}`, \r\n            'GET',\r\n            userSession['token']\r\n            );\r\n        //console.log(res);                \r\n\r\n        if (!json['isExistsCategory']) {\r\n            //console.log('id before update-insert: ', category['id']);\r\n\r\n            // update\r\n            if (category['id'] > -1) {\r\n                //console.log('before update: ', category);\r\n\r\n                json = await onFetch(\r\n                    '/category.php?fn=updateCategory',\r\n                    'PUT',\r\n                    userSession['token'],\r\n                    category\r\n                )\r\n                //console.log(json);\r\n\r\n            }\r\n            // insert\r\n            else {\r\n                json = await onFetch(\r\n                    '/category.php?fn=insertCategory',\r\n                    'POST',\r\n                    userSession['token'],\r\n                    category\r\n                )\r\n                //console.log('json: ', json);                   \r\n            }\r\n            navigate('/categories');\r\n        }\r\n        else setMsg('La categoria ya existe');\r\n\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"Card\">\r\n                <h4>{id ? 'Modificando categoría' : 'Agregando categoría'}</h4>\r\n                <form className='Form-user' onSubmit={formSubmit}>\r\n                    <label htmlFor=\"categoryName\">Descripción</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"categoryName\"\r\n                        name=\"categoryName\"\r\n                        value={category.categoryName}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"isAvailable\">Disponible</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isAvailable'\r\n                        name=\"isAvailable\"\r\n                        checked={category.isAvailable}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-user-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/categories')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n// icons\r\nimport { AiFillDelete } from 'react-icons/ai'\r\n// css\r\nimport './ArticlesList.css';\r\n\r\n\r\nconst Articles = () => {\r\n    //console.log('>>> Articles load...');\r\n\r\n    // context\r\n    const { onFetch, ENDPOINT, userSession } = useContext(Context);\r\n\r\n    // states\r\n    const [articles, setArticles] = useState([]);\r\n    const [articleSelected, setArticleSelected] = useState(null);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [txtSearch, setTxtSearch] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // protected of re-render with useCallback()\r\n    const articlesLoad = useCallback(async () => {\r\n        // load categories\r\n        const json = await onFetch(\r\n            '/article.php?fn=getAllArticles&txtSearch=' + txtSearch,\r\n            'GET',\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setArticles(json['articles']);\r\n\r\n    }, [onFetch, txtSearch, userSession]);\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Articles');\r\n\r\n        if (userSession) articlesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => { }\r\n\r\n    }, [articlesLoad, navigate, userSession, stateModalDelete]);\r\n\r\n    const searchChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setTxtSearch(e.target.value);\r\n        //console.log(txtSearch);\r\n    }\r\n\r\n    const searchKeyPress = (e) => {\r\n        //console.log(e.key);\r\n\r\n        if (e.key === 'Enter')\r\n            articlesLoad();\r\n    }\r\n\r\n    const btnSeeClick = async (id) => {\r\n        //console.log(id);\r\n        // load article\r\n\r\n        const json = await onFetch(\r\n            `/article.php?fn=getArticle&id=${id}&endpoint=${ENDPOINT}`,\r\n            'GET',\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setArticleSelected(json['article']);\r\n    }\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n\r\n        const json = await onFetch(\r\n            '/article.php?fn=deleteArticle',\r\n            'DELETE',\r\n            userSession['token'],\r\n            {\r\n                id: stateModalDelete['id']\r\n            }\r\n        )\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null) {\r\n            setArticleSelected(null);\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n        }\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const rowClick = (e) => {\r\n        //console.log(e.target.parentElement.id);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            //console.log(rowSelected);\r\n            if (row) row.classList.remove('active');\r\n            const id = e.target.parentElement.id;\r\n            row = document.getElementById(id);\r\n            row.classList.add('active');\r\n            btnSeeClick(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"ArticlesList-wrapper-table\">\r\n                <table className=\"Table ArticlesList-table\">\r\n                    <caption><h2>Artículos</h2></caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>\r\n                                <input\r\n                                    type=\"search\"\r\n                                    onChange={searchChange}\r\n                                    onKeyPress={searchKeyPress}\r\n                                    placeholder='Buscar...'\r\n                                    autoFocus\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                <Link to='/article-insert'>\r\n                                    <BtnAccept text='Nuevo' />\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Titulo</th>\r\n                            <th>Categoría</th>\r\n                            <th>Precio</th>\r\n                            <th>Disponible</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            articles.map(article =>\r\n                                <tr key={article.id} id={article.id} onClick={rowClick}>\r\n                                    <td>{article.articleName}</td>\r\n                                    <td>{article.categoryName}</td>\r\n                                    <td className='Table-cell-end'>${article.price}</td>\r\n                                    <td className=\"Table-cell-center\">{article.isAvailable && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                    <td>\r\n                                        { // only if is admin\r\n                                            userSession.isAdmin &&\r\n                                            <AiFillDelete\r\n                                                className='CategoriesList-icon-delete'\r\n                                                onClick={() => btnDeleteClick(article.id)}\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {<td className='Table-cell-center' colSpan={4}>{articles.length} artículos</td>}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <div className='Card'>\r\n                <div className='Card-article-border' >\r\n\r\n                    { // show only if userSelected not is null\r\n                        articleSelected != null &&\r\n                        <div className='Card-article-container' >\r\n                            <div className='Card-article-data'>\r\n                                <img src={articleSelected['imgPath']} alt=\"\" width=\"100\" />\r\n                                <h5>Categoría</h5>\r\n                                <pre>{articleSelected['categoryName']}</pre>\r\n                                <h5>Titulo</h5>\r\n                                <pre>{articleSelected['articleName']}</pre>\r\n                                <h5>Descripción</h5>\r\n                                <pre>{articleSelected['description']}</pre>\r\n                                <h5>Precio</h5>\r\n                                <pre>$ {articleSelected['price']}</pre>\r\n                                <h5>Existencia</h5>\r\n                                <pre>{articleSelected['stock']}</pre>\r\n                            </div>\r\n                            { // only if is admin\r\n                                userSession.isAdmin &&\r\n                                <BtnPrimary\r\n                                    text='Modificar'\r\n                                    style={{ display: 'block' }}\r\n                                    onClick={() => navigate(`/article-update/${articleSelected['id']}`)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar el artículo?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\nimport FormMessage from '../form/FormMessage';\r\n\r\nconst ArticleForm = () => {\r\n    // context\r\n    const { onFetch, userSession, ENDPOINT } = useContext(Context)\r\n\r\n    // param\r\n    const params = useParams();\r\n    const id = params['id'] ?? -1;\r\n\r\n    // states\r\n    const [categories, setCategories] = useState([]);\r\n    const [article, setArticle] = useState({\r\n        id: params['id'] ?? -1,\r\n        nameImg: ENDPOINT + '/img/noImage.png',\r\n        imgBase64: '', // base64, if not image = '' !important \r\n        idCategory: -1,\r\n        articleName: '',\r\n        description: '',\r\n        price: '',\r\n        stock: '',\r\n        isAvailable: true\r\n    });\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n        //console.log(name, value);\r\n        //console.log(article);\r\n        setArticle({\r\n            ...article, // same data\r\n            [name]: name !== 'isAvailable' ? value : e.target.checked // only change 1 field\r\n        })\r\n    }\r\n\r\n    const fileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (FileReader && file) {\r\n            const fr = new FileReader();\r\n            fr.onload = () => {\r\n                document.getElementById('imgArticle').src = fr.result; // fr.result = base64\r\n                //console.log(fr.result);\r\n                setArticle({\r\n                    ...article,\r\n                    imgBase64: fr.result\r\n                });\r\n            }\r\n            fr.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('article before save: ', article);\r\n\r\n        let json = await onFetch(\r\n            `/article.php?fn=isExistsArticle&articleName=${article['articleName'].trim()}&id=${article['id']}`, \r\n            'GET',\r\n            userSession['token']\r\n            );\r\n        //console.log(json);\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsArticle']) {\r\n\r\n                // insert article\r\n                if (article.id === -1) \r\n                    json = await onFetch(\r\n                        '/article.php?fn=insertArticle', \r\n                        'POST', \r\n                        userSession['token'], \r\n                        article\r\n                        );\r\n                \r\n                // update article\r\n                else\r\n                    json = await onFetch(\r\n                        '/article.php?fn=updateArticle',\r\n                        'PUT', \r\n                        userSession['token'],\r\n                        article, \r\n                        );\r\n\r\n                //console.log(json);\r\n\r\n                navigate('/articles');                \r\n            }\r\n            // show message\r\n            setMsg('El artículo ya existe');\r\n        }        \r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    const categoriesLoad = useCallback(async () => {\r\n        // if id > -1 load article\r\n\r\n        let json = await onFetch(\r\n            '/category.php?fn=getAllCategories', \r\n            'GET',\r\n            userSession['token']\r\n            );\r\n        //console.log(json);\r\n\r\n        //json['isAuth'] = false; // test if is not authorized\r\n        if (json !== null) {\r\n            json = json['categories'];\r\n            //console.log(json);\r\n            setCategories(json);\r\n\r\n            //------- load article -------//\r\n            if (article.id > -1) {\r\n                json = await onFetch(\r\n                    `/article.php?fn=getArticle&id=${article.id}&endpoint=${ENDPOINT}`, \r\n                    'GET',\r\n                    userSession['token']\r\n                    );\r\n                //console.log(json);\r\n\r\n                if (json !== null) {\r\n                    json = json['article'];\r\n                    json['imgBase64'] = '';\r\n                    //console.log(json);\r\n                    setArticle(json);\r\n                }               \r\n            }            \r\n        }        \r\n    }, [onFetch, userSession, article.id, ENDPOINT])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> useEffect ArticleForm');\r\n\r\n        if (userSession) categoriesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {}\r\n    }, [userSession, categoriesLoad, navigate]);\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            {/* {console.log(article)} */}\r\n            <div className=\"Card\">\r\n                <h4>{id === -1 ? 'Agregando' : 'Modificando'} artículo</h4>\r\n                <div className='Card-img-container'>\r\n                    <img src={article.nameImg} id='imgArticle' alt='Artículo' style={{ width: '100%', height: '100%' }} />\r\n                </div>\r\n                <form className='Form' onSubmit={formSubmit}>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        id=\"img\"\r\n                        accept='image/*'\r\n                        onChange={fileChange}\r\n                    />\r\n                    <label htmlFor=\"idCategory\">Categoría</label>\r\n                    <select\r\n                        name=\"idCategory\"\r\n                        id=\"idCategory\"\r\n                        value={article.idCategory}\r\n                        onChange={inputChange}\r\n                        required\r\n                    >\r\n                        { // load categories on select or combobox\r\n                            categories.map(category =>\r\n                                <option\r\n                                    key={category.id}\r\n                                    value={category.id}\r\n                                // selected={category == article.idCategory}\r\n                                >{category.categoryName}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    <label htmlFor=\"articleName\">Titulo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"articleName\"\r\n                        name=\"articleName\"\r\n                        value={article.articleName}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"description\">Descripción</label>\r\n                    <textarea\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        value={article.description}\r\n                        onChange={inputChange}\r\n                    ></textarea>\r\n                    <div className='Form-number-pair'>\r\n                        <label htmlFor=\"price\">Precio</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            id=\"price\"\r\n                            value={article.price}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"stock\" style={{ marginLeft: '20px' }}>Existencia</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"stock\"\r\n                            id=\"stock\"\r\n                            value={article.stock}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <label htmlFor=\"isAvailable\">Disponible</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isAvailable'\r\n                        name=\"isAvailable\"\r\n                        checked={article.isAvailable}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-user-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/articles')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleForm","import { useContext, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// context\r\nimport { Context } from '../../context/context'\r\n\r\n// css\r\nimport './Products.css';\r\n\r\nexport default function Products() {\r\n    // context\r\n    const { onFetch, ENDPOINT } = useContext(Context)\r\n\r\n    // params\r\n    const params = useParams(); // important!\r\n    //console.log(params); // {search: 'categoria'|'texto', txtSearch: <string>}\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // states\r\n    const [articles, setArticles] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        //console.log('>>> effect Productos')\r\n\r\n        async function articlesLoad() {\r\n            let data\r\n            if (params['search'] === 'category')  \r\n                data = await onFetch(`/index.php?fn=getAllArticlesFromCategoryName&categoryName=${params['txtSearch']}&endpoint=${ENDPOINT}`)\r\n            else \r\n                data = await onFetch(`/index.php?fn=getAllArticlesFromTxt&txtSearch=${params['txtSearch']}&endpoint=${ENDPOINT}`)\r\n            //console.log(data);\r\n            \r\n            if (data !== null) setArticles(data['articles']);                    \r\n        }  \r\n\r\n        articlesLoad();\r\n\r\n        return () => {\r\n            //console.log('useEffect Productos BYE')\r\n        }\r\n\r\n    }, [params, onFetch, ENDPOINT]);\r\n\r\n    const imgClick = (id) => {\r\n        //console.log('click to id: ' + id);\r\n        navigate('/product-detail/' + id);\r\n    } \r\n\r\n    return (\r\n        <>            \r\n            <p className='ProductsTitle'>{params['txtSearch']}</p>\r\n            <div className='Grid'>\r\n                {\r\n                    articles.map(article =>\r\n                        article['isAvailable'] &&\r\n                        <div className='Product-card' key={article.id}>\r\n                            {\r\n                                // if without else\r\n                                article.stock === 0 && <span>AGOTADO</span>\r\n                            }\r\n                            <img src={article.nameImg} alt={article.articleName} onClick={() => imgClick(article.id)} width=\"220\" height=\"250\" />\r\n                            <p>{article.articleName}</p>\r\n                            <p className='Product-price'>$ {article.price}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n// context\r\nimport { Context } from '../../context/context';\r\n// icon\r\nimport { AiOutlineArrowLeft, AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './ProductDetail.css';\r\n\r\nconst ProductDetail = () => {\r\n  // context \r\n  const context = useContext(Context);\r\n  \r\n  // params\r\n  const params = useParams();\r\n  // navigate\r\n  const navigate = useNavigate();\r\n  // states\r\n  const [article, setArticle] = useState(null);\r\n  const [qty, setQty] = useState(1);\r\n  const [formMessage, setFormMessage] = useState({\r\n    msg: '',\r\n    isSuccess: false\r\n  }) \r\n\r\n  useEffect(() => {\r\n    //console.log('>>> useEffect ProductDetail');\r\n\r\n    async function getArticle() {\r\n      const data = await context.onFetch(`/index.php?fn=getArticle&id=${params['id']}&endpoint=${context.ENDPOINT}`);\r\n      if (data !== null) setArticle(data['article'])\r\n    }\r\n\r\n    if (article === null) getArticle()\r\n\r\n    window.localStorage.setItem('cart', JSON.stringify(context.cart))\r\n\r\n    return () => { }\r\n  }, [article, params, context, context.buttonENDPOINT]);\r\n\r\n  const backClick = () => {\r\n    // page previous: products|cart\r\n    navigate(-1)\r\n  }\r\n\r\n  const addClick = async () => {\r\n    onCloseFormMessage()\r\n\r\n    // verify if exists 1 more\r\n    let res = await context.onFetch(\r\n      `/customer_authorized.php?fn=getStockArticle&id=${article['id']}`)\r\n    if (res !== null) {\r\n      res = res['stock']\r\n      if (res >= qty + 1) setQty(qty + 1)\r\n      else\r\n        setFormMessage({\r\n          msg: `Solo restan ${res}`,\r\n          isSuccess: false\r\n        })\r\n    }\r\n  }\r\n\r\n  const substractClick = () => {\r\n    onCloseFormMessage()\r\n    if (qty >= 2) setQty(qty - 1);\r\n  }\r\n\r\n  const btnAddToCartClick = async () => {\r\n    onCloseFormMessage()\r\n\r\n    // verify if exists stock\r\n    let res = await context.onFetch(`/customer_authorized.php?fn=getStockArticle&id=${article['id']}`)\r\n    if (res !== null) {\r\n      res = res['stock']\r\n      // update stock of article\r\n      article['stock'] = res\r\n\r\n      if (res >= qty) {\r\n        // take index of articles with id equals\r\n        const i = context.cart.findIndex(articleCart => articleCart.id === article.id)\r\n               \r\n        // add new article to cart\r\n        if (i === -1) {\r\n          // new properties\r\n          article['qty'] = qty;\r\n          article['amount'] = qty * article['price']\r\n          \r\n          // clean fields useless\r\n          delete article['categoryName']\r\n          delete article['idCategory']\r\n          delete article['description']\r\n          delete article['isAvailable']\r\n          \r\n          context.setCart([...context.cart, article])\r\n        }\r\n        // only change qty - amount\r\n        else {\r\n          // change qty - amount of article[index]\r\n          const newCart = context.cart.map((article, index) => {\r\n            if (index === i) {\r\n              article['qty'] += qty\r\n              article['amount'] = qty * article['price']\r\n            }\r\n            return article\r\n          })\r\n          context.setCart(newCart)\r\n        }\r\n \r\n        setFormMessage({\r\n          msg: 'El artículo ha sido agregado al carrito',\r\n          isSuccess: true\r\n        })\r\n      }\r\n      else\r\n        setFormMessage({\r\n          msg: `Solo restan ${res}.`,\r\n          isSuccess: false\r\n        })\r\n    }\r\n  }\r\n\r\n  const onCloseFormMessage = () => {\r\n    setFormMessage({\r\n      msg: '',\r\n      isSuccess: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    article &&\r\n    <>\r\n      {/* {console.log('cart render:', context.cart)} */}\r\n      {/* ------------------- BACK BAR --------------------- */}\r\n      <div className='Detail-top'>\r\n        <AiOutlineArrowLeft className='Detail-icon' onClick={backClick} />\r\n      </div>\r\n\r\n      <div className='Detail-wrapper'>\r\n\r\n        {/* ------------------- CARD IMAGE --------------------- */}\r\n        <div className='Card Detail-card-image'>\r\n          <img src={article['nameImg']} alt={article['articleName']} />\r\n        </div>\r\n\r\n        {/* -------------- DATA CARD -------------- */}\r\n        <div className='Card Detail-card-data'>\r\n          <div className='Detail-card-data-text'>\r\n            <h4>DAMAX BOUTIQUE</h4>\r\n            <p className='Detail-title'>{article['articleName']}</p>\r\n            <p className='Detail-price'>$ {article['price']}</p>\r\n\r\n            {/* qty */}\r\n            <div className='Detail-qty'>\r\n              <AiOutlineMinus className='Detail-icon' onClick={substractClick} />\r\n              <span>{qty}</span>\r\n              <AiOutlinePlus className='Detail-icon' onClick={addClick} />\r\n            </div>\r\n\r\n            <div className='Detail-stock'>\r\n              <span>{article['stock'] === 0 ? 'AGOTADO' : article['stock'] <= 12 ? 'SOLO RESTAN: ' + article['stock'] : 'DISPONIBLE'}</span>\r\n            </div>\r\n            <p className='Detail-title'>Descripción</p>\r\n            <pre className='Detail-description'>{article['description']}</pre>\r\n          </div>\r\n          <div className='Detail-card-data-buttons'>\r\n            { // only if not user on session and stock >= qty\r\n              article['stock'] >= qty && !formMessage.isSuccess &&\r\n              <button\r\n                className='Detail-btn-cart'\r\n                onClick={btnAddToCartClick}\r\n              >AGREGAR AL CARRITO</button>\r\n            }\r\n            {\r\n              formMessage.msg !== '' &&\r\n              <FormMessage\r\n                msg={formMessage.msg}\r\n                btnCloseClick={formMessage.isSuccess ? null : onCloseFormMessage}\r\n                isSuccess={formMessage.isSuccess} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductDetail","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle, AiFillDelete } from 'react-icons/ai';\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n// css\r\nimport './CustomersList.css';\r\n\r\n\r\nconst Customers = () => {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context);\r\n\r\n    // states\r\n    const [customers, setCustomers] = useState([]);\r\n    const [customerSelected, setCustomerSelected] = useState(null);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n    const [txtSearch, setTxtSearch] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // protected of re-render with useCallback()\r\n    const customersLoad = useCallback(async () => {\r\n        // load customers\r\n        const json = await onFetch(\r\n            '/customer.php?fn=getAllCustomers&txtSearch=' + txtSearch,\r\n            'GET',\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n        \r\n        if (json !== null) setCustomers(json['customers']);\r\n        \r\n    }, [onFetch, txtSearch, userSession]);\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Customers');\r\n\r\n        if (userSession) customersLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {}\r\n\r\n    }, [customersLoad, navigate, userSession, stateModalDelete]);\r\n\r\n    const searchChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setTxtSearch(e.target.value);\r\n        //console.log(txtSearch);\r\n    }\r\n\r\n    const searchKeyPress = (e) => {\r\n        //console.log(e.key);\r\n\r\n        if (e.key === 'Enter')\r\n            customersLoad();\r\n    }\r\n\r\n    const btnSeeClick = async (id) => {\r\n        //console.log(id);\r\n        // load article\r\n\r\n        const json = await onFetch(\r\n            '/customer.php?fn=getCustomer&id=' + id,\r\n            'GET',\r\n            userSession['token']\r\n        );\r\n        //console.log(json);\r\n\r\n        if (json !== null) setCustomerSelected(json['customer'])            \r\n    }\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n        const json = await onFetch(\r\n            '/customer.php?fn=deleteCustomer',\r\n            'DELETE',\r\n            userSession['token'],\r\n            {\r\n                id: stateModalDelete['id']\r\n            }\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null) {\r\n            setCustomerSelected(null);\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n        }\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    const rowClick = (e) => {\r\n        //console.log(e.target.parentElement.id);\r\n        \r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            //console.log(rowSelected);\r\n            if (row) row.classList.remove('active');\r\n            const id = e.target.parentElement.id;\r\n            row = document.getElementById(id);\r\n            row.classList.add('active');\r\n            btnSeeClick(id)\r\n        }        \r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className = 'CustomersList-wrapper-table'>\r\n            <table className=\"Table CustomersList-table\">\r\n                <caption><h2>Clientes</h2></caption>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}><input type=\"search\" onChange={searchChange} onKeyPress={searchKeyPress} placeholder='Buscar...' autoFocus /></td>\r\n                        <td colSpan={2}>\r\n                            <Link to='/customer-insert'>\r\n                                <BtnAccept text='Nuevo' />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Correo</th>\r\n                        <th>Nombre</th>\r\n                        <th>Correo confirmado</th>\r\n                        <th>Activo</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        customers.map(customer =>\r\n                            <tr key={customer.id} id={customer.id} onClick={rowClick}>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.fullname}</td>\r\n                                <td className=\"Table-cell-center\">{customer.isEmailConfirmed && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td className=\"Table-cell-center\">{customer.isActive && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                <td>\r\n                                    { // only if is admin\r\n                                        userSession.isAdmin &&\r\n                                        // <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(customer.id)} />\r\n                                        <AiFillDelete\r\n                                        className='CustomersList-icon-delete' \r\n                                        onClick={() => btnDeleteClick(customer.id)}\r\n                                        />\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        {<td className='Table-cell-center' colSpan={4}>{customers.length} {customers.length === 1 ? 'cliente' : 'clientes'}</td>}\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            </div>\r\n            \r\n            <div className='Card'>\r\n                <div className='Card-customer-border' >\r\n\r\n                    { // show only if userSelected not is null\r\n                        customerSelected != null &&\r\n                        <div className='Card-customer-container' >\r\n                            <div className='Card-customer-data'>\r\n                                <h5>Correo</h5>\r\n                                <pre>{customerSelected['email']}</pre>\r\n                                <h5>Nombre</h5>\r\n                                <pre>{customerSelected['fullname']}</pre>\r\n                                <h5>Teléfono</h5>\r\n                                <pre>{customerSelected['phone']}</pre>\r\n                                <h5>Calle y número</h5>\r\n                                <pre>{customerSelected['streetAndNumber']}</pre>\r\n                                <h5>Colonia</h5>\r\n                                <pre>{customerSelected['suburb']}</pre>\r\n                                <h5>CP</h5>\r\n                                <pre>{customerSelected['cp']}</pre>\r\n                                <h5>Ciudad</h5>\r\n                                <pre>{customerSelected['town']}</pre>\r\n                            </div>\r\n                            { // only if is admin\r\n                                userSession.isAdmin &&\r\n                                <BtnPrimary\r\n                                    text='Modificar'\r\n                                    style={{ display: 'block' }}\r\n                                    onClick={() => navigate(`/customer-update/${customerSelected['id']}`)}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar al cliente?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Customers","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\n// context\r\nimport { Context } from '../../context/context';\r\n// components\r\nimport BtnPrimary from '../buttons/BtnPrimary';\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './CustomerForm.css';\r\n\r\nconst CustomerForm = () => {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context)\r\n\r\n    // param\r\n    const params = useParams();\r\n    const id = params['id'];\r\n\r\n    // states    \r\n    const [customer, setCustomer] = useState({\r\n        id: params['id'] ?? -1,\r\n        email: '',\r\n        fullname: '',\r\n        phone: '',\r\n        streetAndNumber: '',\r\n        suburb: '',\r\n        cp: '',\r\n        town: '',\r\n        isEmailConfirmed: true,\r\n        isActive: true,\r\n        pass: '',\r\n        confirm: ''\r\n    });\r\n    const [isShowPass, setIsShowPass] = useState(false)\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // navigate\r\n    const navigate = useNavigate();\r\n\r\n    const inputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n\r\n        // if (name !== 'isChangePass') {\r\n        setCustomer({\r\n            ...customer, // same data\r\n            [name]: name !== 'isEmailConfirmed' && name !== 'isActive' ? value : e.target.checked // only change 1 field\r\n        })\r\n        // }\r\n        // else setIsShowPass(e.target.checked)\r\n    }\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //console.log('customer before save: ', customer);\r\n\r\n        let json = await onFetch(\r\n            `/customer.php?fn=isExistsCustomer&email=${customer['email'].trim()}&id=${customer['id']}`,\r\n            'GET',\r\n            userSession['token']\r\n        );\r\n        // console.log(json);\r\n        // return;\r\n\r\n        if (json !== null) {\r\n            if (!json['isExistsCustomer']) {\r\n                // console.log(customer.id);\r\n                // return;\r\n\r\n                // verify if showPass and pass-confirm equals\r\n                let isContinue = false\r\n                if (isShowPass) {\r\n                    if (customer.pass === customer.confirm) isContinue = true\r\n                    else {\r\n                        setCustomer({\r\n                            ...customer,\r\n                            pass: '',\r\n                            confirm: ''\r\n                        });\r\n                        setMsg('Contraseña y confirmación son diferentes')\r\n                    }\r\n                }\r\n                else isContinue = true\r\n\r\n                if (isContinue) {\r\n                    // insert customer\r\n                    if (customer.id === -1) {\r\n                        json = await onFetch(\r\n                            '/customer.php?fn=insertCustomer&isAutoRegister=false',\r\n                            'POST',\r\n                            userSession['token'],\r\n                            customer,\r\n                        )\r\n                    }\r\n\r\n                    // update customer\r\n                    else\r\n                        json = await onFetch(\r\n                            '/customer.php?fn=updateCustomer',\r\n                            'PUT',\r\n                            userSession['token'],\r\n                            customer\r\n                        )\r\n\r\n                    // console.log(json);\r\n                    // return;\r\n\r\n                    navigate('/customers');\r\n                }\r\n            }\r\n            else setMsg('El cliente ya existe');\r\n        }\r\n    }\r\n\r\n    const onCloseFormMessage = () => {\r\n        setMsg('');\r\n    }\r\n\r\n    const customerLoad = useCallback(async () => {\r\n        if (params['id']) {\r\n            let res = await onFetch(\r\n                '/customer.php?fn=getCustomer&id=' + params['id'],\r\n                'GET',\r\n                userSession['token']\r\n            );\r\n            //console.log(json);\r\n\r\n            if (res !== null) {\r\n                res = res['customer'];\r\n\r\n                // add pass empty\r\n                res['pass'] = ''\r\n                res['confirm'] = ''\r\n                //console.log(json);\r\n                setCustomer(res);\r\n            }\r\n        }\r\n    }, [onFetch, userSession, params])\r\n\r\n    useEffect(() => {\r\n        //console.log('>>> useEffect CustomerForm');\r\n\r\n        if (userSession) {\r\n            if (id) customerLoad()\r\n            else setIsShowPass(true) // pass obligatory\r\n        }\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [customerLoad, id, userSession, navigate]);\r\n\r\n    const toggleShowPass = (e) => {\r\n        //console.log(e.target.checked);\r\n        setIsShowPass(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"Card\">\r\n                <h4>{id === undefined ? 'Agregando' : 'Modificando'} cliente</h4>\r\n                <form className='Form' onSubmit={formSubmit}>\r\n                    <label htmlFor=\"email\">Correo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={inputChange}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"fullname\">Nombre</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"fullname\"\r\n                        name=\"fullname\"\r\n                        value={customer.fullname}\r\n                        onChange={inputChange}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"phone\">Teléfono</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        value={customer.phone}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <label htmlFor=\"streetAndNumber\">Calle y número</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"streetAndNumber\"\r\n                        name=\"streetAndNumber\"\r\n                        value={customer.streetAndNumber}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <div className='Form-input-pair-inline'>\r\n                        <div>\r\n                            <label htmlFor=\"suburb\">Colonia</label>\r\n                            <input\r\n                                type='text'\r\n                                id=\"suburb\"\r\n                                name=\"suburb\"\r\n                                value={customer.suburb}\r\n                                onChange={inputChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"cp\">C.P.</label>\r\n                            <input\r\n                                type='text'\r\n                                id=\"cp\"\r\n                                name=\"cp\"\r\n                                value={customer.cp}\r\n                                onChange={inputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"town\">Municipio</label>\r\n                    <input\r\n                        type='text'\r\n                        id=\"town\"\r\n                        name=\"town\"\r\n                        value={customer.town}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <label htmlFor=\"isEmailConfirmed\">Correo confirmado</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isEmailConfirmed'\r\n                        name=\"isEmailConfirmed\"\r\n                        checked={customer.isEmailConfirmed}\r\n                        onChange={inputChange}\r\n                    />\r\n                    <label htmlFor=\"isActive\" style={{ marginLeft: '30px' }}>Activo</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id='isActive'\r\n                        name=\"isActive\"\r\n                        checked={customer.isActive}\r\n                        onChange={inputChange}\r\n                    />\r\n\r\n                    {  // show only if editing\r\n                        id &&\r\n                        <div className='Form-customer-check-pass'>\r\n                            <label htmlFor=\"password\">Cambiar contraseña</label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"isShowPass\"\r\n                                onChange={toggleShowPass}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    { // show only if above checkbox is checked\r\n                        isShowPass &&\r\n                        <div className='Form-customer-pair-pass'>\r\n                            <div>\r\n                                <label htmlFor=\"password\">Contraseña</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id='pass'\r\n                                    name=\"pass\"\r\n                                    value={customer.pass}\r\n                                    onChange={inputChange}\r\n                                    required\r\n                                //required={id || isShowPass /* with id or user-editing with checked-showPass*/}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"confirm\">Confirmar</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id='confirm'\r\n                                    name=\"confirm\"\r\n                                    value={customer.confirm}\r\n                                    onChange={inputChange}\r\n                                    required\r\n                                //required={id || isShowPass /* with id or user-editing with checked-showPass */}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='Form-customer-actions'>\r\n                        <BtnPrimary text='Guardar' type='submit' />\r\n                        <BtnSecundary text='Cancelar' onClick={() => navigate('/customers')} />\r\n                    </div>\r\n\r\n                    { // show only if msg !== ''\r\n                        msg !== '' && <FormMessage msg={msg} btnCloseClick={onCloseFormMessage} />\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerForm","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\n// context\r\nimport { Context } from '../../context/context';\r\n// icon\r\nimport { AiFillDelete, AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';\r\n// components\r\nimport FormMessage from '../form/FormMessage';\r\n// css\r\nimport './Cart.css';\r\n\r\nconst Cart = () => {\r\n  // context\r\n  const {\r\n    onFetch,\r\n    cart,\r\n    setCart,\r\n    totalCart,\r\n    setTotalCart,\r\n    customerSession,\r\n    setIsReturnToCart\r\n  } = useContext(Context);\r\n\r\n  // useNavigate\r\n  const navigate = useNavigate()\r\n\r\n  // states\r\n  const [messageTable, setMessageTable] = useState('')\r\n  const [messageSummary, setMessageSummary] = useState({\r\n    msg: '',\r\n    isSuccess: false\r\n  })\r\n  // params after of ?\r\n  const [params] = useSearchParams()\r\n\r\n  const insertOrderFromCart = useCallback(async (tokenPay, tokenPayer) => {\r\n    if (cart.length > 0) {\r\n      // create new order on backend\r\n      const body = {\r\n        items: cart.length,\r\n        total: totalCart,\r\n        tokenPay: tokenPay,\r\n        tokenPayer: tokenPayer,\r\n        cart: cart\r\n      }\r\n      const res = await onFetch(\r\n        `/customer_authorized.php?fn=insertOrderFromCart`,\r\n        'POST',\r\n        customerSession['token'],\r\n        body\r\n      )\r\n      //console.log('res:', res)\r\n      if (res !== null) {\r\n        // clean cart\r\n        setCart([]) // to change, useEffect below renew localStorage\r\n        setMessageSummary({\r\n          msg: `El pedido ha sido enviado con el folio: ${res['idOrder']}. GRACIAS POR SU COMPRA.`,\r\n          isSuccess: true\r\n        })\r\n      }\r\n    }\r\n  }, [cart, customerSession, onFetch, totalCart, setCart])\r\n\r\n  useEffect(() => {\r\n    //console.log('Effect Cart')\r\n\r\n    // is payed\r\n    if (params.has('token') && params.has('PayerID')) insertOrderFromCart(params.get('token'), params.get('PayerID'))\r\n\r\n    // save cart on storage\r\n    window.localStorage.setItem('cart', JSON.stringify(cart))\r\n\r\n    // update total\r\n    const newTotal = cart.reduce((total, article) =>\r\n      total += article['qty'] * article['price'], 0) // this zero its initial\r\n    setTotalCart(newTotal)\r\n\r\n    return () => { }\r\n  }, [cart, params, setTotalCart, insertOrderFromCart]);\r\n\r\n  const substractClick = (id) => {\r\n    closeMessageTableClick()\r\n\r\n    // find index of article in cart\r\n    const i = cart.findIndex(article => article.id === id)\r\n    //console.log('i: ', i)\r\n\r\n    // if exists\r\n    if (i > -1) {\r\n      // if current qty >= 2\r\n      if (cart[i].qty >= 2) {\r\n        const updateCart = cart.map(articleCart =>\r\n          articleCart === cart[i] // same article?\r\n            ? {\r\n              ...articleCart,\r\n              qty: articleCart['qty'] - 1,\r\n              amount: (articleCart['qty'] - 1) * articleCart['price']\r\n            } // copy article, only change qty\r\n            : articleCart // if not exists, return same object\r\n        )\r\n        setCart(updateCart)\r\n      }\r\n    }\r\n  }\r\n\r\n  const addClick = async (id) => {\r\n    // hide message table\r\n    closeMessageTableClick()\r\n\r\n    // find index of article in cart\r\n    const i = cart.findIndex(article => article.id === id)\r\n    //console.log('i: ', i)\r\n\r\n    if (i > -1) {\r\n      // verify stock\r\n      let res = await onFetch(\r\n        `/customer_authorized.php?fn=getStockArticle&id=${id}`)\r\n      if (res !== null) {\r\n        res = res['stock']\r\n        if (res >= cart[i].qty + 1) {\r\n          const updateCart = cart.map(articleCart =>\r\n            articleCart === cart[i] // same article?\r\n              ? {\r\n                ...articleCart,\r\n                qty: articleCart['qty'] + 1,\r\n                amount: (articleCart['qty'] + 1) * articleCart['price']\r\n              } // copy article, only change qty          \r\n              : articleCart // same object\r\n          )\r\n          setCart(updateCart)\r\n        }\r\n        else\r\n          setMessageTable(`${cart[i]['articleName']}: solo restan ${res}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const deleteClick = (id) => {\r\n    //console.log('deleteClick: ' + id);\r\n    setCart(cart.filter(articleCart => articleCart.id !== id));\r\n  }\r\n\r\n  //---------------- SUMMARY -----------------//\r\n  function cleanCartClick() {\r\n    setCart([])\r\n    setTotalCart(0)\r\n  }\r\n\r\n  function btnStartSessionClick() {\r\n    setIsReturnToCart(true)\r\n    navigate('/input')\r\n  }\r\n\r\n  /*\r\n  async function btnOrderClick() {\r\n    // verify if complete qty on database\r\n    let isContinue = true\r\n    cart.forEach(async (articleCart, i) => {\r\n      //console.log(articleCart, i)\r\n      let res = await onFetch(`/customer_authorized.php?fn=isStockComplete&id=${articleCart.id}&qty=${articleCart.qty}`, customerSession.token)\r\n      //console.log(res); // {isAuth: true|false, isStockComplete: true|false}\r\n      if (res !== null) {\r\n        if (!res['isStockComplete']) {\r\n          isContinue = false\r\n          articleWithoutStock = articleCart.articleName\r\n        }\r\n\r\n        // last item\r\n        if (i === cart.length - 1) {\r\n          if (isContinue) {\r\n            setMsg('')\r\n            //console.log('save order!!')\r\n\r\n            // insert order from cart\r\n            res = await onFetch(\r\n              `/customer_authorized.php?fn=insertOrderFromCart&items=${cart.length}&total=${totalCart}`,\r\n              'POST',\r\n              customerSession.token,\r\n              cart,\r\n            )\r\n            //console.log(res) // {isAuth: true|false, idOrder: <int>}\r\n\r\n            setIdOrder(res['idOrder']);\r\n\r\n            // clear cart\r\n            setCart([]);\r\n          }\r\n          else {\r\n            setMsg(`Existencia insuficiente:\\n${articleWithoutStock}`)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  */\r\n\r\n  async function getIsStockComplete() {\r\n    closeMessageSummaryClick()\r\n\r\n    // get stock articles\r\n    const newCart = await Promise.all(cart.map(async (article) => {\r\n      let res = await onFetch(\r\n        `/customer_authorized.php?fn=getStockArticle&id=${article['id']}`,\r\n        'GET',\r\n        customerSession['token']\r\n      )\r\n      //console.log('res:', res)\r\n      if (res !== null) {\r\n        article['stock'] = res['stock']\r\n        return article\r\n      }\r\n    }))\r\n    //console.log('newCart:', newCart)\r\n\r\n    // verify if stock < qty\r\n    let articleNotStock = newCart.find(article => article['stock'] < article['qty'])\r\n    //console.log(articleNotStock);\r\n\r\n    if (articleNotStock !== undefined) {\r\n      setMessageSummary({\r\n        msg: `${articleNotStock['articleName']}: solo restan ${articleNotStock['stock']}`,\r\n        isSuccess: false\r\n      })\r\n    }\r\n\r\n    return articleNotStock === undefined\r\n  }\r\n\r\n  async function btnPayClick() {\r\n    // verify exists\r\n    if (await getIsStockComplete()) navigate('/paypal')\r\n  }\r\n\r\n  function closeMessageTableClick() {\r\n    setMessageTable('')\r\n  }\r\n\r\n  function closeMessageSummaryClick() {\r\n    setMessageSummary({\r\n      msg: '',\r\n      isSuccess: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='Cart-title'>Carrito</div>\r\n\r\n      <div className='Wrapper-flex'>\r\n        <div className='Cart-table-wrapper'>\r\n          <table className='Cart-table'>\r\n            <thead>\r\n              <tr className='Cart-row'>\r\n                <th className='Cart-col-product'>Producto</th>\r\n                <th className='Cart-col-qty'>Cantidad</th>\r\n                <th className='Cart-col-price'>Precio</th>\r\n                <th className='Cart-col-amount'>Importe</th>\r\n                <th className='Cart-col-icon'></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                cart.map((articleCart, i) =>\r\n                  <tr className='Cart-row no-title' key={i}>\r\n                    <td className='Cart-col-product'>\r\n                      <div className='Cart-container-img'>\r\n                        <img src={articleCart.imgPath} alt={articleCart.articleName} />\r\n                      </div>\r\n                      <Link to={'/product-detail/' + articleCart.id} className='Cart-description'>\r\n                        {articleCart.articleName}\r\n                      </Link>\r\n                    </td>\r\n                    <td className='Cart-col-qty'>\r\n                      <div className='Cart-qty'>\r\n                        <AiOutlineMinus className='Cart-icon' onClick={() => substractClick(cart[i].id)} />\r\n                        <span>{articleCart.qty}</span>\r\n                        <AiOutlinePlus className='Cart-icon' onClick={() => addClick(cart[i].id)} />\r\n                      </div>\r\n                    </td>\r\n                    <td className='Cart-col-price'>${new Intl.NumberFormat('es-MX').format(articleCart.price)}</td>\r\n                    <td className='Cart-col-amount'>\r\n                      ${new Intl.NumberFormat('es-MX').format(articleCart.qty * articleCart.price)}\r\n                    </td>\r\n                    <td className='Cart-col-icon'>\r\n                      <AiFillDelete className='Cart-icon Cart-icon-delete' onClick={() => deleteClick(cart[i].id)} />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td>\r\n                  {\r\n                    messageTable.length > 0 &&\r\n                    <FormMessage\r\n                      msg={messageTable}\r\n                      btnCloseClick={closeMessageTableClick}\r\n                    />\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n\r\n        {/* ---------------- SUMMARY CARD ------------------- */}\r\n        <div className='Cart-summary'>\r\n          <div className='Card'>\r\n            <h3>RESUMEN</h3>\r\n            <br />\r\n            {\r\n              !messageSummary.isSuccess &&\r\n              <>\r\n                <code>{cart.length} {cart === 1 ? 'artículo' : 'artículos'}</code>\r\n                <h4>Total ${new Intl.NumberFormat('es-MX', { minimumFractionDigits: 2 }).format(totalCart)}</h4>\r\n                {\r\n                  cart.length > 0 &&\r\n                  <>\r\n                    {customerSession\r\n                      ? <button className='Cart-btn-order' onClick={btnPayClick}>PAGAR<br />cliente prueba: customer@damaxboutique.com<br />contraseña prueba: wo=9[R%z)</button>\r\n                      // ? <button className='Cart-btn-order' onClick={btnOrderClick}>ORDENAR</button>\r\n                      : <button className='Cart-btn-order' onClick={btnStartSessionClick}>INICIAR SESIÓN PARA ORDENAR</button>\r\n                    }\r\n                    <br />\r\n                    <br />\r\n                    <p className='Cart-clean-cart' onClick={cleanCartClick}>Limpiar carrito</p>\r\n                  </>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              messageSummary.msg.length > 0 &&\r\n              <FormMessage\r\n                msg={messageSummary.msg}\r\n                btnCloseClick={closeMessageSummaryClick}\r\n                isSuccess={messageSummary.isSuccess}\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='Footer'>\r\n            <div className='Footer-wrapper'>\r\n                <div className='Footer-left'>\r\n\r\n                </div>\r\n                <div className='Footer-right'>\r\n\r\n                </div>\r\n            </div>\r\n            <Link to='/admin' className='Link'>\r\n                <code>&copy;DAMAX BOUTIQUE.<br/>Todos los derechos reservados. 2022-{new Date().getFullYear()}</code>\r\n            </Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport { useNavigate } from 'react-router';\r\n\r\n// context\r\nimport { Context } from '../../context/context';\r\n\r\n// css\r\nimport './CustomerOrdersList.css'\r\n\r\nconst CustomerOrdersList = () => {\r\n    // context\r\n    const { onFetch, customerSession } = useContext(Context)\r\n\r\n    // states\r\n    const [orders, setOrders] = useState([])\r\n    const [orderSelected, setOrderSelected] = useState(null)\r\n    const [itemsOrder, setItemsOrder] = useState([])\r\n    const [dates, setDates] = useState({\r\n        firstDate: new Date(Date.now() - 1000 * 60 * 60 * 24 * 29).toLocaleDateString('en-CA'), // yyyy-MM-dd minus 30days\r\n        lastDate: new Date().toLocaleDateString('en-CA') // yyyy-MM-dd today\r\n    })\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const loadItemsOrder = useCallback(async (idOrder) => {\r\n        let res = await onFetch(\r\n            `/customer_authorized.php?fn=getItemsOrder&idOrder=${idOrder}`,\r\n            'GET',\r\n            customerSession['token'],\r\n            )\r\n        //console.log(res)\r\n\r\n        if (res !== null) setItemsOrder(res['itemsOrder'])\r\n\r\n    }, [onFetch, customerSession])\r\n\r\n    const loadOrders = useCallback(async () => {\r\n        let res = await onFetch(\r\n            `/customer_authorized.php?fn=getAllOrders&idCustomer=${customerSession['id']}&firstDate=${dates.firstDate}&lastDate=${dates.lastDate}`,\r\n            'GET',\r\n            customerSession['token']\r\n        )\r\n        //console.log(res);\r\n        if (res !== null) {\r\n            // update ordersList\r\n            res = res['orders'];\r\n            //console.log(res);\r\n            setOrders(res)\r\n            if (res.length > 0) {\r\n                setOrderSelected(res[0])\r\n                loadItemsOrder(res[0]['id'])\r\n            }\r\n        }\r\n    }, [onFetch, customerSession, loadItemsOrder, dates.firstDate, dates.lastDate])\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect OrderList')\r\n\r\n        if (customerSession) loadOrders()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [customerSession, navigate, loadOrders])\r\n\r\n    function rowClick(e) {\r\n        //console.log(e.target.parentElement.id);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            // clean selection\r\n            let row = document.getElementsByClassName('active')[0];\r\n            if (row) row.classList.remove('active');\r\n\r\n            // get idOrder and select row\r\n            const idOrder = parseInt(e.target.parentElement.id) // text\r\n            const i = orders.findIndex(order => order.id === idOrder) // int == text\r\n            setOrderSelected(orders[i])\r\n            row = document.getElementById(idOrder)\r\n            row.classList.add('active')\r\n            loadItemsOrder(idOrder)\r\n        }\r\n    }\r\n\r\n    function dateChange(e) {\r\n        setDates({\r\n            ...dates,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        customerSession &&\r\n        <>\r\n            <p className='ProductsTitle'>MIS PEDIDOS</p>\r\n            <div className='Wrapper-flex'>\r\n                <div className='OrdersCustomer-wrapper-table'>\r\n                    <table className='OrdersCustomer-table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <td colSpan={2}>\r\n                                    <label htmlFor=\"firstDate\"><code>Desde </code></label>\r\n                                    <input type=\"date\"\r\n                                        name=\"firstDate\"\r\n                                        id=\"firstDate\"\r\n                                        value={dates.firstDate}\r\n                                        onChange={dateChange}\r\n                                        required // mozilla remove clear button\r\n                                    />\r\n                                </td>\r\n                                <td colSpan={2}>\r\n                                    <label htmlFor=\"lastDate\"><code>Hasta </code></label>\r\n                                    <input type=\"date\"\r\n                                        name=\"lastDate\"\r\n                                        id=\"lastDate\"\r\n                                        value={dates.lastDate}\r\n                                        onChange={dateChange}\r\n                                        required // mozilla remove clear button\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className='OrdersCustomer-col-number'>No</th>\r\n                                <th>Fecha</th>\r\n                                <th className='OrdersCustomer-col-number'>Arts</th>\r\n                                <th className='OrdersCustomer-col-number'>Total</th>\r\n                                <th>Referencia pago</th>\r\n                                <th>Estado</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                orders.map((order, i) =>\r\n                                    <tr className={i === 0 ? 'active' : ''} key={order.id} id={order.id} onClick={rowClick}>\r\n                                        <td className='OrdersCustomer-col-number'>{order.id}</td>\r\n                                        <td>{order.created}</td>\r\n                                        <td className='OrdersCustomer-col-number'>{order.items}</td>\r\n                                        <td className='OrdersCustomer-col-number'>${new Intl.NumberFormat('es-MX', { }).format(order.total)}</td>\r\n                                        <td>{order.tokenPay}</td>\r\n                                        <td>\r\n                                            <code className='OrdersCustomer-state'>{order.isDelivered ? `ENTREGADO\\n(${order.dateDelivered})` : 'POR ENTREGAR'}</code>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td colSpan={6} style={{textAlign: 'center'}}>{orders.length} {orders.length !== 1 ? 'pedidos encontrados' : 'pedido encontrado'}</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n                <article className='OrdersCustomer-detail Card'>\r\n                    <table className='OrdersCustomer-table-items'>\r\n                        {\r\n                            orderSelected !== null &&\r\n                            <caption>Orden: <b>{orderSelected.id}</b></caption>\r\n                        }\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '5%' }}>Cant</th>\r\n                                <th style={{ width: '55%' }}>Descripción</th>\r\n                                <th style={{ width: '20%' }}>Precio</th>\r\n                                <th style={{ width: '20%' }}>Importe</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                itemsOrder.map(item =>\r\n                                    <tr key={item.id}>\r\n                                        <td className='OrdersCustomer-col-number'>{item.qty}</td>\r\n                                        <td className='OrdersCustomer-col-text'>{item.articleName}</td>\r\n                                        <td className='OrdersCustomer-col-number'>{item.price}</td>\r\n                                        <td className='OrdersCustomer-col-number'>{item.amount}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                        {\r\n                            orderSelected !== null &&\r\n                            <tfoot className='OrdersCustomer-detail-data'>\r\n                                <tr>\r\n                                    <td colSpan={2}>{orderSelected.items} artículos</td>\r\n                                    <td className='OrdersCustomer-col-number'>Total</td>\r\n                                    <td className='OrdersCustomer-col-number'>${orderSelected.total}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        }\r\n\r\n                    </table>\r\n                </article>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerOrdersList","import React, { useContext, useState } from 'react'\r\n\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\n// context\r\nimport { Context } from '../../context/context'\r\n\r\nconst FormCustomerPass = () => {\r\n  // context\r\n  const { onFetch, customerSession } = useContext(Context)\r\n\r\n  const inputsDefaultValues = {\r\n    current: '',\r\n    pass: '',\r\n    confirm: ''\r\n  }\r\n\r\n  // states\r\n  const [inputs, setInputs] = useState(inputsDefaultValues)\r\n  const [formMessage, setFormMessage] = useState({\r\n    msg: '',\r\n    isSuccess: false\r\n  })\r\n\r\n  function inputChange(e) {\r\n    setInputs({\r\n      ...inputs, // same values\r\n      [e.target.name]: e.target.value // only change property same name\r\n    })\r\n  }\r\n\r\n  async function formSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // verify current pass\r\n    let res = await onFetch(\r\n      '/customer_authorized.php?fn=isSamePass',\r\n      'POST',\r\n      customerSession.token,\r\n      { pass: inputs.current }\r\n    )\r\n\r\n    if (res !== null) {\r\n      if (res['isSamePass']) {\r\n        if (inputs.pass === inputs.confirm) {\r\n          await onFetch(\r\n            '/customer_authorized.php?fn=changePass',\r\n            'POST',\r\n            customerSession.token,\r\n            { pass: inputs.pass }\r\n          )\r\n          setFormMessage({\r\n            msg: 'La contraseña ha sido actualizada',\r\n            isSuccess: true\r\n          })\r\n        }\r\n        else\r\n          setFormMessage({\r\n            msg: 'Nueva contraseña y confirmación\\nson diferentes',\r\n            isSuccess: false\r\n          })\r\n      }\r\n      else\r\n        setFormMessage({\r\n          msg: 'Contraseña actual incorrecta',\r\n          isSuccess: false\r\n        })\r\n      setInputs(inputsDefaultValues)\r\n    }\r\n  }\r\n\r\n  function btnCloseMessageClick() {\r\n    setFormMessage({\r\n      msg: '',\r\n      isSuccess: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='FormCard'>\r\n      {\r\n        !formMessage.isSuccess &&\r\n        <form onSubmit={formSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            name=\"current\"\r\n            value={inputs.current}\r\n            placeholder='Contraseña actual'\r\n            onChange={inputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"pass\"\r\n            value={inputs.pass}\r\n            placeholder='Nueva contraseña'\r\n            onChange={inputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm\"\r\n            value={inputs.confirm}\r\n            placeholder='Confirmar nueva contraseña'\r\n            onChange={inputChange}\r\n            required\r\n          />\r\n          <input type=\"submit\" value=\"Aceptar\" />\r\n        </form>\r\n      }\r\n      {\r\n        formMessage.msg.length !== 0 &&\r\n        <FormMessage\r\n          msg={formMessage.msg}\r\n          btnCloseClick={formMessage.isSuccess ? null : btnCloseMessageClick}\r\n          isSuccess={formMessage.isSuccess}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormCustomerPass","import React, { useContext, useEffect } from 'react'\r\n\r\n// components\r\nimport FormCustomerPass from '../form/FormCustomerPass'\r\n\r\n// context\r\nimport { Context } from '../../context/context'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst CustomerPass = () => {\r\n  const { customerSession } = useContext(Context) \r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (!customerSession) navigate('/not-found')    \r\n    return () => {}\r\n  }, [customerSession, navigate])\r\n  \r\n\r\n  return (\r\n    customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>CAMBIAR CONTRASEÑA</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerPass customerId={customerSession ? customerSession.id : -1} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerPass","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n// context\r\nimport { Context } from '../../context/context'\r\n\r\nconst FormCustomerData = ({ isAutoRegister }) => {\r\n    // context\r\n    const { onFetch, TOKEN_DEFAULT, customerSession } = useContext(Context)\r\n\r\n    const inputsDefaultValues = {\r\n        email: '',\r\n        fullname: '',\r\n        phone: '',\r\n        streetAndNumber: '',\r\n        suburb: '',\r\n        cp: '',\r\n        town: '',\r\n        pass: '',\r\n        confirm: ''\r\n    }\r\n\r\n    // states\r\n    const [inputs, setInputs] = useState(inputsDefaultValues)\r\n    const [formMessage, setFormMessage] = useState({\r\n        msg: '',\r\n        isSuccess: false\r\n    })\r\n\r\n    const loadCustomerData = useCallback(async () => {\r\n        let res = await onFetch(\r\n            `/customer_authorized.php?fn=getCustomer&id=${customerSession['id']}`,\r\n            'GET',\r\n            customerSession['token']\r\n        )\r\n        console.log('res:', res)\r\n        if (res !== null) {\r\n            res = res['customer']\r\n            setInputs({\r\n                email: res['email'],\r\n                fullname: res['fullname'],\r\n                phone: res['phone'],\r\n                streetAndNumber: res['streetAndNumber'],\r\n                suburb: res['suburb'],\r\n                cp: res['cp'],\r\n                town: res['town'],\r\n                pass: '',\r\n                confirm: ''\r\n            })\r\n        }\r\n    }, [onFetch, customerSession])\r\n\r\n    useEffect(() => {\r\n        if (customerSession) loadCustomerData() // use-callback for prevent execute infinite\r\n\r\n        return () => { }\r\n    }, [loadCustomerData, customerSession])\r\n\r\n\r\n    function inputChange(e) {\r\n        setInputs({\r\n            ...inputs, // same values\r\n            [e.target.name]: e.target.value // only change property same name\r\n        })\r\n    }\r\n\r\n    async function formSubmit(e) {\r\n        e.preventDefault()\r\n        let res\r\n        if (isAutoRegister) {\r\n            res = await onFetch(`/index.php?fn=isExistsCustomer&email=${inputs.email}&id=-1`)\r\n            //console.log(res)\r\n            if (res !== null) {\r\n                if (!res['isExistsCustomer']) {\r\n                    // verify pass and confirm\r\n                    if (inputs.pass === inputs.confirm) {\r\n\r\n                        // save new customer\r\n                        res = await onFetch(\r\n                            `/index.php?fn=insertCustomer&isAutoregister=${isAutoRegister}`,\r\n                            'POST',\r\n                            TOKEN_DEFAULT,\r\n                            inputs\r\n                        )\r\n                        //console.log(res)\r\n                        if (res !== null) {\r\n                            setFormMessage({\r\n                                msg: 'El cliente ha sido registrado,\\ningresa a tu correo para confirmarlo.',\r\n                                isSuccess: true\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        setInputs({\r\n                            ...inputs,\r\n                            pass: '',\r\n                            confirm: ''\r\n                        })\r\n\r\n                    }\r\n                }\r\n                else\r\n                    setFormMessage({\r\n                        msg: 'El correo ya se encuentra registrado',\r\n                        isSuccess: false\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            res = await onFetch(\r\n                '/customer_authorized.php?fn=updateCustomer&id=' + customerSession['id'],\r\n                'PUT',\r\n                customerSession['token'],\r\n                inputs\r\n            )\r\n            if (res !== null) {\r\n                setFormMessage({\r\n                    msg: 'Los datos han sido actualizados',\r\n                    isSuccess: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    function btnCloseFormMessageClick() {\r\n        setFormMessage({\r\n            msg: '',\r\n            isSuccess: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        customerSession &&\r\n        <div className='Card'>\r\n            <form className='Form' onSubmit={formSubmit} style={{ display: formMessage.isSuccess ? 'none' : 'block' }}>\r\n                <label htmlFor='email'>Correo</label>\r\n                <input\r\n                    type='email'\r\n                    name='email'\r\n                    id='email'\r\n                    value={inputs.email}\r\n                    onChange={inputChange}\r\n                    readOnly={!isAutoRegister}\r\n                    autoFocus={isAutoRegister}\r\n                    required={true}\r\n                    style={{\r\n                        backgroundColor: isAutoRegister ? 'white' : 'gainsboro'\r\n                    }}\r\n                />\r\n                <label htmlFor='fullname'>Nombre completo</label>\r\n                <input\r\n                    type='text'\r\n                    name='fullname'\r\n                    id='fullname'\r\n                    value={inputs.fullname}\r\n                    onChange={inputChange}\r\n                    autoFocus={!isAutoRegister}\r\n                    required\r\n                />\r\n                <label htmlFor='phone'>Teléfono</label>\r\n                <input\r\n                    type='text'\r\n                    name='phone'\r\n                    id='phone'\r\n                    value={inputs.phone}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <label htmlFor='streetAndNumber'>Calle y número</label>\r\n                <input\r\n                    type='text'\r\n                    name='streetAndNumber'\r\n                    id='streetAndNumber'\r\n                    value={inputs.streetAndNumber}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <div className='Form-input-pair-inline'>\r\n                    <div>\r\n                        <label htmlFor='suburb'>Colonia</label>\r\n                        <input\r\n                            type='text'\r\n                            name='suburb'\r\n                            id='suburb'\r\n                            value={inputs.suburb}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='cp'>C.P.</label>\r\n                        <input\r\n                            type='text'\r\n                            name='cp'\r\n                            id='cp'\r\n                            value={inputs.cp}\r\n                            onChange={inputChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <label htmlFor='town'>Municipio</label>\r\n                <input\r\n                    type='text'\r\n                    name='town'\r\n                    id='town'\r\n                    value={inputs.town}\r\n                    onChange={inputChange}\r\n                    required\r\n                />\r\n                <div className='Form-input-pair-inline' style={{ display: isAutoRegister ? 'flex' : 'none' }}>\r\n                    <div style={{ width: '50%' }}>\r\n                        <label htmlFor='pass'>Contraseña</label>\r\n                        <input\r\n                            type='password'\r\n                            name='pass'\r\n                            id='pass'\r\n                            value={inputs.pass}\r\n                            onChange={inputChange}\r\n                            required={isAutoRegister}\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: '50%' }}>\r\n                        <label htmlFor='confirm'>Confirmar</label>\r\n                        <input\r\n                            type='password'\r\n                            name='confirm'\r\n                            id='confirm'\r\n                            value={inputs.confirm}\r\n                            onChange={inputChange}\r\n                            required={isAutoRegister}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !formMessage.isSuccess &&\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Guardar\"\r\n                        style={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            height: '40px',\r\n                            marginTop: '20px',\r\n                            fontSize: '1rem',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                    />\r\n                }\r\n            </form>\r\n            {\r\n                formMessage.msg.length !== 0 &&\r\n                <FormMessage\r\n                    msg={formMessage.msg}\r\n                    btnCloseClick={formMessage.isSuccess ? null : btnCloseFormMessageClick}\r\n                    isSuccess={formMessage.isSuccess}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormCustomerData","import React, { useContext, useEffect } from 'react'\r\n\r\n// components\r\nimport FormCustomerData from '../form/FormCustomerData'\r\n\r\n// context\r\nimport { Context } from '../../context/context'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst CustomerData = () => {\r\n  const { customerSession } = useContext(Context) \r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (customerSession === null) navigate('/not-found')    \r\n    return () => {}\r\n  }, [customerSession, navigate])  \r\n\r\n  return (\r\n    customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>MIS DATOS</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerData isAutoRegister={false} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerData","import { useCallback, useEffect, useState, useContext } from 'react';\r\n// components\r\nimport BtnSecundary from '../buttons/BtnSecundary';\r\n// context\r\nimport { Context } from '../../context/context'\r\n// css\r\nimport './ModalAddArticle.css';\r\n\r\nconst ModalAddArticle = ({ isShowModal, idOrder, btnAcceptClick, btnCancelClick }) => {\r\n  // context\r\n  const { onFetch, userSession, ENDPOINT } = useContext(Context)\r\n  // states\r\n  const [categories, setCategories] = useState([])\r\n  const [categoryNameSelected, setCategoryNameSelected] = useState('')\r\n  const [articles, setArticles] = useState([])\r\n\r\n  const loadCategories = useCallback(async () => {\r\n    let res = await onFetch(\r\n      '/category.php?fn=getAllCategories',\r\n      'GET', \r\n      userSession['token']\r\n      )\r\n    if (res !== null) {\r\n      res = res['categories']\r\n      setCategories(res)\r\n      setCategoryNameSelected(res[0].categoryName) // first category\r\n    }\r\n  }, [onFetch, userSession])\r\n\r\n  // effect init\r\n  useEffect(() => {\r\n    if (userSession) loadCategories()\r\n    return () => { }\r\n  }, [loadCategories, userSession])\r\n\r\n  const loadArticles = useCallback(async () => {\r\n    //console.log('loadArticles()')\r\n    const res = await onFetch(\r\n      `/article.php?fn=getAllArticlesFromCategoryName&categoryName=${categoryNameSelected}&endpoint=${ENDPOINT}`,\r\n      'GET',\r\n      userSession['token']\r\n    )\r\n    if (res !== null) setArticles(res['articles'])\r\n  }, [onFetch, categoryNameSelected, userSession, ENDPOINT])\r\n\r\n  // effect categoryNameSelected\r\n  useEffect(() => {\r\n    if (categoryNameSelected !== '') loadArticles()\r\n    return () => { }\r\n  }, [categoryNameSelected, loadArticles])\r\n\r\n  function selectChange(e) {\r\n    //console.log(e.target.value)\r\n    setCategoryNameSelected(e.target.value)\r\n  }\r\n\r\n  return (\r\n    userSession &&\r\n    <div className={isShowModal ? 'ModalAddArticle-background active' : 'ModalAddArticle-background'}>\r\n      <div className='ModalAddArticle-card'>\r\n        <h3>Agregar artículo al pedido: {idOrder}</h3>\r\n        <section className='ModalAddArticle-section-select'>\r\n          <label htmlFor=\"select\">Categoría </label>\r\n          <select\r\n            name=\"select\"\r\n            id=\"select\"\r\n            onChange={selectChange}\r\n          >\r\n            {\r\n              categories.map((category, i) =>\r\n                <option key={i} value={category.categoryName}>{category.categoryName}</option>\r\n              )\r\n            }\r\n          </select>\r\n        </section>\r\n        <table className='ModalAddArticle-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Descripción</th>\r\n              <th>Precio</th>\r\n              <th>Exist</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              articles.map((article, i) =>\r\n                <tr key={i}>\r\n                  <td className='ModalAddArticle-col-number'>{article.id}</td>\r\n                  <td style={{width: '50%'}}>{article.articleName}</td>\r\n                  <td className='ModalAddArticle-col-number'>${article.price}</td>\r\n                  <td className='ModalAddArticle-col-number'>{article.stock}</td>\r\n                  <td><button className='ModalAddArticle-btn-add' onClick={() => btnAcceptClick(article.id)}>Agregar</button></td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <div className='ModalAddArticle-actions'>\r\n          <BtnSecundary text='Cancelar' onClick={btnCancelClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalAddArticle","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport { useNavigate } from 'react-router';\r\n\r\n// component\r\nimport BtnDanger from '../buttons/BtnDanger'\r\nimport BtnPrimary from '../buttons/BtnPrimary'\r\nimport BtnAccept from '../buttons/BtnAccept'\r\nimport ModalDelete from '../modal_delete/ModalDelete'\r\n\r\n// icon\r\nimport { AiFillDelete, AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';\r\n\r\n// context\r\nimport { Context } from '../../context/context';\r\n\r\n// css\r\nimport './OrdersList.css'\r\nimport ModalAddArticle from '../modal_add_article/ModalAddArticle';\r\n\r\nconst OrdersList = () => {\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context)\r\n\r\n    // states\r\n    const [orders, setOrders] = useState([])\r\n    const [idOrderSelected, setIdOrderSelected] = useState(-1)\r\n    const [indexOrderSelected, setIndexOrderSelected] = useState(-1)\r\n    const [indexCustomerSelected, setIndexCustomerSelected] = useState(-1)\r\n    const [itemsOrder, setItemsOrder] = useState([])\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        isDeleteOrder: false,\r\n        isRestore: false,\r\n        subject: '',\r\n        id: -1\r\n    })\r\n    const [customers, setCustomers] = useState([])\r\n    const [dates, setDates] = useState({\r\n        firstDate: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10/*<- last number is days*/).toLocaleDateString('en-CA'), // yyyy-MM-dd\r\n        lastDate: new Date().toLocaleDateString('en-CA') // yyyy-MM-dd\r\n    })\r\n    const [stateModalAddArticle, setStateModalAddArticle] = useState({\r\n        isShowModal: false,\r\n        idOrder: -1\r\n    })\r\n\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    const loadItemsOrder = useCallback(async (idOrder) => {\r\n        const res = await onFetch(`/customer_authorized.php?fn=getItemsOrder&idOrder=${idOrder}`)\r\n        //console.log(res)\r\n\r\n        if (res !== null) setItemsOrder(res['itemsOrder'])\r\n    }, [onFetch])\r\n\r\n    const loadCustomers = useCallback(async () => {\r\n        const res = await onFetch('/customer.php?fn=getAllCustomers&txtSearch=',\r\n            'GET',\r\n            userSession['token']\r\n        )\r\n        if (res !== null) setCustomers(res['customers'])\r\n    }, [onFetch, userSession])\r\n\r\n    const loadOrders = useCallback(async () => {\r\n        const idCustomer = document.getElementById('select').value\r\n        const res = await onFetch(\r\n            `/order.php?fn=getAllOrders&idCustomer=${idCustomer}&firstDate=${dates.firstDate}&lastDate=${dates.lastDate}`,\r\n            'GET',\r\n            userSession.token\r\n        ) // -1 = all orders\r\n        //console.log(res);\r\n\r\n        if (res !== null) {\r\n            // update ordersList\r\n            rowUnselect()\r\n            setOrders(res['orders'])\r\n            setItemsOrder([])\r\n            //console.log('idOrderSelected after update orders: ', idOrderSelected)\r\n        }\r\n    }, [onFetch, userSession, dates.firstDate, dates.lastDate])\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect loadCustomers()')\r\n        //console.log('firstDate: ', firstDate)\r\n        if (userSession) loadCustomers()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [loadCustomers, navigate, userSession])\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect loadOrders()')\r\n\r\n        if (userSession) loadOrders()\r\n        else navigate('/not-found')\r\n\r\n        return () => { }\r\n    }, [userSession, navigate, loadOrders])\r\n\r\n    function comboCustomersChange(e) {\r\n        //console.log('comboCustomersChange', e.target.value)\r\n        loadOrders()\r\n    }\r\n\r\n    function rowUnselect() {\r\n        // clean selection\r\n        let row = document.getElementsByClassName('active')[0];\r\n        if (row) row.classList.remove('active');\r\n        setIdOrderSelected(-1)\r\n        setIndexOrderSelected(-1)\r\n        setIndexCustomerSelected(-1)\r\n    }\r\n\r\n    function rowClick(e) {\r\n        // console.log('idOrderSelected before rowClick', idOrderSelected);\r\n\r\n        // only click over <td>\r\n        if (e.target.tagName === 'TD') {\r\n            rowUnselect()\r\n\r\n            // get idOrder and select row\r\n            const idOrder = parseInt(e.target.parentElement.id) // text\r\n            setIdOrderSelected(idOrder)\r\n\r\n            // get index-order-selected\r\n            let i = orders.findIndex(order => order.id === idOrder)\r\n            setIndexOrderSelected(i)\r\n\r\n            // update index-customer-selected\r\n            i = customers.findIndex(customer => customer.id === orders[i].idCustomer)\r\n            //console.log('indexCustomerSelected: ', i)\r\n            setIndexCustomerSelected(i)\r\n\r\n            const row = document.getElementById(idOrder)\r\n            row.classList.add('active')\r\n            loadItemsOrder(idOrder)\r\n        }\r\n    }\r\n\r\n    function btnDeleteRestoringClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: true, // delete complete order\r\n            isRestore: true, // restore stock\r\n            subject: '¿Estás segur@ de cancelar el pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    function btnDeleteClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: true,\r\n            isRestore: false, // no restore stock\r\n            subject: '¿Estás segur@ de eliminar el pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    async function iconDeleteClick(id) {\r\n        //console.log('idOrderSelected before delete: ', idOrderSelected)\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            isDeleteOrder: false,\r\n            isRestore: false, // only when isDeleteOrder\r\n            subject: '¿Estás segur@ de eliminar el artículo del pedido?',\r\n            id: id // id to delete\r\n        });\r\n    }\r\n\r\n    const onBtnDeleteClick = async () => {\r\n        //console.log('idOrderSelected before onDelete: ', idOrderSelected);\r\n\r\n        // delete full order\r\n        let res\r\n        if (stateModalDelete.isDeleteOrder) {\r\n            let body\r\n            if (stateModalDelete.isRestore)\r\n                body = {\r\n                    id: stateModalDelete.id,\r\n                    isRestore: true\r\n                }\r\n            else\r\n                body = {\r\n                    id: stateModalDelete.id\r\n                }\r\n            res = await onFetch(\r\n                '/order.php?fn=deleteOrder',\r\n                'DELETE',\r\n                userSession.token,\r\n                body\r\n            );\r\n        }\r\n        // delete item\r\n        else {\r\n            res = await onFetch | (\r\n                '/order.php?fn=deleteItemOrder',\r\n                'DELETE',\r\n                userSession.token,\r\n                {\r\n                    id: stateModalDelete.id\r\n                }\r\n            );\r\n        }\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        const isSelectRow = !stateModalDelete.isDeleteOrder\r\n        if (res !== null) {\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                isDeleteOrder: false,\r\n                isRestore: false,\r\n                subject: '',\r\n                id: -1\r\n            });\r\n            //console.log('idOrderSelected before call loadOrders()', idOrderSelected)\r\n            if (!isSelectRow) loadOrders() // no select row\r\n            else reloadOrders()\r\n        }\r\n    }\r\n\r\n    const onBtnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            isDeleteOrder: false,\r\n            isRestore: false,\r\n            subject: '',\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    async function reloadOrders() {\r\n        await loadOrders()\r\n        setIdOrderSelected(idOrderSelected) // reload same id\r\n        let row = document.getElementById(idOrderSelected)\r\n        row.classList.add('active')\r\n        loadItemsOrder(idOrderSelected)\r\n\r\n        // get index of order selected\r\n        let i = orders.findIndex(order => order.id === idOrderSelected)\r\n        setIndexOrderSelected(i)\r\n        //console.log('indexOrderSelected: ', i)\r\n\r\n        // get index-customer-selected\r\n        i = customers.findIndex(customer => customer.id === orders[i].idCustomer)\r\n        // console.log('indexCustomerSelected: ', i)\r\n        // console.log('customerSelected', customers[i])\r\n        setIndexCustomerSelected(i)\r\n    }\r\n\r\n    async function iconMinusClick(id) {\r\n        const i = itemsOrder.findIndex(item => item.id === id)\r\n        if (itemsOrder[i].qty >= 2) {\r\n            const res = await onFetch(\r\n                '/order.php?fn=updateItemQty',\r\n                'PUT',\r\n                userSession.token,\r\n                {\r\n                    id: id,\r\n                    qty: -1\r\n                },\r\n            )\r\n            if (res !== null) reloadOrders()\r\n        }\r\n    }\r\n\r\n    async function iconPlusClick(id) {\r\n        const res = await onFetch(\r\n            '/order.php?fn=updateItemQty',\r\n            'PUT',\r\n            userSession.token,\r\n            { id: id, qty: 1 }\r\n        )\r\n        if (res !== null) reloadOrders()\r\n    }\r\n\r\n    function dateChange(e) {\r\n        setDates({\r\n            ...dates, // dame values\r\n            [e.target.name]: e.target.value // only change 1 date named e.target.name\r\n        })\r\n    }\r\n\r\n    async function btnDeliverClick(id) {\r\n        const res = await onFetch(\r\n            `/order.php?fn=deliverOrder&idOrder=${id}`,\r\n            'PUT',\r\n            userSession.token,\r\n            {}\r\n        )\r\n        if (res !== null) {\r\n            if (idOrderSelected === -1) loadOrders()\r\n            else reloadOrders()\r\n        }\r\n    }\r\n\r\n    /*------------ MODAL ADD ARTICLE ---------------*/\r\n\r\n    function btnAddClick() {\r\n        setStateModalAddArticle({\r\n            isShowModal: true,\r\n            idOrder: idOrderSelected\r\n        });\r\n    }\r\n\r\n    async function onBtnAcceptAddArticleClick(id) {\r\n        setStateModalAddArticle({\r\n            ...stateModalAddArticle, // same values\r\n            isShowModal: false, idOrder: -1 // only change this property\r\n        });\r\n\r\n        // insert item to order\r\n        let res = await onFetch(\r\n            '/order.php?fn=insertItemOrder',\r\n            'POST',\r\n            userSession.token,\r\n            {\r\n                idOrder: idOrderSelected,\r\n                idArticle: id,\r\n                qty: 1\r\n            }\r\n        )\r\n        if (res !== null) reloadOrders()\r\n    }\r\n\r\n    function onBtnCancelAddArticleClick() {\r\n        setStateModalAddArticle({\r\n            ...stateModalAddArticle, // same values\r\n            isShowModal: false, idOrder: -1 // only change this property\r\n        });\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        // <div className='Orders-table-detail'>\r\n        <div className='Wrapper-flex'>\r\n            <div className=\"Orders-wrapper-table\">\r\n                <table className='Orders-table'>\r\n                    <caption><h3>Pedidos</h3></caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <td colSpan={6}>\r\n                                <label htmlFor=\"firstDate\">Desde </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"firstDate\"\r\n                                    id=\"firstDate\"\r\n                                    className='Orders-input Orders-date'\r\n                                    value={dates.firstDate}\r\n                                    onChange={dateChange}\r\n                                />\r\n                                <label htmlFor=\"lastDate\">  Hasta </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"lastDate\"\r\n                                    id=\"lastDate\"\r\n                                    className='Orders-input Orders-date'\r\n                                    value={dates.lastDate}\r\n                                    onChange={dateChange}\r\n                                />\r\n                            </td>\r\n                            <td colSpan={2}>\r\n                                <label htmlFor=\"select\">Cliente </label>\r\n                                <select\r\n                                    className='Orders-input'\r\n                                    name='select'\r\n                                    id='select'\r\n                                    onChange={comboCustomersChange}\r\n                                    style={{\r\n                                        width: '120px'\r\n                                    }}\r\n                                >\r\n                                    <option value='-1'>Todos</option>\r\n                                    {\r\n                                        customers.map(customer =>\r\n                                            <option key={customer.id} value={customer.id}>{customer.fullname} {'(' + customer.email + ')'}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Orden</th>\r\n                            <th>Fecha</th>\r\n                            <th>Cliente</th>\r\n                            <th>Arts</th>\r\n                            <th>Total</th>\r\n                            <th>Referencia pago</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            orders.map((order, i) =>\r\n                                <tr key={order.id} id={order.id} onClick={rowClick}>\r\n                                    <td className='Orders-col-number'>{order.id}</td>\r\n                                    <td>{order.created}</td>\r\n                                    <td>{order.fullname}</td>\r\n                                    <td className='Orders-col-number'>{order.items}</td>\r\n                                    <td className='Orders-col-number'>${new Intl.NumberFormat('es-MX', {}).format(order.total)}</td>\r\n                                    <td>{order.tokenPay}</td>\r\n                                    <td>\r\n                                        { // show button deliver if not is delivered\r\n                                            order.isDelivered\r\n                                                ? <code className='Orders-label'>{'ENTREGADO\\n' + order.dateDelivered}</code>\r\n                                                : <BtnPrimary text='Entregar' onClick={() => btnDeliverClick(order.id)} />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        { // isDelivered Delete, else Cancel\r\n                                            order.isDelivered\r\n                                                ? userSession.isAdmin && <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(order.id)} />\r\n                                                : <BtnDanger text='Cancelar' onClick={() => btnDeleteRestoringClick(order.id)} />\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colSpan={4}>{orders.length} {orders.length !== 1 ? 'órdenes' : 'órden'}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n            {/* ---------------------- TICKET ----------------------- */}\r\n            <article className='Orders-detail Card'>\r\n                <table className='Orders-table-items'>\r\n                    {\r\n                        idOrderSelected > -1 &&\r\n                        <>\r\n                            <caption><b>Pedido: {idOrderSelected}</b></caption>\r\n                            {indexCustomerSelected > -1 &&\r\n                                <>\r\n                                    <caption>{customers[indexCustomerSelected].fullname}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].email}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].phone}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].streetAndNumber}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].suburb}, CP: {customers[indexCustomerSelected].cp}</caption>\r\n                                    <caption>{customers[indexCustomerSelected].town}</caption>\r\n                                    {\r\n                                        !orders[indexOrderSelected].isDelivered &&\r\n                                        <caption style={{ textAlign: 'end' }}><BtnAccept text='Agregar' onClick={btnAddClick} /></caption>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '35%' }}>Cant</th>\r\n                            <th style={{ width: '45%' }}>Descripción</th>\r\n                            <th style={{ width: '10%' }}>Precio</th>\r\n                            <th style={{ width: '10%' }}>Importe</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            itemsOrder.map(item =>\r\n                                <tr key={item.id}>\r\n                                    <td>\r\n                                        { // only show buttons minus-plus if not isDelivered\r\n                                            indexOrderSelected > -1 && orders[indexOrderSelected].isDelivered\r\n                                                ? item.qty\r\n                                                :\r\n                                                <div className='Orders-wrapper-qty'>\r\n                                                    <AiOutlineMinus className='Orders-icon' onClick={() => iconMinusClick(item.id)} />\r\n                                                    {item.qty}\r\n                                                    <AiOutlinePlus className='Orders-icon' onClick={() => iconPlusClick(item.id)} />\r\n                                                </div>\r\n                                        }\r\n                                    </td>\r\n                                    <td className='Orders-col-text'>{item.articleName}</td>\r\n                                    <td className='Orders-col-number'>{item.price}</td>\r\n                                    <td className='Orders-col-number'>{item.amount}</td>\r\n                                    <td>\r\n                                        { // only if items > 1 and !order.isDelivered\r\n                                            itemsOrder.length > 1 && indexOrderSelected > -1 && !orders[indexOrderSelected].isDelivered &&\r\n                                            <AiFillDelete className='Orders-icon-delete' onClick={() => iconDeleteClick(item.id)} />\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    {\r\n                        idOrderSelected > -1 &&\r\n                        <tfoot className='Orders-detail-data'>\r\n                            <tr>\r\n                                <td colSpan={2}>{itemsOrder.length} artículos</td>\r\n                                <td className='Orders-col-number'>Total</td>\r\n                                <td className='Orders-col-number'>${new Intl.NumberFormat('es-MX', { maximumFractionDigits: 2 }).format(orders.find(order => order.id === idOrderSelected).total)}</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    }\r\n\r\n                </table>\r\n            </article>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete.isShowModal}\r\n                subject={stateModalDelete.subject}\r\n                btnDeleteClick={onBtnDeleteClick}\r\n                btnCancelClick={onBtnCancelClick}\r\n            />\r\n            <ModalAddArticle\r\n                isShowModal={stateModalAddArticle.isShowModal}\r\n                idOrder={stateModalAddArticle.idOrder}\r\n                btnAcceptClick={onBtnAcceptAddArticleClick}\r\n                btnCancelClick={onBtnCancelAddArticleClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersList","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotFound = () => {\r\n  window.history.replaceState(null, '', '/not-found')\r\n  return (\r\n    <div \r\n    className='Wrapper-flex' \r\n    style={{\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }}\r\n    >\r\n        <h3>Página no encontrada</h3>\r\n        <code>(Error 404)</code>\r\n        <Link to='/'>\r\n            <p>INICIO</p>\r\n        </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport FormCustomerData from '../form/FormCustomerData'\r\n\r\nconst CustomerRegister = () => {\r\n  return (\r\n    <>\r\n      <p className='ProductsTitle'>REGISTRO DE CLIENTE</p>\r\n      <div className='Wrapper-flex'>\r\n        <FormCustomerData isAutoRegister={true} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerRegister","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n// context\r\nimport { Context } from '../../context/context'\r\n// components\r\nimport FormMessage from '../form/FormMessage'\r\n\r\nconst CustomerConfirmEmail = () => {\r\n  // context\r\n  const { customerSession, onFetch, TOKEN_DEFAULT } = useContext(Context)\r\n  // params\r\n  const params = useParams()\r\n  // states\r\n  const [idCustomer, setIdCustomer] = useState(-1)\r\n  const [formMessage, setFormMessage] = useState({\r\n    msg: '',\r\n    isSuccess: false\r\n  })\r\n\r\n  // navigate\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    //console.log(params)\r\n    window.history.replaceState(null, '', '/customer-confirm-email') // clean token of url\r\n\r\n    async function getIdCustomerFromToken() {\r\n      // get idCustomer from token (-1 not exists); if exists change token\r\n      let res = await onFetch(`/index.php?fn=getIdCustomerFromToken&token=${params['token']}`)\r\n      if (res !== null) {\r\n        //console.log(res)\r\n        setIdCustomer(res['id'])\r\n\r\n        // verify if idCustomer > -1\r\n        if (res['id'] > -1) {\r\n          // activate account of customer\r\n          res = await onFetch(\r\n            `/index.php?fn=confirmEmailCustomer`,\r\n            'PUT',\r\n            TOKEN_DEFAULT,\r\n            {\r\n              id: res['id']\r\n            }\r\n          )\r\n          setFormMessage({\r\n            msg: 'Tu correo ha sido confirmado.',\r\n            isSuccess: true\r\n          })\r\n        }\r\n        else {\r\n          setFormMessage({\r\n            msg: 'El link de confirmación no es válido.',\r\n            isSuccess: false\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!customerSession && params['token']) getIdCustomerFromToken()\r\n    else navigate('/not-found')\r\n  }, [customerSession, params, navigate, onFetch, TOKEN_DEFAULT])\r\n\r\n  return (\r\n    !customerSession &&\r\n    <>\r\n      <p className='ProductsTitle'>CONFIRMAR CORREO</p>\r\n      <div className='Wrapper-flex'>\r\n        <div className='Card' style={{ width: '300px' }}>\r\n          {\r\n            formMessage.msg.length > 0 &&\r\n            <>\r\n              <FormMessage\r\n                msg={formMessage.msg}\r\n                isSuccess={formMessage.isSuccess}\r\n              />\r\n\r\n              {idCustomer > -1 &&\r\n                <Link to='/input'>\r\n                  <p>Iniciar sesión</p>\r\n                </Link>\r\n              }\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerConfirmEmail","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\n// context\r\nimport { Context } from '../../context/context'\r\n// components\r\nimport FormMessage from './FormMessage'\r\n\r\nconst CustomerPassLost = ({ isAdmin }) => {\r\n    // context\r\n    const { customerSession, userSession, onFetch } = useContext(Context)\r\n    // states\r\n    const [email, setEmail] = useState('')\r\n    const [formMessage, setFormMessage] = useState({\r\n        msg: '',\r\n        isSuccess: false\r\n    })\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (customerSession || userSession) navigate('/not-found')        \r\n    }, [customerSession, userSession, navigate])\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        let res\r\n        if (isAdmin) res = await onFetch(`/index.php?fn=getIdUserFromEmail&email=${email}`)\r\n        else res = await onFetch(`/index.php?fn=getIdCustomerFromEmail&email=${email}`)\r\n        \r\n        //console.log(res) // {idCustomer: <int>}\r\n        if (res !== null) {\r\n            if (res['id'] > -1) {\r\n                // send email for recovery pass\r\n                if (isAdmin) res = await onFetch(`/index.php?fn=sendUserEmailRecoveryPass&id=${res['id']}&email=${email}`)\r\n                else res = await onFetch(`/index.php?fn=sendCustomerEmailRecoveryPass&id=${res['id']}&email=${email}`)\r\n                //console.log(res) // isSendedEmailRecoveryPass: bool\r\n                if (res !== null && res['isSendedEmailRecoveryPass']) {\r\n                    setFormMessage({\r\n                        msg: 'Correo enviado. Ingresa a tu correo\\npara restaurar tu contraseña.',\r\n                        isSuccess: true\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                setFormMessage({\r\n                    msg: 'El correo no se encuentra registrado',\r\n                    isSuccess: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    function inputChange(e) {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function btnCloseClick() {\r\n        setFormMessage({\r\n            ...formMessage, // same values\r\n            msg: '' // only change this value\r\n        })\r\n    }\r\n\r\n    return (\r\n        !customerSession &&\r\n        <>\r\n            <p className='ProductsTitle'>OLVIDÉ MI CONTRASEÑA</p>\r\n            <div className='Wrapper-flex'>\r\n                <div className='FormCard'>\r\n                    {!formMessage.isSuccess &&\r\n                        <form onSubmit={onSubmit}>\r\n                            <input\r\n                                type='email'\r\n                                name='email'\r\n                                placeholder='Correo'\r\n                                value={email}\r\n                                onChange={inputChange}\r\n                                required\r\n                            />\r\n                            <input type='submit' value='Enviarme correo de restauración' />\r\n                        </form>\r\n                    }\r\n                    {\r\n                        formMessage.msg.length > 0 &&\r\n                        <FormMessage msg={formMessage.msg} btnCloseClick={btnCloseClick} isSuccess={formMessage.isSuccess} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPassLost","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n// context\r\nimport { Context } from '../../context/context'\r\n// components\r\nimport FormMessage from './FormMessage'\r\n\r\nconst CustomerPassRestore = ({ isAdmin }) => {\r\n    // context\r\n    const { customerSession, onFetch, TOKEN_DEFAULT } = useContext(Context)\r\n    // params\r\n    const params = useParams()\r\n    // states\r\n    const [id, setId] = useState(-1)\r\n    const [inputs, setInputs] = useState({\r\n        pass: '',\r\n        confirm: ''\r\n    })\r\n    const [formMessage, setFormMessage] = useState({\r\n        msg: '',\r\n        isSuccess: false\r\n    })\r\n    // navigate\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        //console.log(params)\r\n        const url = isAdmin ? '/user-pass-restore' : '/customer-pass-restore' \r\n        window.history.replaceState(null, '', url)\r\n\r\n        async function getIdCustomerFromToken() {\r\n            // get id from token (-1 not exists)\r\n            let res\r\n            if (isAdmin) res = await onFetch(`/index.php?fn=getIdUserFromToken&token=${params['token']}`) \r\n            else res = await onFetch(`/index.php?fn=getIdCustomerFromToken&token=${params['token']}`)\r\n            //console.log(res) // null|{idCustomer: <int>}\r\n            if (res !== null) {\r\n                setId(res['id'])\r\n\r\n                // verify if id > -1\r\n                if (res['id'] > -1) {\r\n                    // hide message\r\n                    setFormMessage({\r\n                        msg: '',\r\n                        isSuccess: false\r\n                    })\r\n                }\r\n                else {\r\n                    // show message\r\n                    setFormMessage({\r\n                        msg: 'El link para restaurar tu contraseña\\nno es válido.',\r\n                        isSuccess: false\r\n                    })                    \r\n                }\r\n            }\r\n        }\r\n\r\n        if (!customerSession && params['token']) getIdCustomerFromToken()\r\n        else navigate('/not-found')\r\n    }, [customerSession, params, navigate, onFetch, isAdmin])\r\n\r\n    function inputChange(e) {\r\n        setInputs({\r\n            ...inputs, // same values\r\n            [e.target.name]: e.target.value // only change 1 value named equals that e.target.name \r\n        })\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // verify if pass and confirm are equals\r\n        if (inputs.pass === inputs.confirm) {\r\n            // update new pass\r\n            let res \r\n            if (isAdmin) {\r\n                res = await onFetch(\r\n                    '/index.php?fn=changePassUser', \r\n                    'PUT',\r\n                    TOKEN_DEFAULT,\r\n                    {\r\n                        id: id, \r\n                        pass: inputs.pass\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                res = await onFetch(\r\n                    '/index.php?fn=changePassCustomer', \r\n                    'PUT',\r\n                    TOKEN_DEFAULT,\r\n                    {\r\n                        id: id, \r\n                        pass: inputs.pass\r\n                    }\r\n                )\r\n            }\r\n            //console.log(res) // null|{}\r\n            if (res !== null) {\r\n                setInputs({\r\n                    pass: '',\r\n                    confirm: ''\r\n                })\r\n                setFormMessage({\r\n                    msg: 'Tu contraseña ha sido restaurada.',\r\n                    isSuccess: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            setInputs({\r\n                pass: '',\r\n                confirm: ''\r\n            })\r\n            setFormMessage({\r\n                msg: 'Las contraseñas son diferentes.',\r\n                isSuccess: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        !customerSession && params['token'] &&\r\n        <>\r\n            <p className='ProductsTitle'>RESTAURAR CONTRASEÑA</p>\r\n            <div className='Wrapper-flex'>\r\n                <div className='FormCard'>\r\n                    {\r\n                        id > -1 && !formMessage.isSuccess &&\r\n                        <form onSubmit={onSubmit}>\r\n                            <input\r\n                                type='password'\r\n                                name='pass'\r\n                                placeholder='Nueva contraseña'\r\n                                value={inputs.pass}\r\n                                onChange={inputChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                name='confirm'\r\n                                placeholder='Confirmar nueva contraseña'\r\n                                value={inputs.confirm}\r\n                                onChange={inputChange}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type='submit'\r\n                                value='Aceptar'\r\n                            />\r\n                        </form>\r\n                    }\r\n                    {\r\n                        formMessage.msg.length > 0 &&\r\n                        <FormMessage msg={formMessage.msg} isSuccess={formMessage.isSuccess} />\r\n                    }\r\n                    {\r\n                        formMessage.isSuccess &&\r\n                        <Link to={isAdmin ? '/admin' : '/input'}>\r\n                            <p>Iniciar sesión</p>\r\n                        </Link>\r\n                    } \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPassRestore","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n// context\r\nimport {Context } from '../../context/context';\r\n// components\r\nimport BtnAccept from '../buttons/BtnAccept';\r\nimport ModalDelete from '../modal_delete/ModalDelete';\r\n// icons\r\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai'\r\n// css\r\nimport './CategoriesList.css'\r\n\r\nconst CategoriesList = () => {\r\n    //console.log('>>> Categories load...');\r\n\r\n    // context\r\n    const { onFetch, userSession } = useContext(Context);\r\n\r\n    // states\r\n    const [categories, setCategories] = useState([]);\r\n    const [stateModalDelete, setStateModalDelete] = useState({\r\n        isShowModal: false,\r\n        id: -1\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //console.log('useEffect Categories');\r\n\r\n        async function categoriesLoad() {\r\n            // load categories\r\n            const json = await onFetch(\r\n                '/category.php?fn=getAllCategories',\r\n                'GET', \r\n                userSession['token']\r\n                );\r\n            //console.log(json);\r\n\r\n            if (json !== null) setCategories(json['categories'])\r\n        }\r\n\r\n        if (userSession) categoriesLoad();\r\n        else navigate('/not-found');\r\n\r\n        return () => {\r\n            //console.log('useEffect bye') \r\n        }\r\n\r\n    }, [onFetch, navigate, userSession, stateModalDelete]);\r\n\r\n    const btnDeleteClick = (id) => {\r\n        //console.log('id before delete: ', id);\r\n\r\n        setStateModalDelete({\r\n            isShowModal: true, // show-Modal\r\n            id: id // only change id\r\n        });\r\n        //console.log('after: ', stateModalDelete);\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        //console.log('to delete: ', stateModalDelete['id']);\r\n\r\n        const json = await onFetch(\r\n            '/category.php?fn=deleteCategory',\r\n            'DELETE',\r\n            userSession['token'],\r\n            {\r\n                id: stateModalDelete['id']\r\n            }\r\n        );\r\n        //console.log(json);\r\n\r\n        // to change stateModalDelete, re-execute useEffect and refresh users\r\n        if (json !== null)\r\n            setStateModalDelete({\r\n                isShowModal: false, // hide-modal \r\n                id: -1\r\n            });\r\n    }\r\n\r\n    const btnCancelClick = () => {\r\n        setStateModalDelete({\r\n            isShowModal: false,\r\n            id: -1\r\n        });\r\n    }\r\n\r\n    return (\r\n        userSession &&\r\n        <div className='Wrapper-flex'>\r\n            <div style={{ overflow: 'auto' }}>\r\n                <table className=\"Table CategoriesList-table\">\r\n                    <caption><h2>Categorías</h2></caption>\r\n                    <thead>                        \r\n                        <tr>\r\n                            <th className='CategoriesList-col-description'>Descripción</th>\r\n                            <th>Disponible</th>\r\n                            <th>\r\n                                <Link to=\"/category-insert\" /*style={{ textDecoration: '' }}*/>\r\n                                    <BtnAccept text='Nueva' style={{ width: '50px' }} />\r\n                                </Link>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            categories.map(category =>\r\n                                <tr key={category.id}>\r\n                                    <td>{category.categoryName}</td>\r\n                                    <td className=\"Table-cell-center\">{category.isAvailable && <AiFillCheckCircle className=\"Table-icon\" />}</td>\r\n                                    <td>\r\n                                        { // only if is admin\r\n                                            userSession.isAdmin &&\r\n                                            <>\r\n                                                {/* <BtnPrimary text='Modificar' onClick={() => navigate(`/category-update/${category.id}`)} /> */}\r\n                                                {/* <BtnDanger text='Eliminar' onClick={() => btnDeleteClick(category.id)} /> */}\r\n                                                <AiFillEdit\r\n                                                    className='CategoriesList-icon-edit'\r\n                                                    onClick={() => navigate(`/category-update/${category.id}`)}\r\n                                                />\r\n                                                <AiFillDelete\r\n                                                    className='CategoriesList-icon-delete'\r\n                                                    onClick={() => btnDeleteClick(category.id)}\r\n                                                />\r\n                                            </>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            {/* <td colSpan={5}>{users.length} usuarios</td> */}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <ModalDelete\r\n                isShowModal={stateModalDelete['isShowModal']}\r\n                subject={'¿Estás segur@ de eliminar la categoría y todos sus productos?'}\r\n                btnDeleteClick={onDelete}\r\n                btnCancelClick={btnCancelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesList","import React, { useCallback, useContext, useEffect/*, useState*/ } from 'react'\r\nimport { useNavigate } from 'react-router'\r\n// context\r\nimport { Context } from '../../context/context'\r\n\r\nconst PayPal = () => {\r\n  // context\r\n  const { \r\n    customerSession, \r\n    cart, \r\n    PAYPAL_ENDPOINT, \r\n    PAYPAL_CLIENTID, \r\n    PAYPAL_SECRET \r\n  } = useContext(Context)\r\n  \r\n  // navigate\r\n  const navigate = useNavigate()\r\n\r\n  const createOrder = useCallback(async () => {\r\n    // credentials paypal to base64\r\n    const auth = btoa(`${PAYPAL_CLIENTID}:${PAYPAL_SECRET}`)\r\n    \r\n    // generate items of purchase\r\n    const purchaseUnits = cart.map(article => {\r\n      return {\r\n        reference_id: article['id'], \r\n        amount: {\r\n          currency_code: 'MXN',\r\n          value: article['amount']\r\n        },\r\n        description: article['articleName']\r\n      }\r\n    })\r\n\r\n    const order = {\r\n      intent: 'CAPTURE',\r\n      purchase_units: purchaseUnits,\r\n      application_context: {\r\n        brand_name: 'DAMAX BOUTIQUE',\r\n        landing_page: 'LOGIN',\r\n        user_action: 'PAY_NOW',\r\n        return_url: 'http://localhost:3000/cart',\r\n        cancel_url: 'http://localhost:3000/cart'\r\n      }      \r\n    }\r\n\r\n    // fetch POST\r\n    let res = null\r\n    await fetch(`${PAYPAL_ENDPOINT}/v2/checkout/orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Basic ' + auth\r\n      },\r\n      body: JSON.stringify(order)\r\n    }).then(data => data.text())\r\n    .then(txt => {\r\n      console.log('txt:', txt)\r\n      res = JSON.parse(txt)\r\n    })\r\n    .catch(error => console.error('error:', error))\r\n\r\n    console.log('res:', res)\r\n    if (res['status'] && res['status'] === 'CREATED') {\r\n      // redirect to PAYPAL; passCustomer: wo=9[R%z\r\n      //console.log(res['links'][1]['href'])\r\n      window.location.replace(res['links'][1]['href'])      \r\n    }\r\n    else {\r\n      console.log('ERROR AL REALIZAR ORDEN')\r\n    }\r\n\r\n\r\n  }, [PAYPAL_CLIENTID, PAYPAL_ENDPOINT, PAYPAL_SECRET, cart])\r\n      \r\n  useEffect(() => {\r\n    if (customerSession) createOrder()\r\n    else navigate('not-found')\r\n    \r\n    return () => {}\r\n  }, [customerSession, createOrder, navigate])\r\n\r\n  return (\r\n      customerSession && \r\n      <div className=\"Wrapper-flex\">\r\n          <div>Generando orden PayPal...</div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PayPal","// react\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// context\r\nimport { ContextProvider } from './context/context';\r\n// components\r\nimport Header from \"./components/header/Header\";\r\nimport Welcome from './components/welcome/Welcome';\r\nimport UserInput from './components/users/UserInput';\r\nimport UsersList from \"./components/users/UsersList\";\r\nimport UserInsert from \"./components/users/UserInsert\";\r\nimport UserUpdate from \"./components/users/UserUpdate\";\r\nimport UserChangePass from \"./components/users/UserChangePass\";\r\nimport CustomerInput from './components/customers/CustomerInput';\r\nimport CategoryForm from './components/categories/CategoryForm';\r\nimport ArticlesList from './components/articles/ArticlesList';\r\nimport ArticleForm from './components/articles/ArticleForm';\r\nimport Products from './components/products/Products';\r\nimport ProductDetail from './components/products/ProductDetail';\r\nimport Customers from './components/customers/CustomersList';\r\nimport CustomerForm from './components/customers/CustomerForm';\r\nimport Cart from './components/cart/Cart';\r\nimport Footer from './components/footer/Footer';\r\nimport CustomerOrdersList from './components/customer_authorized/CustomerOrdersList';\r\nimport CustomerPass from './components/customer_authorized/CustomerPass';\r\nimport CustomerData from './components/customer_authorized/CustomerData';\r\nimport OrdersList from './components/orders/OrdersList';\r\nimport NotFound from './components/not_found/NotFound';\r\nimport CustomerRegister from './components/customers/CustomerRegister';\r\nimport CustomerConfirmEmail from './components/customers/CustomerConfirmEmail';\r\nimport FormPassLost from './components/form/FormPassLost';\r\nimport FormPassRestore from './components/form/FormPassRestore';\r\nimport CategoriesList from './components/categories/CategoriesList';\r\nimport PayPal from './components/paypal/PayPal';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className='Body-wrapper'>\r\n            {console.log('>>>> App render <<<<<')}\r\n            <Router basename='/web-damaxboutique'>\r\n                <ContextProvider>\r\n                    <Header />\r\n                    <main className='Main'>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Welcome />} />\r\n                            {/* --------------------- CATALOG ------------------------ */}\r\n                            <Route path=\"/products/:search/:txtSearch\" element={<Products />} />\r\n                            <Route path=\"/product-detail/:id\" element={<ProductDetail />} />\r\n                            {/* ---------------- INPUT CUSTOMER OR USER ------------- */}\r\n                            <Route path=\"/input\" element={<CustomerInput />} />\r\n                            <Route path=\"/admin\" element={<UserInput />} />\r\n                            {/* ----------------------- USER ------------------------ */}\r\n                            <Route path=\"/users\" element={<UsersList />} />\r\n                            <Route path=\"/user-insert\" element={<UserInsert />} />\r\n                            <Route path=\"/user-update/:id\" element={<UserUpdate />} />\r\n                            <Route path=\"/user-pass\" element={<UserChangePass />} />\r\n                            <Route path=\"/user-pass-lost\" element={<FormPassLost isAdmin={true} />} />\r\n                            <Route path=\"/user-pass-restore/:token\" element={<FormPassRestore isAdmin={true} />} />\r\n                            {/* ---------------------- CATEGORIES --------------------- */}\r\n                            <Route path=\"/categories\" element={<CategoriesList />} />\r\n                            <Route path=\"/category-insert\" element={<CategoryForm />} />\r\n                            <Route path=\"/category-update/:id\" element={<CategoryForm />} />\r\n                            {/* ----------------------- ARTICLES ---------------------- */}\r\n                            <Route path=\"/articles\" element={<ArticlesList />} />\r\n                            <Route path=\"/article-insert\" element={<ArticleForm />} />\r\n                            <Route path=\"/article-update/:id\" element={<ArticleForm />} />\r\n                            {/* ----------------------- ORDERS ------------------------ */}\r\n                            <Route path=\"/orders\" element={<OrdersList />} />\r\n                            {/* ------------------- CUSTOMERS ------------------------- */}\r\n                            <Route path='/customers' element={<Customers />} />\r\n                            <Route path=\"/customer-insert\" element={<CustomerForm />} />\r\n                            <Route path=\"/customer-update/:id\" element={<CustomerForm />} />\r\n                            <Route path=\"/customer-register\" element={<CustomerRegister />} />\r\n                            <Route path=\"/customer-confirm-email/:token\" element={<CustomerConfirmEmail />} />\r\n                            <Route path=\"/customer-pass-lost\" element={<FormPassLost isAdmin={false} />} />\r\n                            <Route path=\"/customer-pass-restore/:token\" element={<FormPassRestore isAdmin={false} />} />\r\n                            {/* -------------- CUSTOMER AUTHORIZED -------------------- */}\r\n                            <Route path=\"/cart\" element={<Cart />} />\r\n                            <Route path=\"/customer-orders\" element={<CustomerOrdersList />} />\r\n                            <Route path=\"/customer-pass\" element={<CustomerPass />} />\r\n                            <Route path=\"/customer-data\" element={<CustomerData />} />\r\n                            {/* --------------------- PAYPAL ----------------------------- */}\r\n                            <Route path=\"/paypal\" element={<PayPal />} />\r\n                            {/* ---------------- PAGE NOT-FOUND ----------------------- */}\r\n                            <Route path=\"/*\" element={<NotFound />} />\r\n                            <Route path=\"/not-found\" element={<NotFound />} />\r\n                        </Routes>\r\n                    </main>\r\n                    <Footer />\r\n                </ContextProvider>\r\n            </Router>\r\n        </div>\r\n    );\r\n}","import RenderDOM from 'react-dom';\nimport './App.css';\nimport App from './App'\n\nRenderDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}